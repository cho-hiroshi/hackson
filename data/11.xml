<doc><field name="id">9999</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">When loaded the pass will automatically register itself to run afterLLVM's regular peephole optimizations.For example:Or to run the pass on its own:Or use the drop-in compiler replacements sclang and sclang++:Compilation using Souper can be sped up by caching queries</field></doc>
<doc><field name="id">10000</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">By default, Souperuses a non-persistent RAM-based cache</field></doc>
<doc><field name="id">10001</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">The -souper-external-cache flag causesSouper to cache its queries in a Redis database</field></doc>
<doc><field name="id">10002</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">For this to work, Redis >=1.2.0 must be installed on the machine where you are running Souper and a Redisserver must be listening on the default port  6379 .sclang uses external caching by default since this often gives a substantialspeedup for large compilations</field></doc>
<doc><field name="id">10003</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">This behavior may be disabled by setting theSOUPER_NO_EXTERNAL_CACHE environment variable</field></doc>
<doc><field name="id">10004</field><field name="title">google-souper</field><field name="session">Using Souper</field><field name="sentence">Souper's Redis cache does not yethave any support for versioning; you should stop Redis and delete its dump fileany time Souper is upgraded.</field></doc>
<doc><field name="id">10005</field><field name="title">google-souper</field><field name="session">Disclaimer</field><field name="sentence">Please note that although some of the authors are employed by Google, thisis not an official Google product.</field></doc>
<doc><field name="id">10006</field><field name="title">google-source_transformer.dart</field><field name="session">source_transformer</field><field name="sentence">_NOTE: This project is **not***This package is currently in development**Not to be confused with source_transformer is a library for building and applyingmodifications to existing files, primarily .dart source files, and tocommit the results of those changes.Example uses:import 'package:source_transformer/source_transformer.dart';main List paths  async {  await runTransformer const DeduplicateDirectives  , paths ;</field></doc>
<doc><field name="id">10007</field><field name="title">google-spatial-media</field><field name="session">Spatial Media</field><field name="sentence">A collection of specifications and tools for 360&deg; video and spatial audio, including:</field></doc>
<doc><field name="id">10008</field><field name="title">google-spline</field><field name="session">Disclaimers</field><field name="sentence">**This is not an official Google product.**</field></doc>
<doc><field name="id">10009</field><field name="title">google-sprockets</field><field name="session">Sprockets     ! LICENSE   LICENSE</field><field name="sentence">*Last updated at 2016-11-30*</field></doc>
<doc><field name="id">10010</field><field name="title">google-sprockets</field><field name="session">Disclaimer</field><field name="sentence">Sprockets is a framework for conformance testing based on state transitions.To run conformance tests, Sprockets users should provide:test_driver.py is the main program made of Python to run conformance tests specified by users with a test manifest, STL files, and python libraries.</field></doc>
<doc><field name="id">10011</field><field name="title">google-sprockets</field><field name="session">2.Environment Setup</field><field name="sentence">To run test_driver.py, extra python packages below are necessary:</field></doc>
<doc><field name="id">10012</field><field name="title">google-sprockets</field><field name="session">2.Options</field><field name="sentence">usage: test_driver.py  -h   -a MANIFEST_ARGS   -d  manifestpositional arguments:  manifestoptional arguments:  -h, --help  -a MANIFEST_ARGS, --manifest-args MANIFEST_ARGS  -d, --debug</field></doc>
<doc><field name="id">10013</field><field name="title">google-sprockets</field><field name="session">Test Manifest</field><field name="sentence">The **test manifest*</field></doc>
<doc><field name="id">10014</field><field name="title">google-sprockets</field><field name="session">3.Example manifest</field><field name="sentence">example.test:  'stl_files':     ,   ,  },</field></doc>
<doc><field name="id">10015</field><field name="title">google-sprockets</field><field name="session">3.stl_files</field><field name="sentence">The ‘stl_files’ field must be a list of strings naming the STL files that include the transitions to be tested</field></doc>
<doc><field name="id">10016</field><field name="title">google-sprockets</field><field name="session">3.stl_files</field><field name="sentence">The filenames here should be relative to the manifest .test file</field></doc>
<doc><field name="id">10017</field><field name="title">google-sprockets</field><field name="session">3.stl_files</field><field name="sentence">In the example above,  example.test  example/example.test  and  example_base.stl  example/example_base.stl  are in the same directory.</field></doc>
<doc><field name="id">10018</field><field name="title">google-sprockets</field><field name="session">3.roles</field><field name="sentence">The ‘roles’ field must be list of dicts</field></doc>
<doc><field name="id">10019</field><field name="title">google-sprockets</field><field name="session">3.roles</field><field name="sentence">Each dict element in the list describes one role</field></doc>
<doc><field name="id">10020</field><field name="title">google-sprockets</field><field name="session">3.roles</field><field name="sentence">These are the roles described in the stl_files listed in the ‘stl_files’ field</field></doc>
<doc><field name="id">10021</field><field name="title">google-sprockets</field><field name="session">3.roles</field><field name="sentence">In the above example,  example_base.stl  example/example_base.stl  contains the following:example.stl:module example;role rReceiver {  string ipAddress;  string transportId;...This gets transformed intoThe ‘role’ key maps to the ‘module:rRoleName’, which in this case is ‘example::rReceiver’.The remaining key: value pairs map to the fields of the role as described in the STL file.</field></doc>
<doc><field name="id">10022</field><field name="title">google-sprockets</field><field name="session">3.constants</field><field name="sentence">The ‘constants’ field must be a dictionary</field></doc>
<doc><field name="id">10023</field><field name="title">google-sprockets</field><field name="session">3.constants</field><field name="sentence">Each entry in the dictionary defines a declared constant described in the stl_files listed in the ‘stl_files’ field</field></doc>
<doc><field name="id">10024</field><field name="title">google-sprockets</field><field name="session">3.constants</field><field name="sentence">In the above example,  example_base.stl  example/example_base.stl  contains the following:example_base.stl:module example;const string kHelloWorld;This value gets defined in the manifest here:</field></doc>
<doc><field name="id">10025</field><field name="title">google-sprockets</field><field name="session">3.test</field><field name="sentence">The ‘test’ field must be a list of strings naming the roles to be tested</field></doc>
<doc><field name="id">10026</field><field name="title">google-sprockets</field><field name="session">3.test</field><field name="sentence">Each entry in the test list must correspond to a ‘role’ value in the ‘roles’ list.</field></doc>
<doc><field name="id">10027</field><field name="title">google-sprockets</field><field name="session">3.Substituting Parameters</field><field name="sentence">Values can be substituted from the command line by passing a space separated list of = pairs to the --manifest-args option of test\_driver.py</field></doc>
<doc><field name="id">10028</field><field name="title">google-sprockets</field><field name="session">3.Substituting Parameters</field><field name="sentence">The manifest .test file will then replace any occurence of parameter_example.test:}This is exactly equivalent to running with the following manifest:parameter_example_with_substitues.test:}</field></doc>
<doc><field name="id">10029</field><field name="title">google-squidwarden</field><field name="session">Squidwarden</field><field name="sentence">Frontend to managaging ACLs for the Squid proxy.Copyright 2016 Google Inc</field></doc>
<doc><field name="id">10030</field><field name="title">google-squidwarden</field><field name="session">Squidwarden</field><field name="sentence">All Rights Reserved.Apache 2.0 license.This is NOT a Google product.Contact: thomas@habets.se / habets@google.com</field></doc>
<doc><field name="id">10031</field><field name="title">google-squidwarden</field><field name="session">Install</field><field name="sentence">TODO: This procedure is untested.</field></doc>
<doc><field name="id">10032</field><field name="title">google-squidwarden</field><field name="session">TODO: Not all of these settings may be needed.</field><field name="sentence">http_port 3128via offforwarded_for delete</field></doc>
<doc><field name="id">10033</field><field name="title">google-squidwarden</field><field name="session">error_directory /etc/squid3/myerrors</field><field name="sentence">acl success_hier hier_code HIER_DIRECTacl failure_hier hier_code HIER_NONEaccess_log daemon:/var/log/squid3/access.log squid failure_hierexternal_acl_type ext ttl=10 concurrency=2 %PROTO %SRC %METHOD %URI /usr/local/bin/proxyacl -db=/var/spool/squid3/proxyacl.sqlite -log=/var/log/squid3/proxyacl.log -block_log=/var/log/squid3/proxyacl.blocklogacl ext_acl external exthttp_access allow ext_aclvisible_hostname my.proxy.hostname.here.example.com</field></doc>
<doc><field name="id">10034</field><field name="title">google-squidwarden</field><field name="session">Default suffix.</field><field name="sentence">http_access deny allThen point browser to  the UI  and get started.</field></doc>
<doc><field name="id">10035</field><field name="title">google-squidwarden</field><field name="session">Run UI via nginx</field><field name="sentence">It can be a good idea to run through a real web server such as nginx,so that you don't have to remember which port it runs on</field></doc>
<doc><field name="id">10036</field><field name="title">google-squidwarden</field><field name="session">Run UI via nginx</field><field name="sentence">It also makesit easier to set up TLS.FastCGI is nice, but doesn't support websockets</field></doc>
<doc><field name="id">10037</field><field name="title">google-squidwarden</field><field name="session">Run UI via nginx</field><field name="sentence">When -fcgi issupplied, squidwarden will therefore not use websockets.</field></doc>
<doc><field name="id">10038</field><field name="title">google-sshkey-audit</field><field name="session">sshkey-audit</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10039</field><field name="title">google-sshkey-audit</field><field name="session">Example</field><field name="sentence">ssh-rsa AAAAAhuteonhuneo… my-awesome-laptopssh-rsa AAAAhtuhsotiesi…  carol@my-desktopssh-rsa AAAAhtuhutnuheo…  corp@work-laptopssh-rsa AAAAhtuhuueoueo…  my-manager@their-work-laptopworklaptops my-awesome-laptop corp@work-laptopbob@foo.example.comirc@my-irc.shelladmin@my-router.lan:/etc/dropbear/authorized_keys @home  carol@my-desktop  my-awesome-laptop  corp@work-laptop  my-awesome-laptop  my-manager@their-work-laptop  carol@my-desktop  corp@work-laptop  my-awesome-laptop  carol@my-desktop  corp@work-laptop  my-awesome-laptop  carol@my-desktop  my-awesome-laptop … tool logs in to all accounts and checks that this is correct …  … tool logs in to all accounts and adds any missing keys  …  … tool logs in to all accounts and deletes any extraneous keys  … Adding the carol@my-desktop.lan can sometimes be useful to ssh localhost.</field></doc>
<doc><field name="id">10040</field><field name="title">google-ssl_logger</field><field name="session">ssl_logger</field><field name="sentence">Decrypts and logs a process's SSL traffic.The functionality offered by *ssl_logger</field></doc>
<doc><field name="id">10041</field><field name="title">google-ssl_logger</field><field name="session">Basic Usage</field><field name="sentence">python ssl_logger.py  -pcap    -verbose</field></doc>
<doc><field name="id">10042</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">geffner@ubuntu:~geffner@ubuntu:~geffner@ubuntu:~ 2  98962Press Ctrl+C to stop logging.geffner@ubuntu:~SSL Session: 1820201001719DF42ECCA1D289C3D32E0AA0454B50E8AF00E8A65B0108F209A8 SSL_write  100.97.20.44:45836 --> 93.184.216.34:44300000000: 0ASSL Session: 1820201001719DF42ECCA1D289C3D32E0AA0454B50E8AF00E8A65B0108F209A8 SSL_read  93.184.216.34:443 --> 100.97.20.44:4583600000000: 48 54 54 50 2F 31 2E 30  20 32 30 30 20 4F 4B 0D  HTTP/1.0 200 OK.00000010: 0A 41 63 63 65 70 74 2D  52 61 6E 67 65 73 3A 20  .Accept-Ranges: 00000020: 62 79 74 65 73 0D 0A 43  61 63 68 65 2D 43 6F 6E  bytes..Cache-Con00000030: 74 72 6F 6C 3A 20 6D 61  78 2D 61 67 65 3D 36 30  trol: max-age=6000000040: 34 38 30 30 0D 0A 43 6F  6E 74 65 6E 74 2D 54 79  4800..Content-Ty00000050: 70 65 3A 20 74 65 78 74  2F 68 74 6D 6C 0D 0A 44  pe: text/html..D00000060: 61 74 65 3A 20 54 68 75  2C 20 32 32 20 4A 75 6E  ate: Thu, 22 Jun00000070: 20 32 30 31 37 20 31 35  3A 31 36 3A 35 32 20 47   2017 15:16:52 G00000080: 4D 54 0D 0A 45 74 61 67  3A 20 22 33 35 39 36 37  MT..Etag: "3596700000090: 30 36 35 31 22 0D 0A 45  78 70 69 72 65 73 3A 20  0651"..Expires: 000000A0: 54 68 75 2C 20 32 39 20  4A 75 6E 20 32 30 31 37  Thu, 29 Jun 2017000000B0: 20 31 35 3A 31 36 3A 35  32 20 47 4D 54 0D 0A 4C   15:16:52 GMT..L000000C0: 61 73 74 2D 4D 6F 64 69  66 69 65 64 3A 20 46 72  ast-Modified: Fr000000D0: 69 2C 20 30 39 20 41 75  67 20 32 30 31 33 20 32  i, 09 Aug 2013 2000000E0: 33 3A 35 34 3A 33 35 20  47 4D 54 0D 0A 53 65 72  3:54:35 GMT..Ser000000F0: 76 65 72 3A 20 45 43 53  20 28 72 68 76 2F 38 31  ver: ECS  rhv/8100000100: 38 46 29 0D 0A 56 61 72  79 3A 20 41 63 63 65 70  8F ..Vary: Accep00000110: 74 2D 45 6E 63 6F 64 69  6E 67 0D 0A 58 2D 43 61  t-Encoding..X-Ca00000120: 63 68 65 3A 20 48 49 54  0D 0A 43 6F 6E 74 65 6E  che: HIT..Conten00000130: 74 2D 4C 65 6E 67 74 68  3A 20 31 32 37 30 0D 0A  t-Length: 00000140: 43 6F 6E 6E 65 63 74 69  6F 6E 3A 20 63 6C 6F 73  Connection: clos00000150: 65 0D 0A 0D 0ASSL Session: 1820201001719DF42ECCA1D289C3D32E0AA0454B50E8AF00E8A65B0108F209A8 SSL_read  93.184.216.34:443 --> 100.97.20.44:4583600000000: 3C 21 64 6F 63 74 79 70  65 20 68 74 6D 6C 3E 0A  .00000010: 3C 68 74 6D 6C 3E 0A 3C  68 65 61 64 3E 0A 20 20  .</field></doc>
<doc><field name="id">10043</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000020: 20 20 3C 74 69 74 6C 65  3E 45 78 61 6D 70 6C 6500000030: 20 44 6F 6D 61 69 6E 3C  2F 74 69 74 6C 65 3E 0A   Domain.00000040: 0A 20 20 20 20 3C 6D 65  74 61 20 63 68 61 72 73  .00000050: 65 74 3D 22 75 74 66 2D  38 22 20 2F 3E 0A 20 20  et="utf-8" /></field></doc>
<doc><field name="id">10044</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000060: 20 20 3C 6D 65 74 61 20  68 74 74 70 2D 65 71 7500000070: 69 76 3D 22 43 6F 6E 74  65 6E 74 2D 74 79 70 65  iv="Content-type00000080: 22 20 63 6F 6E 74 65 6E  74 3D 22 74 65 78 74 2F  " content="text/00000090: 68 74 6D 6C 3B 20 63 68  61 72 73 65 74 3D 75 74  html; charset=ut000000A0: 66 2D 38 22 20 2F 3E 0A  20 20 20 20 3C 6D 65 74  f-8" />.000000B0: 61 20 6E 61 6D 65 3D 22  76 69 65 77 70 6F 72 74  a name="viewport000000C0: 22 20 63 6F 6E 74 65 6E  74 3D 22 77 69 64 74 68  " content="width000000D0: 3D 64 65 76 69 63 65 2D  77 69 64 74 68 2C 20 69  =device-width, i000000E0: 6E 69 74 69 61 6C 2D 73  63 61 6C 65 3D 31 22 20  nitial-scale=1" 000000F0: 2F 3E 0A 20 20 20 20 3C  73 74 79 6C 65 20 74 79  />.00000100: 70 65 3D 22 74 65 78 74  2F 63 73 73 22 3E 0A 20  pe="text/css"></field></doc>
<doc><field name="id">10045</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000110: 20 20 20 62 6F 64 79 20  7B 0A 20 20 20 20 20 2000000120: 20 20 62 61 63 6B 67 72  6F 75 6E 64 2D 63 6F 6C00000130: 6F 72 3A 20 23 66 30 66  30 66 32 3B 0A 20 20 20  or: #f0f0f2;.00000150: 20 20 20 20 20 20 20 20  70 61 64 64 69 6E 67 3A00000160: 20 30 3B 0A 20 20 20 20  20 20 20 20 66 6F 6E 74   0;.00000170: 2D 66 61 6D 69 6C 79 3A  20 22 4F 70 65 6E 20 53  -family: "Open S00000180: 61 6E 73 22 2C 20 22 48  65 6C 76 65 74 69 63 61  ans", "Helvetica00000190: 20 4E 65 75 65 22 2C 20  48 65 6C 76 65 74 69 63   Neue", Helvetic000001A0: 61 2C 20 41 72 69 61 6C  2C 20 73 61 6E 73 2D 73  a, Arial, sans-s000001B0: 65 72 69 66 3B 0A 20 20  20 20 20 20 20 20 0A 20  erif;.000001C0: 20 20 20 7D 0A 20 20 20  20 64 69 76 20 7B 0A 20000001D0: 20 20 20 20 20 20 20 77  69 64 74 68 3A 20 36 30000001E0: 30 70 78 3B 0A 20 20 20  20 20 20 20 20 6D 61 72  0px;.000001F0: 67 69 6E 3A 20 35 65 6D  20 61 75 74 6F 3B 0A 20  gin: 5em auto;</field></doc>
<doc><field name="id">10046</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000200: 20 20 20 20 20 20 20 70  61 64 64 69 6E 67 3A 2000000210: 35 30 70 78 3B 0A 20 20  20 20 20 20 20 20 62 61  50px;.00000220: 63 6B 67 72 6F 75 6E 64  2D 63 6F 6C 6F 72 3A 20  ckground-color: 00000230: 23 66 66 66 3B 0A 20 20  20 20 20 20 20 20 62 6F  #fff;.00000240: 72 64 65 72 2D 72 61 64  69 75 73 3A 20 31 65 6D  rder-radius: 1em00000250: 3B 0A 20 20 20 20 7D 0A  20 20 20 20 61 3A 6C 69  ;.00000260: 6E 6B 2C 20 61 3A 76 69  73 69 74 65 64 20 7B 0A  nk, a:visited {.00000270: 20 20 20 20 20 20 20 20  63 6F 6C 6F 72 3A 20 2300000280: 33 38 34 38 38 66 3B 0A  20 20 20 20 20 20 20 20  38488f;.000002A0: 20 6E 6F 6E 65 3B 0A 20  20 20 20 7D 0A 20 20 20   none;.000002B0: 20 40 6D 65 64 69 61 20  28 6D 61 78 2D 77 69 64   @media  max-wid000002C0: 74 68 3A 20 37 30 30 70  78 29 20 7B 0A 20 20 20  th: 700px  {.000002E0: 20 20 20 20 20 20 20 20  62 61 63 6B 67 72 6F 75000002F0: 6E 64 2D 63 6F 6C 6F 72  3A 20 23 66 66 66 3B 0A  nd-color: #fff;.00000300: 20 20 20 20 20 20 20 20  7D 0A 20 20 20 20 20 2000000310: 20 20 64 69 76 20 7B 0A  20 20 20 20 20 20 20 2000000320: 20 20 20 20 77 69 64 74  68 3A 20 61 75 74 6F 3B00000330: 0A 20 20 20 20 20 20 20  20 20 20 20 20 6D 61 72  .00000340: 67 69 6E 3A 20 30 20 61  75 74 6F 3B 0A 20 20 20  gin: 0 auto;.00000370: 20 20 20 20 20 20 20 70  61 64 64 69 6E 67 3A 2000000380: 31 65 6D 3B 0A 20 20 20  20 20 20 20 20 7D 0A 20  1em;.00000390: 20 20 20 7D 0A 20 20 20  20 3C 2F 73 74 79 6C 65000003A0: 3E 20 20 20 20 0A 3C 2F  68 65 61 64 3E 0A 0A 3C  >000003B0: 62 6F 64 79 3E 0A 3C 64  69 76 3E 0A 20 20 20 20  body>..000003D0: 69 6E 3C 2F 68 31 3E 0A  20 20 20 20 3C 70 3E 54  in.000003E0: 68 69 73 20 64 6F 6D 61  69 6E 20 69 73 20 65 73  his domain is es000003F0: 74 61 62 6C 69 73 68 65  64 20 74 6F 20 62 65 20  tablished to be SSL Session: 1820201001719DF42ECCA1D289C3D32E0AA0454B50E8AF00E8A65B0108F209A8 SSL_read  93.184.216.34:443 --> 100.97.20.44:4583600000000: 75 73 65 64 20 66 6F 72  20 69 6C 6C 75 73 74 72  used for illustr00000010: 61 74 69 76 65 20 65 78  61 6D 70 6C 65 73 20 69  ative examples i00000020: 6E 20 64 6F 63 75 6D 65  6E 74 73 2E 20 59 6F 75  n documents</field></doc>
<doc><field name="id">10047</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">You00000030: 20 6D 61 79 20 75 73 65  20 74 68 69 73 0A 20 20   may use this</field></doc>
<doc><field name="id">10048</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000040: 20 20 64 6F 6D 61 69 6E  20 69 6E 20 65 78 61 6D00000050: 70 6C 65 73 20 77 69 74  68 6F 75 74 20 70 72 69  ples without pri00000060: 6F 72 20 63 6F 6F 72 64  69 6E 61 74 69 6F 6E 20  or coordination 00000070: 6F 72 20 61 73 6B 69 6E  67 20 66 6F 72 20 70 65  or asking for pe00000080: 72 6D 69 73 73 69 6F 6E  2E 3C 2F 70 3E 0A 20 20  rmission.</field></doc>
<doc><field name="id">10049</field><field name="title">google-ssl_logger</field><field name="session">Full Example</field><field name="sentence">00000090: 20 20 3C 70 3E 3C 61 20  68 72 65 66 3D 22 68 74000000A0: 74 70 3A 2F 2F 77 77 77  2E 69 61 6E 61 2E 6F 72  tp://www.iana.or000000B0: 67 2F 64 6F 6D 61 69 6E  73 2F 65 78 61 6D 70 6C  g/domains/exampl000000C0: 65 22 3E 4D 6F 72 65 20  69 6E 66 6F 72 6D 61 74  e">More informat000000D0: 69 6F 6E 2E 2E 2E 3C 2F  61 3E 3C 2F 70 3E 0A 3C  ion......</000000F0: 68 74 6D 6C 3E 0A</field></doc>
<doc><field name="id">10050</field><field name="title">google-ssl_logger</field><field name="session">Dependencies</field><field name="sentence">This program uses the  frida  framework to perform code injection.Frida can be installed as follows: sudo pip install frida</field></doc>
<doc><field name="id">10051</field><field name="title">google-ssl_logger</field><field name="session">TODO</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10052</field><field name="title">google-startup-os</field><field name="session">StartupOS</field><field name="sentence">! Gitter   ! CircleCI  > Examples for Google's Open Source stack and deployment to the cloud.The main technologies in the stack are:Try cloning the repo in Google Cloud Shell and look at the tutorials: ! Open in Cloud Shell</field></doc>
<doc><field name="id">10053</field><field name="title">google-startup-os</field><field name="session">Supported languages</field><field name="sentence">Protos, gRPC and Bazel are polyglot</field></doc>
<doc><field name="id">10054</field><field name="title">google-startup-os</field><field name="session">Supported languages</field><field name="sentence">The examples in this repo are mostly in Java and Typescript, but there's support for many other languages:There are several useful tools in the  tools section</field></doc>
<doc><field name="id">10055</field><field name="title">google-startup-os</field><field name="session">How to use StartupOS</field><field name="sentence">You can treat StartupOS as a "developer image" with a pre-built setup and associated tools.You can either:Install  Bazel  That's it!</field></doc>
<doc><field name="id">10056</field><field name="title">google-startup-os</field><field name="session">Build & Test</field><field name="sentence">A monorepo is a software development approach where all code is stored in a single repository.StartupOS doesn't require you to work with a monorepo, but some things, such as sharing a proto file across front-end and backend, are easier to do in a monorepo.Some good reads about the monorepo approach:You're welcome to contribute and in doing so, learn these technologies.You can have a look at the issues list, or at the project  milestones  docs/milestones.md .</field></doc>
<doc><field name="id">10057</field><field name="title">google-statechart</field><field name="session">C++ StateChart Library</field><field name="sentence">StateCharts   Harel, 1987   ref1  is a visual formalism for declarativedescription of complex interactive systems.It extends the conventional state machine formalism with Hierarchy, Concurrencyand Communication</field></doc>
<doc><field name="id">10058</field><field name="title">google-statechart</field><field name="session">C++ StateChart Library</field><field name="sentence">SCXML  is a W3C standard based on StaeCharts.This is a C++ library that implements the SCXML specification</field></doc>
<doc><field name="id">10059</field><field name="title">google-statechart</field><field name="session">C++ StateChart Library</field><field name="sentence">Instead of XML, aStateChart is represented as a StateChart protobuf.</field></doc>
<doc><field name="id">10060</field><field name="title">google-statechart</field><field name="session">Features</field><field name="sentence">Many features from the SCXML standard have been implemented.Here's an example of a StateChart that describes a Microwave.! Microwave StateChart  statechart/example/microwave_statechart.svg "Microwave StateChart" You can see  //statechart/example/microwave_example_main.cc  statechart/example/microwave_example_main.cc for details on how to specify such a StateChart as a StateChart proto and how to use it in code.</field></doc>
<doc><field name="id">10061</field><field name="title">google-statechart</field><field name="session">Usage</field><field name="sentence">To build the library you'll need bazel</field></doc>
<doc><field name="id">10062</field><field name="title">google-statechart</field><field name="session">Usage</field><field name="sentence">You can download and install it from  here</field></doc>
<doc><field name="id">10063</field><field name="title">google-statechart</field><field name="session">Download/Clone the repo.</field><field name="sentence">git clone cd statechart</field></doc>
<doc><field name="id">10064</field><field name="title">google-statechart</field><field name="session">Build the library</field><field name="sentence">bazel build //statechart/...</field></doc>
<doc><field name="id">10065</field><field name="title">google-statechart</field><field name="session">Run unit tests</field><field name="sentence">bazel test //statechart/...</field></doc>
<doc><field name="id">10066</field><field name="title">google-statechart</field><field name="session">Run the Microwave example</field><field name="sentence">bazel run //statechart/example:microwave_example_main -</field></doc>
<doc><field name="id">10067</field><field name="title">google-statechart</field><field name="session">Disclaimer</field><field name="sentence">This is not an officially supported Google product.</field></doc>
<doc><field name="id">10068</field><field name="title">google-statechart</field><field name="session">References</field><field name="sentence">Science of Computer Programming</field></doc>
<doc><field name="id">10069</field><field name="title">google-statechart</field><field name="session">References</field><field name="sentence">Link  Link</field></doc>
<doc><field name="id">10070</field><field name="title">google-stenographer</field><field name="session">Query Language ###</field><field name="sentence">A user requests packets from stenographer by specifying them with a very simplequery language</field></doc>
<doc><field name="id">10071</field><field name="title">google-stenographer</field><field name="session">Query Language ###</field><field name="sentence">This language is a simple subset of BPF, and includes the**NOTE**: Relative times must be measured in integer values of hours or minutesas demonstrated above.Primitives can be combined with and/&& and with or/||, which have equalprecendence and evaluate left-to-right</field></doc>
<doc><field name="id">10072</field><field name="title">google-stenographer</field><field name="session">Query Language ###</field><field name="sentence">Parens can also be used to group.</field></doc>
<doc><field name="id">10073</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">The *stenoreadand presenting them in a usable format to analysts</field></doc>
<doc><field name="id">10074</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">It requests raw packetsfrom stenographer, then runs them through *tcpdumpfull-featured formatting/filtering experience</field></doc>
<doc><field name="id">10075</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">The first argument to *stenoreadpassed to *tcpdump*</field></doc>
<doc><field name="id">10076</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">For example:To download the source code, install Go locally, then run:depends on</field></doc>
<doc><field name="id">10077</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">To build stenotype, go into the stenotype directory and run make.You may need to install the following Ubuntu packages  or their equivalents onother Linux distros :This is not an official Google product  experimental or otherwise , it is justcode that happens to be owned by Google.This code is not intended  or used  to watch Google's users</field></doc>
<doc><field name="id">10078</field><field name="title">google-stenographer</field><field name="session">Stenoread CLI ###</field><field name="sentence">Its purposeis to increase security on our networks by augmenting our internal monitoring</field></doc>
<doc><field name="id">10079</field><field name="title">google-stm32_bare_lib</field><field name="session">STM32 Bare Library</field><field name="sentence">System functions and example code for programming the "Blue Pill" STM32-compatible micro-controller boards.This is not an officially supported Google product.</field></doc>
<doc><field name="id">10080</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">You can now buy "Blue Pill" development boards individually for less than $These devices have ARM Cortex M3 CPUs running at 72MHz, 20KB of SRAM, and 64KB of flash, and consume far less energy than standard ARM processors</field></doc>
<doc><field name="id">10081</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">They offer an amazing amount of computing power for a cheap package that can be run on a battery for a long time</field></doc>
<doc><field name="id">10082</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">They are perfect for prototyping running compute-intensive algorithms like machine learning on embedded systems.Unfortunately, though their price point makes them very accessible, there are other barriers to getting started with the boards</field></doc>
<doc><field name="id">10083</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">They require separate hardware to program, and some basic wiring skills</field></doc>
<doc><field name="id">10084</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">The system software that you need to do anything useful with them is also often proprietary and confusing</field></doc>
<doc><field name="id">10085</field><field name="title">google-stm32_bare_lib</field><field name="session">Introduction</field><field name="sentence">This framework tackles all those problems by standardizing a work flow based on open software and hardware, providing step-by-step guides for the small amount of wiring needed, and offering self-contained system functions and examples in plain C.</field></doc>
<doc><field name="id">10086</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">Before you get started, you'll need to have a few pieces of hardware available</field></doc>
<doc><field name="id">10087</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">No soldering or tools are required though, you should be able to assemble everything you need by hand</field></doc>
<doc><field name="id">10088</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">My thanks go to  Andy Selle  who pioneered the approach that I've documented below.These steps assume you have a Raspberry Pi 3 running a recent version of Raspbian</field></doc>
<doc><field name="id">10089</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">There's nothing that I know definitely won't work on a Pi 2  or a Pi Zero/One with an adjustment to the OpenOCD scripts , but I've not tested any other combinations</field></doc>
<doc><field name="id">10090</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">The approach I'm using came from  a great AdaFruit guide  which I recommend checking out for more background on what we're doing.The main piece of software we need to install is  OpenOCD  the Open On-Chip Debugger</field></doc>
<doc><field name="id">10091</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">Despite its name, this tool also handles flashing micro-controller flash memory with new programs, as well as displaying debug information from the chip</field></doc>
<doc><field name="id">10092</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">It does this through the Serial Wire Debug protocol, communicating through dedicated pins on the Blue Pill board.OpenOCD doesn't have a binary package for the Pi, but it is easy to compile</field></doc>
<doc><field name="id">10093</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">To build it, run these commands in the terminal on your Pi:The four pins at the thin end of the Blue Pill board are dedicate to the SWD protocol, and need to be connected to the right pins on the Pi's header, which OpenOCD will then control to program the chip</field></doc>
<doc><field name="id">10094</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">Here's a diagram showing how the wires should be attached between the Pi and the board:! Blue Pill Wiring This is based on the wiring recommended by the AdaFruit tutorial, where ground and power  3.3V  can be driven by any of the multiple pins on the Pi that supply them, SWDIO  the data pin  is on pin 24, and SWDCLK  the clock pin  is on pin I'm leaving the reset pin unconnected, since it's optional.! AdaFruit Diagram Here are some photos of my actual setup:! Blue Pill Wiring ! Pi Wiring ! Complete Picture of Wiring If you're using female-to-female jumper wires, you should be able to just push the connectors at each end onto the corresponding pins, and they should fit snugly with a small amount of force.There are also two yellow plastic jumper switches on the board</field></doc>
<doc><field name="id">10095</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">Normally they will both in position furthest away from the SWD pins, and closest to the small USB port</field></doc>
<doc><field name="id">10096</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">This is the recommended position for our workflow, but if they're in a different place when you get your board, you may need to move them back.Once you've wired in the ground and power  3.3v  connections, you should see a red LED on the board light up</field></doc>
<doc><field name="id">10097</field><field name="title">google-stm32_bare_lib</field><field name="session">What You Need</field><field name="sentence">If it doesn't, check your wiring, or try another board in case there's a defect.</field></doc>
<doc><field name="id">10098</field><field name="title">google-stm32_bare_lib</field><field name="session">Building the Examples</field><field name="sentence">Now you should be ready to build some example programs for the Blue Pill board</field></doc>
<doc><field name="id">10099</field><field name="title">google-stm32_bare_lib</field><field name="session">Building the Examples</field><field name="sentence">To do this, you'll need to clone  ARM's CMSIS 5 micro-controller library  from GitHub and get this repository too</field></doc>
<doc><field name="id">10100</field><field name="title">google-stm32_bare_lib</field><field name="session">Building the Examples</field><field name="sentence">You'll also need to install the cross-compilation toolchain for ARM.These are not quite like normal executables, they're just exact copies of the bytes that need to be copied into flash memory on the device</field></doc>
<doc><field name="id">10101</field><field name="title">google-stm32_bare_lib</field><field name="session">Building the Examples</field><field name="sentence">They don't contain any debug symbols, and the very start of flash has to be a table of function pointers, so making sure that boot.s is first in linking order is important</field></doc>
<doc><field name="id">10102</field><field name="title">google-stm32_bare_lib</field><field name="session">Building the Examples</field><field name="sentence">You don't need to worry about that for these examples, because the makefile takes care of all that, but once you start building your own programs you'll need to be careful.</field></doc>
<doc><field name="id">10103</field><field name="title">google-stm32_bare_lib</field><field name="session">Testing OpenOCD</field><field name="sentence">Once you've got this library's repository from GitHub, you can start testing your wiring connection</field></doc>
<doc><field name="id">10104</field><field name="title">google-stm32_bare_lib</field><field name="session">Testing OpenOCD</field><field name="sentence">There are a lot of settings you need to pass to OpenOCD to make a successful link, so to make things easier these are included in  opened.cfg  in the root of the source tree</field></doc>
<doc><field name="id">10105</field><field name="title">google-stm32_bare_lib</field><field name="session">Testing OpenOCD</field><field name="sentence">To try out OpenOCD, run:</field></doc>
<doc><field name="id">10106</field><field name="title">google-stm32_bare_lib</field><field name="session">Running Examples</field><field name="sentence">With OpenOCD running in one terminal, open up a new window and type:Finally we need to restart the chip again, at which point it should try to execute the program we've just uploaded to flash</field></doc>
<doc><field name="id">10107</field><field name="title">google-stm32_bare_lib</field><field name="session">Running Examples</field><field name="sentence">We do this with the plain reset command, which with no arguments restarts the chip and begins execution.</field></doc>
<doc><field name="id">10108</field><field name="title">google-stm32_bare_lib</field><field name="session">Debug Output</field><field name="sentence">Blinking LEDs is fun, but to be at all productive on complex programs we need to be able to easily pass information back to the host computer for debugging purposes</field></doc>
<doc><field name="id">10109</field><field name="title">google-stm32_bare_lib</field><field name="session">Debug Output</field><field name="sentence">The  Hello World example  shows how to use  DebugLog    to do this</field></doc>
<doc><field name="id">10110</field><field name="title">google-stm32_bare_lib</field><field name="session">Debug Output</field><field name="sentence">To run it, execute these commands in the OpenOCD command console:The DebugLog   function can take several hundred milliseconds to execute, since it has to call back to the host machine, so it shouldn't be used in performance-critical code, but it is handy when you're trying to track down issues.</field></doc>
<doc><field name="id">10111</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">The standard Gnu debugger gdb works reasonably well with this setup</field></doc>
<doc><field name="id">10112</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">To install it, run:For example, recompile and load the binary to the device againAnd interrupt it...Inspect variables...Inspect the stack...If you want to create your own programs using this framework, you should start off by copying one of the examples and expanding it</field></doc>
<doc><field name="id">10113</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">You'll need to:Device manufacturers typically also release a header file that defines registers for peripherals that are not standard across all particular CPUs but that exist only on their boards</field></doc>
<doc><field name="id">10114</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">Since Blue Pill SoCs are STM32-compatible, these would normally be in something like stm32f*.h, but this is only available as part of proprietary products from ST</field></doc>
<doc><field name="id">10115</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">Instead, the  core_stm32.h  header includes a few of the most commonly-used device registers, as defined by  ST's reference guide to the processor</field></doc>
<doc><field name="id">10116</field><field name="title">google-stm32_bare_lib</field><field name="session">Debugging with GDB</field><field name="sentence">These definitions are used to set up and control the LEDs for example.</field></doc>
<doc><field name="id">10117</field><field name="title">google-stm32_bare_lib</field><field name="session">Further Reading</field><field name="sentence">Looking through the  examples folder  should give you some ideas on the sort of things that are possible</field></doc>
<doc><field name="id">10118</field><field name="title">google-stm32_bare_lib</field><field name="session">Further Reading</field><field name="sentence">STM32duino  has a wealth of information on Blue Pill boards, and the name even comes from  a thread on their forums  Thomas Trebisky has some fantastic examples  of bare-metal STM32 programming, and I've found them very useful to reference as I've been working on this</field></doc>
<doc><field name="id">10119</field><field name="title">google-stm32_bare_lib</field><field name="session">Further Reading</field><field name="sentence">David Welch has also made available great sample code  for the STM Reference Manual</field></doc>
<doc><field name="id">10120</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">Strabo is a system designed to make it easy to run fast, scalable, and potentially complex geospatial analyses over your data</field></doc>
<doc><field name="id">10121</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">It allows simple expressions likeMore complex queries are also possible, for instance:Strabo is a wrapper around  PostGIS  a widely used and well tested set of extensions to PostgreSQL that provide spatial indices, joins, querying, and shapefile operations</field></doc>
<doc><field name="id">10122</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">It is implemented in Elixir and runs on the BEAM VM, so the server is fault tolerant and queries automatically make use of all available cores if possible</field></doc>
<doc><field name="id">10123</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">Strabo currently comes with a Python-based query language, but client libraries for other languages are planned in the future</field></doc>
<doc><field name="id">10124</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">Strabo is still in the very early stages of development, and is definitely not recommended for production usage.Server InstallationInstall  Vagrant  and  VirtualBox  If you are running Ubuntu, make sure you install Vagrant directly from their website, as the version in the Ubuntu repos is out of date.Clone this repo</field></doc>
<doc><field name="id">10125</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">cd into it and run vagrant up</field></doc>
<doc><field name="id">10126</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">This step will take a while.Once the Vagrant box has been downloaded, installed and provisioned; type vagrant ssh  from within the Strabo directory .At the vagrant prompt, run run_migrations to install dependencies and run all schema migrations.Once migrations are complete, run start_server to start the Strabo server.You can run tests with run_tests.Now you can visit localhost:4001 from your browser</field></doc>
<doc><field name="id">10127</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">If it displays a "Welcome to Phoenix" page; you are good to go!Client InstallationThis repository includes a Python client library designed to interact with the Strabo server</field></doc>
<doc><field name="id">10128</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">To install it, cd into this repository and run-------Support for downloading geographic shapefiles from the US Census Bureau  and other data sources , importing into Strabo, and using them in queries like my_location.get_containing_polygon 'us_counties_2014'</field></doc>
<doc><field name="id">10129</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">This is almost complete.Swap current Enum.map implementation for a parallel one that uses all available cores.Allow calculation of road distance using TIGER/LINE or OSM data.API to allow real-time upload of location data  for instance, from a mobile app</field></doc>
<doc><field name="id">10130</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">This is pretty much complete but needs to be cleaned up and documented.Allow saving a kernel  i.e</field></doc>
<doc><field name="id">10131</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">a Strabo query with parameters  to the database, and exposing said kernel as an API endpoint</field></doc>
<doc><field name="id">10132</field><field name="title">google-strabo</field><field name="session">Strabo</field><field name="sentence">This is nearly complete on the backend  there is a kernels table, and queries with parameters are supported , but it needs to be finished and documented.Legal notes</field></doc>
<doc><field name="id">10133</field><field name="title">google-streaming_hdp</field><field name="session">Streaming HD Previews.</field><field name="sentence">**Disclaimer: This is not an official Google product.**This implements a proxy that cloud-renders pages and streams the state of theDOM back to the client.</field></doc>
<doc><field name="id">10134</field><field name="title">google-streamy-dart</field><field name="session">This package is deprecated</field><field name="sentence">Consider the following alternatives:Streamy was a JSON RPC framework for applications written using  Dart programming language  It generated a Dart client library from a  Google API Discovery  file.</field></doc>
<doc><field name="id">10135</field><field name="title">google-streetview-publish-client-libraries</field><field name="session">Client libraries for the Google Street View Publish API</field><field name="sentence">The  Street View Publish API allows your application to publish 360 photos to Google Maps, along with imagemetadata that specifies the position, orientation, and connectivity of eachphoto</field></doc>
<doc><field name="id">10136</field><field name="title">google-streetview-publish-client-libraries</field><field name="session">Client libraries for the Google Street View Publish API</field><field name="sentence">With this API, any app can offer an interface for positioning,connecting, and uploading user-generated Street View images.This library provides code to call this API from several languages including Java, JavaScript, and python.Please see the  documentation for code samples and details.</field></doc>
<doc><field name="id">10137</field><field name="title">google-streetview-publish-client-libraries</field><field name="session">Python</field><field name="sentence">To install the Python library, please see the Python package index for gapic-google-maps-streetview\_publish</field></doc>
<doc><field name="id">10138</field><field name="title">google-streetview-publish-client-libraries</field><field name="session">Java</field><field name="sentence">To install the Java library, please see the Central Repository for the java-streetview-publish artifact under the com.google.streetview.publish GroupId.</field></doc>
<doc><field name="id">10139</field><field name="title">google-streetview-publish-client-libraries</field><field name="session">JavaScript</field><field name="sentence">To install the JavaScript library, please see the instructions for streetview-publish-client-libraries-v1</field></doc>
<doc><field name="id">10140</field><field name="title">google-stumblybot</field><field name="session">StumblyBot</field><field name="sentence">This is a very hacky test project to integrate Marty Robot, Google Assistant SDKand DialogFlow.**This is not an officially supported Google product.**</field></doc>
<doc><field name="id">10141</field><field name="title">google-stumblybot</field><field name="session">Hardware requirements</field><field name="sentence">device</field></doc>
<doc><field name="id">10142</field><field name="title">google-stumblybot</field><field name="session">Hardware requirements</field><field name="sentence">head.</field></doc>
<doc><field name="id">10143</field><field name="title">google-stumblybot</field><field name="session">Assistant SDK</field><field name="sentence">You can install Assistant SDK on the same Raspberry Pi, connect speaker andmicrophone to it, and it will act as regular Google Assistant</field></doc>
<doc><field name="id">10144</field><field name="title">google-stumblybot</field><field name="session">Assistant SDK</field><field name="sentence">This step isoptional</field></doc>
<doc><field name="id">10145</field><field name="title">google-stumblybot</field><field name="session">Assistant SDK</field><field name="sentence">You can use any Assistant-enabled device to control your robot</field></doc>
<doc><field name="id">10146</field><field name="title">google-stumblybot</field><field name="session">Assistant SDK</field><field name="sentence">GoogleHome, Android, iOS, smart TV, whatever.</field></doc>
<doc><field name="id">10147</field><field name="title">google-stumblybot</field><field name="session">Contacts</field><field name="sentence"></field></doc>
<doc><field name="id">10148</field><field name="title">google-subcommands</field><field name="session">subcommands #</field><field name="sentence">! GoDoc    Subcommands is a Go package that implements a simple way for a single command tohave many subcommands, each of which takes arguments and so forth.This is not an official Google product.</field></doc>
<doc><field name="id">10149</field><field name="title">google-subcommands</field><field name="session">Usage ##</field><field name="sentence">Set up a 'print' subcommand:import    "context"  "flag"  "fmt"  "os"  "strings" type printCmd struct {  capitalize boolfunc  *printCmd  Name   stringfunc  *printCmd  Synopsis   string { return "Print args to stdout." }func  *printCmd  Usage   string {  return func  p *printCmd  SetFlags f *flag.FlagSet  {  f.BoolVar &p.capitalize, "capitalize", false, "capitalize output" func  p *printCmd  Execute _ context.Context, f *flag.FlagSet, _ ...interface{}  subcommands.ExitStatus {  for _, arg := range f.Args   {  }  fmt.Println    return subcommands.ExitSuccessRegister using the default Commander, also use some built in subcommands,finally run Execute using ExitStatus as the exit code:func main   {  subcommands.Register subcommands.HelpCommand  , ""   subcommands.Register subcommands.FlagsCommand  , ""   subcommands.Register subcommands.CommandsCommand  , ""   subcommands.Register &printCmd{}, ""   ctx := context.Background    os.Exit int subcommands.Execute ctx</field></doc>
<doc><field name="id">10150</field><field name="title">google-subpar</field><field name="session">Subpar</field><field name="sentence">Subpar is a utility for creating self-contained python executables</field></doc>
<doc><field name="id">10151</field><field name="title">google-subpar</field><field name="session">Subpar</field><field name="sentence">It isdesigned to work well with  Bazel</field></doc>
<doc><field name="id">10152</field><field name="title">google-subpar</field><field name="session">Setup</field><field name="sentence">par_binary   is a drop-in replacement for py_binary   in your BUILD filesthat also builds a self-contained, single-file executable for the application,with a .par file extension.To build the .par file associated with a par_binary name=myname  rule, dodirectories that py_binary   creates, but is independent of them.It can be copied to other directories or machines, and executeddirectly without needing the .runfiles directory</field></doc>
<doc><field name="id">10153</field><field name="title">google-subpar</field><field name="session">Setup</field><field name="sentence">The body of the.par file contains all the srcs, deps, and data files listed.</field></doc>
<doc><field name="id">10154</field><field name="title">google-subpar</field><field name="session">Limitations:</field><field name="sentence">Given a BUILD file with the following:load "@subpar//:subpar.bzl", "par_binary" par_binary  Run the following build command:compiled executable file:This is not an official Google product, it is just code that happensto be owned by Google.</field></doc>
<doc><field name="id">10155</field><field name="title">google-supersonic</field><field name="session">Copyright 2012 Google Inc. All Rights Reserved.</field><field name="sentence">Installation instructions are provided in INSTALL.Basically ./config && make && make install .</field></doc>
<doc><field name="id">10156</field><field name="title">google-support-tools</field><field name="session">#Google Code Support Tools#</field><field name="sentence">This project contains tools related to exporting data from Google Code.Google Code has been  turned down this repository is provided mostly for historical purposes</field></doc>
<doc><field name="id">10157</field><field name="title">google-support-tools</field><field name="session">#Google Code Support Tools#</field><field name="sentence">For an archive ofprojects that were hosted on Google Code, see the Google Code Archive</field></doc>
<doc><field name="id">10158</field><field name="title">google-surveys</field><field name="session">Introduction</field><field name="sentence">This GitHub repository contains code samples for the Google Surveys API, built by the Surveys team @ Google</field></doc>
<doc><field name="id">10159</field><field name="title">google-surveys</field><field name="session">Introduction</field><field name="sentence">Please note that this repository is not officially supported by Google.The Google Surveys team will do their best to keep the this repository up-to-date as the API evolves, but it's possible that at any given point the code stops working</field></doc>
<doc><field name="id">10160</field><field name="title">google-surveys</field><field name="session">Introduction</field><field name="sentence">For this reason please treat the code as illustrative only</field></doc>
<doc><field name="id">10161</field><field name="title">google-surveys</field><field name="session">Introduction</field><field name="sentence">Should you want to launch a production-quality service on the API please use the REST end-points directly.For more information on the Google Surveys API, check out the  Google Surveys API developer site To report an issue or request a feature, please  create a new issue  via Google’s Issue Tracker</field></doc>
<doc><field name="id">10162</field><field name="title">google-surveys</field><field name="session">Introduction</field><field name="sentence">For sales and product questions, please visit  Google Surveys support</field></doc>
<doc><field name="id">10163</field><field name="title">google-svcca</field><field name="session">SVCCA for Deep Learning Dynamics and Interpretability</field><field name="sentence">This repository contains the core code for implementing Canonical Correlation Analysis on deep neural network representations, which was used for the results in the paper: Maithra Raghu   Justin Gilmer   Jason Yosinski   Jascha Sohl-Dickstein   2017</field></doc>
<doc><field name="id">10164</field><field name="title">google-svcca</field><field name="session">SVCCA for Deep Learning Dynamics and Interpretability</field><field name="sentence">"SVCCA: Singular Vector Canonical Correlation Analysis for Deep Learning Dynamics and Interpretability"  Neural Information Processing Systems  NIPS</field></doc>
<doc><field name="id">10165</field><field name="title">google-svcca</field><field name="session">Dependencies</field><field name="sentence">This code was written in Python 2.7 and relies on the numpy and pandas modules</field></doc>
<doc><field name="id">10166</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">The main function to compute CCA similarities between two representations is the get_cca_similarity function in  cca_core.py  cca_core.py</field></doc>
<doc><field name="id">10167</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">This takes in two arrays of shape  num neurons1, num datapoints  ,  num neurons2, num_datapoints ,and outputs pairs of aligned directions, how well aligned they are, as well as coefficients to transform from the original neuron basis to the aligned directions.The  dft_ccas.py  dft_ccas.py  module builds on this functionality to work with convolutional networks</field></doc>
<doc><field name="id">10168</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">Convolutional layers have a more natural basis in terms of the number of channels, not raw neurons</field></doc>
<doc><field name="id">10169</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">Using some of the mathematical propertiesof the Discrete Fourier Transform, we have a computationally efficient method for comparing CCA similarity for convolutional layers</field></doc>
<doc><field name="id">10170</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">See Section 3 in the  paper  for more details</field></doc>
<doc><field name="id">10171</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">The fourier_ccas function in dft_ccas.py  dft_ccas.py  implements exactly this, taking the raw convolutional activations  num datapoints, height1, width1, num channels1 ,  num datapoints, height2, width2, num channels2 Note that according to the theory, we get an exact result if the datapoints used to _generate_  not train  the activations are translation invariant  any 2d translation of a datapoint x is also in the set of datapoints</field></doc>
<doc><field name="id">10172</field><field name="title">google-svcca</field><field name="session">Usage</field><field name="sentence">But even without this, we can get very good results  see Examples section .</field></doc>
<doc><field name="id">10173</field><field name="title">google-svcca</field><field name="session">Examples</field><field name="sentence">In the paper, we apply this method to understand several aspects of neural network representations, and we give a couple of examples below.</field></doc>
<doc><field name="id">10174</field><field name="title">google-swift-clang</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10175</field><field name="title">google-swift-clang</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10176</field><field name="title">google-swift-clang</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10177</field><field name="title">google-swift-clang</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10178</field><field name="title">google-swift-clang</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10179</field><field name="title">google-swift-clang</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10180</field><field name="title">google-swift-clang</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10181</field><field name="title">google-swift-clang</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10182</field><field name="title">google-swift-clang</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10183</field><field name="title">google-swift-cmark</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10184</field><field name="title">google-swift-cmark</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10185</field><field name="title">google-swift-cmark</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10186</field><field name="title">google-swift-cmark</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10187</field><field name="title">google-swift-cmark</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10188</field><field name="title">google-swift-cmark</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10189</field><field name="title">google-swift-cmark</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10190</field><field name="title">google-swift-cmark</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10191</field><field name="title">google-swift-cmark</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10192</field><field name="title">google-swift-compiler-rt</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10193</field><field name="title">google-swift-compiler-rt</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10194</field><field name="title">google-swift-compiler-rt</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10195</field><field name="title">google-swift-compiler-rt</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10196</field><field name="title">google-swift-compiler-rt</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10197</field><field name="title">google-swift-compiler-rt</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10198</field><field name="title">google-swift-compiler-rt</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10199</field><field name="title">google-swift-compiler-rt</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10200</field><field name="title">google-swift-compiler-rt</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10201</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10202</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10203</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10204</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10205</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10206</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10207</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10208</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10209</field><field name="title">google-swift-corelibs-foundation</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10210</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10211</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10212</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10213</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10214</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10215</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10216</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10217</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10218</field><field name="title">google-swift-corelibs-libdispatch</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10219</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10220</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10221</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10222</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10223</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10224</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10225</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10226</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10227</field><field name="title">google-swift-corelibs-xctest</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10228</field><field name="title">google-swift-integration-tests</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10229</field><field name="title">google-swift-integration-tests</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10230</field><field name="title">google-swift-integration-tests</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10231</field><field name="title">google-swift-integration-tests</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10232</field><field name="title">google-swift-integration-tests</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10233</field><field name="title">google-swift-integration-tests</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10234</field><field name="title">google-swift-integration-tests</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10235</field><field name="title">google-swift-integration-tests</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10236</field><field name="title">google-swift-integration-tests</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10237</field><field name="title">google-swift-jupyter</field><field name="session">Swift-Jupyter</field><field name="sentence">This is a Jupyter Kernel for Swift, intended to make it possible to use Jupyterwith the  Swift for TensorFlow  project.This kernel is currently very barebones and experimental.This kernel is implemented using LLDB's Python APIs.</field></doc>
<doc><field name="id">10238</field><field name="title">google-swift-jupyter</field><field name="session">Installation Instructions</field><field name="sentence">Create a virtualenv and install jupyter in it.virtualenv venv</field></doc>
<doc><field name="id">10239</field><field name="title">google-swift-jupyter</field><field name="session">Installation Instructions</field><field name="sentence">venv/bin/activatepip2 install jupyter # Must use python2, because LLDB doesn't support pythonOptionally  install SourceKitten   this enables codecompletion .Get a Swift toolchain</field></doc>
<doc><field name="id">10240</field><field name="title">google-swift-jupyter</field><field name="session">Installation Instructions</field><field name="sentence">Here are a few options:</field></doc>
<doc><field name="id">10241</field><field name="title">google-swift-jupyter</field><field name="session">If you downloaded a prebuilt toolchain:</field><field name="sentence">python register.py --sys-prefix --swift-toolchain</field></doc>
<doc><field name="id">10242</field><field name="title">google-swift-jupyter</field><field name="session">If you built a toolchain from sources:</field><field name="sentence">python register.py --sys-prefix --swift-toolchain</field></doc>
<doc><field name="id">10243</field><field name="title">google-swift-jupyter</field><field name="session">If you are using an Xcode provided toolchain:</field><field name="sentence">python register.py --sys-prefix --xcode-path Optionally add --sourcekitten  to the command if you installedSourceKitten</field></doc>
<doc><field name="id">10244</field><field name="title">google-swift-jupyter</field><field name="session">If you are using an Xcode provided toolchain:</field><field name="sentence">This will give you code completion.Now run jupyter notebook, and it should have a Swift kernel.</field></doc>
<doc><field name="id">10245</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">You can call Python libaries using  Swift's Python interop  to display richoutput in your Swift notebooks</field></doc>
<doc><field name="id">10246</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">Eventually, we'd like to support Swiftlibraries that produce rich output too!   system Python</field></doc>
<doc><field name="id">10247</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">Do not install them on the virtualenv from the Swift-Jupyter  installation instructions</field></doc>
<doc><field name="id">10248</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">Swift's Python interop talks to your system  Python</field></doc>
<doc><field name="id">10249</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">After taking care of the prerequisites, run%include "EnableIPythonDisplay.swift" in your Swift notebook</field></doc>
<doc><field name="id">10250</field><field name="title">google-swift-jupyter</field><field name="session">Rich output</field><field name="sentence">Now you shouldbe able to display rich output! For example:let time = np.arange 0, 10, 0.01 let amplitude = np.exp -0.1 let position = amplitude plt.figure figsize:  15, 10  plt.plot time, position plt.plot time, amplitude plt.plot time, -amplitude plt.xlabel "time  s " plt.ylabel "position  m " plt.title "Oscillations" plt.show  ! Screenshot of running the above two snippets of code in Jupyter  ./screenshots/display_matplotlib.png  Swift's Python interop :</field></doc>
<doc><field name="id">10251</field><field name="title">google-swift-jupyter</field><field name="session">%include directives</field><field name="sentence">%include "" in your cell</field></doc>
<doc><field name="id">10252</field><field name="title">google-swift-jupyter</field><field name="session">%include directives</field><field name="sentence">The kernel will preprocess your cell andreplace the %include directive with the contents of the file before sendingyour cell to the Swift interpreter</field></doc>
<doc><field name="id">10253</field><field name="title">google-swift-jupyter</field><field name="session">%include directives</field><field name="sentence">must be relative to the directory containing swift_kernel.py.We'll probably add more search paths later.</field></doc>
<doc><field name="id">10254</field><field name="title">google-swift-llbuild</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10255</field><field name="title">google-swift-llbuild</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10256</field><field name="title">google-swift-llbuild</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10257</field><field name="title">google-swift-llbuild</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10258</field><field name="title">google-swift-llbuild</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10259</field><field name="title">google-swift-llbuild</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10260</field><field name="title">google-swift-llbuild</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10261</field><field name="title">google-swift-llbuild</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10262</field><field name="title">google-swift-llbuild</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10263</field><field name="title">google-swift-lldb</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10264</field><field name="title">google-swift-lldb</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10265</field><field name="title">google-swift-lldb</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10266</field><field name="title">google-swift-lldb</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10267</field><field name="title">google-swift-lldb</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10268</field><field name="title">google-swift-lldb</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10269</field><field name="title">google-swift-lldb</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10270</field><field name="title">google-swift-lldb</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10271</field><field name="title">google-swift-lldb</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10272</field><field name="title">google-swift-llvm</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10273</field><field name="title">google-swift-llvm</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10274</field><field name="title">google-swift-llvm</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10275</field><field name="title">google-swift-llvm</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10276</field><field name="title">google-swift-llvm</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10277</field><field name="title">google-swift-llvm</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10278</field><field name="title">google-swift-llvm</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10279</field><field name="title">google-swift-llvm</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10280</field><field name="title">google-swift-llvm</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10281</field><field name="title">google-swift-package-manager</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10282</field><field name="title">google-swift-package-manager</field><field name="session">Contributing</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10283</field><field name="title">google-swift-package-manager</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10284</field><field name="title">google-swift-package-manager</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10285</field><field name="title">google-swift-package-manager</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10286</field><field name="title">google-swift-package-manager</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10287</field><field name="title">google-swift-package-manager</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10288</field><field name="title">google-swift-package-manager</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help for moreinformation on using pull requests.</field></doc>
<doc><field name="id">10289</field><field name="title">google-swift-package-manager</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10290</field><field name="title">google-swift</field><field name="session">Purpose</field><field name="sentence">This repository exists to allow Googlers to collaborate and stage pull requestsagainst the official Swift repository.</field></doc>
<doc><field name="id">10291</field><field name="title">google-swift</field><field name="session">Swift for TensorFlow</field><field name="sentence">We strongly encourage contributors to contribute directly to upstream wheneverpossible; contributions will be rejected if the project owners feel they aremore appropriate for a direct upstream contribution.If you would like to contribute to this repository, there are a few steps to</field></doc>
<doc><field name="id">10292</field><field name="title">google-swift</field><field name="session">Contributor License Agreement</field><field name="sentence">Contributions to this project must be accompanied by a Contributor LicenseAgreement</field></doc>
<doc><field name="id">10293</field><field name="title">google-swift</field><field name="session">Contributor License Agreement</field><field name="sentence">You  or your employer  retain the copyright to your contribution,this simply gives us permission to use and redistribute your contributions aspart of the project</field></doc>
<doc><field name="id">10294</field><field name="title">google-swift</field><field name="session">Contributor License Agreement</field><field name="sentence">Head over to  to see yourcurrent agreements on file or to sign a new one.You generally only need to submit a CLA once, so if you‘ve already submitted one even if it was for a different project , you probably don’t need to do it</field></doc>
<doc><field name="id">10295</field><field name="title">google-swift</field><field name="session">Code Reviews</field><field name="sentence">All submissions, including submissions by project members, require review</field></doc>
<doc><field name="id">10296</field><field name="title">google-swift</field><field name="session">Code Reviews</field><field name="sentence">Weuse GitHub pull requests for this purpose</field></doc>
<doc><field name="id">10297</field><field name="title">google-swift</field><field name="session">Code Reviews</field><field name="sentence">Consult GitHub Help  for more information on using pull</field></doc>
<doc><field name="id">10298</field><field name="title">google-swift</field><field name="session">Upstream Policies</field><field name="sentence">All contributions to this repository are expected to go upstream; please makesure that your contribution follows all of the contribution policies from</field></doc>
<doc><field name="id">10299</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">! Build status  SwiftShader is a high-performance CPU-based implementation of the OpenGL ES and Direct3D 9 graphics APIs12</field></doc>
<doc><field name="id">10300</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">Its goal is to provide hardware independence for advanced 3D graphics.-----The SwiftShader libraries act as drop-in replacements for graphics drivers.On Windows, most applications can be made to use SwiftShader's DLLs by placing them in the same folder as the executable</field></doc>
<doc><field name="id">10301</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">On Linux, the LD\_LIBRARY\_PATH environment variable or -rpath linker option can be used to direct applications to search for shared libraries in the indicated directory first.Prebuilt binaries can be found at: ------------See  CONTRIBUTING.txt  CONTRIBUTING.txt  for important contributing requirements.The canonical repository for SwiftShader is hosted at:All changes must be reviewed and approved in the  Gerrit  review tool at:Authenticate your account here:All changes require a  Change-ID  tag in the commit message</field></doc>
<doc><field name="id">10302</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">A commit hook may be used to add this tag automatically, and can be found at: To clone the repository and install the commit hook in one go:Changes are uploaded to Gerrit by performing:Third-Party DependenciesThe  third_party  third_party/  directory contains projects which originated outside of SwiftShader: LLVM  third_party/LLVM/  contains an outdated and diverged copy of the  LLVM  compiler framework</field></doc>
<doc><field name="id">10303</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">Until further notice, maintenance fixes can be made directly in the SwiftShader repository</field></doc>
<doc><field name="id">10304</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">subzero  third_party/subzero/  contains a fork of the  Subzero  project</field></doc>
<doc><field name="id">10305</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">It is part of Google Chrome's  Portable   Native Client  project</field></doc>
<doc><field name="id">10306</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">Its authoritative source is at    The fork was made using  git-subtree  to include all of Subzero's history, and until further notice it should **not* llvm-subzero  third_party/llvm-subzero/  contains a minimized set of LLVM dependencies of the Subzero project</field></doc>
<doc><field name="id">10307</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">PowerVR_SDK  third_party/PowerVR_SDK/  contains a subset of the  PowerVR Graphics Native SDK  for running several sample applications</field></doc>
<doc><field name="id">10308</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">googletest  third_party/googletest/  contains the  Google Test  project, as a Git submodule</field></doc>
<doc><field name="id">10309</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">It is used for running unit tests for Chromium, and Reactor unit tests</field></doc>
<doc><field name="id">10310</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">Run git submodule update --init to obtain/update the code</field></doc>
<doc><field name="id">10311</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">Any contributions should be made upstream.-------------See  docs/Index.md  docs/Index.md .-------Public mailing list:  swiftshader@googlegroups.com General bug tracker:  Chrome specific bugs: -------The SwiftShader project is licensed under the Apache License Version 2.You can find a copy of it in  LICENSE.txt  LICENSE.txt .Files in the third_party folder are subject to their respective license.Authors and ContributorsThe legal authors for copyright purposes are listed in  AUTHORS.txt  AUTHORS.txt</field></doc>
<doc><field name="id">10312</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">CONTRIBUTORS.txt  CONTRIBUTORS.txt  contains a list of names of individuals who have contributed to SwiftShader</field></doc>
<doc><field name="id">10313</field><field name="title">google-swiftshader</field><field name="session">SwiftShader</field><field name="sentence">If you're not on the list, but you've signed the  Google CLA  and have contributed more than a formatting change, feel free to request to be added.----------Trademarks are the property of their respective owners.We do not claim official conformance with any graphics APIs at this moment.This is not an official Google product.</field></doc>
<doc><field name="id">10314</field><field name="title">google-sync3k-client</field><field name="session">sync3k-client</field><field name="sentence">sync3k is an offline-first event-sourcing synchronization engine with optional end-to-end encryption.</field></doc>
<doc><field name="id">10315</field><field name="title">google-sync3k-client</field><field name="session">Installation</field><field name="sentence">Install with npm:</field></doc>
<doc><field name="id">10316</field><field name="title">google-sync3k-client</field><field name="session">Usage</field><field name="sentence">Currently, sync3k-client is offered as a redux store enhancer</field></doc>
<doc><field name="id">10317</field><field name="title">google-sync3k-client</field><field name="session">Usage</field><field name="sentence">First, use sync3k store enhancer when creating a store:import { createStore, applyMiddleware, compose } from 'redux';import reducer from './reducers';import { enhancer } from 'sync3k-client';const store = createStore   reducer, // existing reducers for the application  compose     ;Then, dispatch an initializeSync message with websocket base url to sync3k-server, topic name, optional password for encryption  or empty string , and a boolean indicating whether to ask for encryption keys.Disclaimer: This is not an official Google product.</field></doc>
<doc><field name="id">10318</field><field name="title">google-sync3k-server</field><field name="session">Sync3k Server</field><field name="sentence">sync3k-server is a lightweight websocket gateway to kafka</field></doc>
<doc><field name="id">10319</field><field name="title">google-sync3k-server</field><field name="session">Sync3k Server</field><field name="sentence">The server accepts websocket path:Network binding, listening port and kafka bootstrap server can be configured through flags.</field></doc>
<doc><field name="id">10320</field><field name="title">google-sync3k-server</field><field name="session">Usage</field><field name="sentence">Use sbt to run the server.sync3k-server includes  Dockerfile  Dockerfile  and  docker compose YAML  docker-compose.yml  that launches zookeeper, kafka and sync3k-server.To build the Docker image, first build an uber-jar with sbt assembly command:</field></doc>
<doc><field name="id">10321</field><field name="title">google-synthesizer-io</field><field name="session">Synthesizer IO</field><field name="sentence">Hopefully, this will become a synthesizer written in Rust</field></doc>
<doc><field name="id">10322</field><field name="title">google-synthesizer-io</field><field name="session">Synthesizer IO</field><field name="sentence">At the moment, it'sexperimental bits of technology toward that end.</field></doc>
<doc><field name="id">10323</field><field name="title">google-synthesizer-io</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10324</field><field name="title">google-systemjs</field><field name="session">Including the Loader</field><field name="sentence">Download  es6-module-loader.js  and  traceur.js  from the  ES6-loader polyfill  and locate them in the same folder as system.js from this repo.Then include dist/system.js with a script tag in the page:</field></doc>
<doc><field name="id">10325</field><field name="title">google-systemjs</field><field name="session">Write and Load a Module</field><field name="sentence">In the index.html page we can then load a module from the baseURL folder with:The module file at app/test.js will be loaded, its module format detected and any dependencies in turn loaded before returning the defined module.The entire loading class is implemented identically to the ES6 module specification, with the module format detection rules being the only addition.> _Note that when running locally, ensure you are running from a local server or a browser with local XHR requests enabled</field></doc>
<doc><field name="id">10326</field><field name="title">google-systemjs</field><field name="session">Write and Load a Module</field><field name="sentence">If not you will get an error message._> _For Chrome on Mac, you can run it with: /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --allow-file-access-from-files &> /dev/null &_> _In Firefox this requires navigating to about:config, entering security.fileuri.strict_origin_policy in the filter box and toggling the option to false._Working with Modules> Most of what is discussed in this section is simply the basics of using the new System loader</field></doc>
<doc><field name="id">10327</field><field name="title">google-systemjs</field><field name="session">Write and Load a Module</field><field name="sentence">Only the extra module format support and plugin system is additional to this browser specification.Modules are dependency-managed JavaScript files</field></doc>
<doc><field name="id">10328</field><field name="title">google-systemjs</field><field name="session">Write and Load a Module</field><field name="sentence">They are loaded by a **module name*Each module name directly corresponds to a JavaScript file URL, but without the .js extension, and with baseURL rules, mostly identical to RequireJS.The default baseURL rule is:  my/module -> resolve baseURL, 'my/module'  + '.js'</field></doc>
<doc><field name="id">10329</field><field name="title">google-systemjs</field><field name="session">Setting the baseURL</field><field name="sentence">By default, the baseURL is set to the current page, but it can be changed with:The System loader comes with a paths configuration system</field></doc>
<doc><field name="id">10330</field><field name="title">google-systemjs</field><field name="session">Setting the baseURL</field><field name="sentence">While not part of SystemJS, it is described here for completion._Note: The implementation is currently in discussion and not specified, thus it is subject to change._One can use the baseURL to reference library scripts like jquery, underscore etc.We then create a path for our local application scripts in their own separate folder, which can be set up with paths config:In this example, we can now write local application code in its own folder  app , without conflict with library code  js :</field></doc>
<doc><field name="id">10331</field><field name="title">google-systemjs</field><field name="session">Writing Modular Code</field><field name="sentence">It is recommended to write modular code in either AMD or CommonJS</field></doc>
<doc><field name="id">10332</field><field name="title">google-systemjs</field><field name="session">Writing Modular Code</field><field name="sentence">Both are equally supported by SystemJS, with the format detected automatically.For example, we can write modular CommonJS:javascript  exports.someMethod = function   {and load this with System.import 'app/module'  in the page.> Note: always use relative requires of the form ./ or ../ to reference modules in the same package</field></doc>
<doc><field name="id">10333</field><field name="title">google-systemjs</field><field name="session">Writing Modular Code</field><field name="sentence">This is important within any package for modularity.</field></doc>
<doc><field name="id">10334</field><field name="title">google-systemjs</field><field name="session">Module Format Hints</field><field name="sentence">The module format detection is well-tested over a large variety of libraries including complex UMD patterns</field></doc>
<doc><field name="id">10335</field><field name="title">google-systemjs</field><field name="session">Module Format Hints</field><field name="sentence">It will detect in order ES6, AMD, then CommonJS and fall back to global modules.It is still impossible to write 100% accurate detection though.For this reason, it is also possible to write modules with the module format specified</field></doc>
<doc><field name="id">10336</field><field name="title">google-systemjs</field><field name="session">Module Format Hints</field><field name="sentence">The module format is provided as a string, as the first line of code  excluding comments  in a file:It is recommended to use a format hint only in the few cases where the format detection would otherwise fail.</field></doc>
<doc><field name="id">10337</field><field name="title">google-systemjs</field><field name="session">Loading ES6 Modules</field><field name="sentence">SystemJS is an ES6 module loader</field></doc>
<doc><field name="id">10338</field><field name="title">google-systemjs</field><field name="session">Loading ES6 Modules</field><field name="sentence">It will detect and load ES6 modules, parsing them with Traceur dynamically</field></doc>
<doc><field name="id">10339</field><field name="title">google-systemjs</field><field name="session">Loading ES6 Modules</field><field name="sentence">This allows for dynamic loading of ES6 without a build step, although a build step still needs to be run to transpile ES6 back to ES5 and AMD for production.A very simple example:For further examples of loading ES6 modules, see the  ES6 Module Loader polyfill documentation For examples of build workflows, see the  jspm CLI documentation</field></doc>
<doc><field name="id">10340</field><field name="title">google-systemjs</field><field name="session">Automatic Global Detection</field><field name="sentence">When no module format is detected, or when the "global" hint is present, modules are treated as global scripts.Any properties written to the global object  window, this, or the outer scope  will be detected and stored</field></doc>
<doc><field name="id">10341</field><field name="title">google-systemjs</field><field name="session">Automatic Global Detection</field><field name="sentence">Then any dependencies of the global will have these properties rewritten before execution.In this way, global collissions are avoided</field></doc>
<doc><field name="id">10342</field><field name="title">google-systemjs</field><field name="session">Automatic Global Detection</field><field name="sentence">Multiple versions of jQuery can run on the same page, for example.When only one new property is added to the global object, that is taken to be the global module.When many properties are written to the global object, the collection of those properties becomes the global module.This provides loading as expected in the majority of cases:The automatic detection handles most cases, but there are still scenarios where it is necessary to define the exported global name.To specify the exported name, provide an "export" string, directly beneath the "global" hint.javascript  "global";  "export MyGlobal.obj";  };Global modules can also specify dependencies using this same hint system.We write an "import" string, directly beneath the "global" hint.javascript  "global";  "import jquery";  "export $";  }</field></doc>
<doc><field name="id">10343</field><field name="title">google-systemjs</field><field name="session">AMD Compatibility Layer</field><field name="sentence">As part of providing AMD support, SystemJS provides a small AMD compatibility layer, with the goal of supporting as much of the RequireJS test suite as possible to ensure functioning of existing AMD code.To create the requirejs and require globals as AMD globals, simply include the following  tag immediately after the inclusion of the System loader:_Note that AMD-style plugins are not supported._Map configuration works just like other module loaders, altering the module name at the normalization stage</field></doc>
<doc><field name="id">10344</field><field name="title">google-systemjs</field><field name="session">AMD Compatibility Layer</field><field name="sentence">System.map 'jquery'  = 'app/jquery@1.8.3';Map configuration also affects submodules:The order in which module format detection is performed, is provided by the System.formats</field></doc>
<doc><field name="id">10345</field><field name="title">google-systemjs</field><field name="session">AMD Compatibility Layer</field><field name="sentence">The default value is  'amd', 'cjs', 'global' .To add a new module format, specify it in the System.formats array, and then provide a System.format rule for it.The format rule provides two functions   System.formats =  'amd', 'cjs', 'myformat', 'global' ;  }For further examples, see the internal AMD or CommonJS support implemented in this way here.Plugins can be created to handle alternative loading scenarios, including loading assets such as CSS or images, and providing custom transpilation scenarios.Plugins are indicated by ! syntax, which unlike RequireJS is appended at the end of the module name, not the beginning.The plugin name is just a module name itself, and if not specified, is assumed to be the extension name of the module.Supported Plugins:Note that the AMD compatibility layer could provide a mapping from AMD plugins into SystemJS plugins that provide the same functionality as associated SystemJS plugins.</field></doc>
<doc><field name="id">10346</field><field name="title">google-systemjs</field><field name="session">Creating Plugins</field><field name="sentence">A plugin is just a set of overrides for the loader hooks of the ES6 module specification.The hooks plugins can override are locate, fetch and translate.Read more on the loader hooks at the  ES6 Module Loader polyfill page</field></doc>
<doc><field name="id">10347</field><field name="title">google-systemjs</field><field name="session">Sample CoffeeScript Plugin</field><field name="sentence">For example, we can write a CoffeeScript plugin with the following  CommonJS as an example, any module format works fine :javascript  var CoffeeScript = require 'coffeescript' ;  }By overriding the translate hook, we now support CoffeeScript loading with:A CSS plugin, on the other hand, would override the fetch hook:javascript  exports.fetch = function load  {  }Each loader hook can either return directly or return a thenable for the value.The other loader hooks are also treated identically to the specification.---</field></doc>
<doc><field name="id">10348</field><field name="title">google-syzkaller</field><field name="session">syzkaller</field><field name="sentence">! Go Report Card    ! License   LICENSE syzkaller is an unsupervised coverage-guided kernel fuzzer</field></doc>
<doc><field name="id">10349</field><field name="title">google-syzkaller</field><field name="session">syzkaller</field><field name="sentence">Linux kernel fuzzing has the most support, akaros, freebsd, fuchsia, netbsd, windows and gvisor are supported to varying degrees.The project mailing list is  syzkaller@googlegroups.com You can subscribe to it with a google account or by sending an email to syzkaller+subscribe@googlegroups.com</field></doc>
<doc><field name="id">10350</field><field name="title">google-syzkaller</field><field name="session">syzkaller</field><field name="sentence">List of found bugs  docs/found_bugs.md .</field></doc>
<doc><field name="id">10351</field><field name="title">google-syzkaller</field><field name="session">Documentation</field><field name="sentence">Initially, syzkaller was developed with Linux kernel fuzzing in mind, but now it's being extended to support other OS kernels as well.Most of the documentation at this moment is related to the Linux kernel.For other OS kernels check:  Akaros  docs/akaros/README.md ,  FreeBSD  docs/freebsd.md ,  Fuchsia  docs/fuchsia.md ,  NetBSD  docs/netbsd.md ,  Windows  docs/windows.md ,  gVisor  docs/gvisor.md .This is not an official Google product.</field></doc>
<doc><field name="id">10352</field><field name="title">google-talkback</field><field name="session">Introduction</field><field name="sentence">This repository contains sources for two Android accessibility services from Google:</field></doc>
<doc><field name="id">10353</field><field name="title">google-talkback</field><field name="session">Dependencies</field><field name="sentence">To build TalkBack sources you will need:Download android sdk from <>Set ANDROID_HOME to the path of Android sdk folderOpen Android SDK manager and installTalkBack uses gradle as build system.Here are commands to build, install and test the project from command line:Assemble debug and release apks: ./gradlew assembleAssemble only debug apk: ./gradlew assembleDebugInstall debug apk on connected device: ./gradlew installDebugRun robolectric tests: ./gradlew test</field></doc>
<doc><field name="id">10354</field><field name="title">google-talkback</field><field name="session">Test App</field><field name="sentence">This repository also includes a test app that you can use to:Test TalkBack's behavior against various standard widgets and interaction patterns.Explore source code for test cases to see the implementation of various TalkBack features.To build and install the app, do the following:Switch to the root directory of this repository.Change to the "tests" directory.To assemble debug and release apk: ./gradlew assembleTo build debug apk: ./gradlew assembleDebugThe apks will be located in the app/build/outputs/apk directory.</field></doc>
<doc><field name="id">10355</field><field name="title">google-tamperchrome</field><field name="session">How To Install *Tamper Chrome*</field><field name="sentence">***Tamper Chrome**First Install the  *Tamper Chrome**Then Install the  *Tamper Chrome**Restart your browser.**</field></doc>
<doc><field name="id">10356</field><field name="title">google-tamperchrome</field><field name="session">Want to know how to use *Tamper Chrome*?</field><field name="sentence">If you have any more questions feel free to post  to the group</field></doc>
<doc><field name="id">10357</field><field name="title">google-tamperchrome</field><field name="session">How to open *Tamper Chrome*?</field><field name="sentence">**First of all, you need to open Google Chrome DevTools.** **After that, you will find a new tab called "Tamper" at the top-right side, and click on it.**</field></doc>
<doc><field name="id">10358</field><field name="title">google-tamperchrome</field><field name="session">How to use *Tamper Chrome*?</field><field name="sentence">! Tamper Chrome *Tamper ChromeTo do so, simply click on the checkbox next to the tool's name, and this will mark the tool as active.! Active In the following section we explain how to use each tool.</field></doc>
<doc><field name="id">10359</field><field name="title">google-tamperchrome</field><field name="session">Block / Reroute Requests</field><field name="sentence">This tool allows you to either **block*You can do that by simply changing the URL and clicking *Allow*.! Block You can also click on *Edit javascript</field></doc>
<doc><field name="id">10360</field><field name="title">google-tamperchrome</field><field name="session">Request Headers</field><field name="sentence">While Block / Reroute requests is useful to tamper with a website, and cancel some requests, in many cases you might want to modify HTTP request headers.This tool will allow you to do just that.! Headers You can drop a header by clicking on the *Trash</field></doc>
<doc><field name="id">10361</field><field name="title">google-tamperchrome</field><field name="session">Response Headers</field><field name="sentence">The response headers work exactly the same as the request headers</field></doc>
<doc><field name="id">10362</field><field name="title">google-tamperchrome</field><field name="session">Response Headers</field><field name="sentence">It allows you to drop, modify or add new headers.! Response Very useful for dropping or modifying many security headers like Content-Security-Policy, X-Frame-Options, X-XSS-Protection, etcetera.</field></doc>
<doc><field name="id">10363</field><field name="title">google-tamperchrome</field><field name="session">Monitor PostMessages</field><field name="sentence">Unlike the other tools, this tool is mostly only useful for monitoring websites that use the HTML5 postMessage API.When activated, it does the following:Another very cool feature of *Tamper ChromeWhen testing for XSS, you can use  as an HTML element, and *Tamper ChromeNote that you can also use  and , which also work as an attribute, and as a javascript variable.To trigger it, just use as your XSS payload tamperchrome as an attribute, tagname or javascript variable.! tcxss</field></doc>
<doc><field name="id">10364</field><field name="title">google-tamperchrome</field><field name="session">Replay Requests  Experimental</field><field name="sentence">The last tool in *Tamper Chrome! replay</field></doc>
<doc><field name="id">10365</field><field name="title">google-tamperchrome</field><field name="session">NOTE</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10366</field><field name="title">google-tangent</field><field name="session">Tangent</field><field name="sentence">! Join the chat at   Tangent is a new, free, and open-source Python library for automatic differentiation.! Autodiff Tool Space  docs/toolspace.png "Autodiff Tool Space" As a result, you can finally read your automatic derivative code just like the rest of your program</field></doc>
<doc><field name="id">10367</field><field name="title">google-tangent</field><field name="session">Tangent</field><field name="sentence">Tangent is useful to researchers and students who not only want to write their models in Python, but also read and debug automatically-generated derivative code without sacrificing speed and flexibility.Tangent works on a large and growing subset of Python, provides extra autodiff features other Python ML libraries don't have, has reasonable performance, and is compatible with TensorFlow and NumPy.This project is an experimental release, and is under active development</field></doc>
<doc><field name="id">10368</field><field name="title">google-tangent</field><field name="session">Tangent</field><field name="sentence">As we continue to build Tangent, and respond to feedback from the community, there might be API changes.</field></doc>
<doc><field name="id">10369</field><field name="title">google-tangent</field><field name="session">Usage</field><field name="sentence">Note: An interactive notebook with all the code in this page can be found  here Tangent has a one-function API:If you want to print out derivatives at the time Tangent generates the derivative function:! Live Derivatives with Tangent  docs/sct-ad-live.gif "Live Derivatives with Tangent"</field></doc>
<doc><field name="id">10370</field><field name="title">google-tangent</field><field name="session">Installation</field><field name="sentence">The easiest way to install Tangent is to use pip.We'll have a conda package soon.</field></doc>
<doc><field name="id">10371</field><field name="title">google-tangent</field><field name="session">Automatic Differentiation</field><field name="sentence">Under the hood, tangent.grad grabs the source code of the Python function you pass it  using inspect.getsource, which is available in the Python standard library , converts the source code into an abstract syntax tree  AST  using ast.parse  also built into the Python standard library , and walks the syntax tree in reverse order.Tangent has a library of recipes for the derivatives of basic arithmetic  +,-,/,**,* , pieces of syntax  ast.For, ast.If, ast.While  and TensorFlow Eager functions  tf.reduce_sum, tf.exp, tf.matmul, ..</field></doc>
<doc><field name="id">10372</field><field name="title">google-tangent</field><field name="session">Automatic Differentiation</field><field name="sentence"></field></doc>
<doc><field name="id">10373</field><field name="title">google-tangent</field><field name="session">Automatic Differentiation</field><field name="sentence">For each piece of syntax it encounters  for example, c = a + b is a single AST node ast.Assign , tangent.grad looks up the matching backward-pass recipe, and adds it to the end of the derivative function.This reverse-order processing gives the technique its name: reverse-mode automatic differentiation.</field></doc>
<doc><field name="id">10374</field><field name="title">google-tangent</field><field name="session">TF Eager</field><field name="sentence">Tangent supports differentiating functions that use TensorFlow Eager functions that are composed together.def f W,x :  h1 = tf.matmul x,W   h2 = tf.tanh h1   out = tf.reduce_sum h2   return outdfdW = tangent.grad f ! SCT on TF Eager  docs/sct-ad-tf.gif "SCT on TF Eager"</field></doc>
<doc><field name="id">10375</field><field name="title">google-tangent</field><field name="session">Subroutines</field><field name="sentence">When model code becomes long, using subroutines makes code more readable and reusable</field></doc>
<doc><field name="id">10376</field><field name="title">google-tangent</field><field name="session">Subroutines</field><field name="sentence">Tangent handles taking derivatives of models that have user-defined functions.! SCT on Subroutines  docs/sct-ad-subroutine.gif "SCT on Subroutines"</field></doc>
<doc><field name="id">10377</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">Tangent has recipes for auto-generating derivatives for code that contains if statements and loops:! SCT on Conditionals  docs/sct-ad-conditional.gif "SCT on Conditionals" You'll notice above that we have to modify the user's code to keep track of information that we will need in the backward pass</field></doc>
<doc><field name="id">10378</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">For instance, we need to save which branch of an if-statement was followed in the forward pass, so that we run the correct branch in the backward pass</field></doc>
<doc><field name="id">10379</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">We save this information from the forward pass by pushing it onto a stack, which we then pop off in the backward pass</field></doc>
<doc><field name="id">10380</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">This is an important data structure in ahead-of-time autodiff.For loops require a little more bookkeeping</field></doc>
<doc><field name="id">10381</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">Tangent has to save the number of iterations of the loop on the stack</field></doc>
<doc><field name="id">10382</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">Also, loops usually overwrite the values of variables inside the loop body</field></doc>
<doc><field name="id">10383</field><field name="title">google-tangent</field><field name="session">Control Flow</field><field name="sentence">In order to generate a correct derivative, Tangent has to keep track of all of the overwritten values, and restore them in the backward pass in the correct order.! SCT on Loops  docs/sct-ad-loop.gif "SCT on Loops"</field></doc>
<doc><field name="id">10384</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">Tangent uses Python's built-in machinery to introspect and transform the _abstract syntax tree_  AST  of parsed source code at runtime</field></doc>
<doc><field name="id">10385</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">For each piece of supported Python syntax, we have implemented a rule indicating how to rewrite an AST node into its backward pass equivalent, or "adjoint"</field></doc>
<doc><field name="id">10386</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">We have defined adjoints for function calls to NumPy and TF Eager methods, as well as larger pieces of syntax, such as if-statements and for-loops</field></doc>
<doc><field name="id">10387</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">The adjoints are stored in function definitions that serve as "templates", or code macros</field></doc>
<doc><field name="id">10388</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">Another alternative, which we found too cumbersome, would be to use a templating engine like  Mustache  and store adjoints as plain strings</field></doc>
<doc><field name="id">10389</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">Our templates also use a special syntax d x  to refer to the derivative of a variable x.While differentiating a function, if Tangent encounters a function call, it first checks if it has a gradient registered for that function</field></doc>
<doc><field name="id">10390</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">If not, it tries to get the function source, and generate a derivative ahead-of-time</field></doc>
<doc><field name="id">10391</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">But, it's easy to register your own gradients</field></doc>
<doc><field name="id">10392</field><field name="title">google-tangent</field><field name="session">Custom Gradients</field><field name="sentence">Here's a toy example of defining the gradient of x^3.import tangentfrom tangent.grads import adjointdef cube x :  return x</field></doc>
<doc><field name="id">10393</field><field name="title">google-tangent</field><field name="session">is used in your containing function.</field><field name="sentence">@adjoint cube def dcube result, x :  d x  = d result print tangent.grad f,verbose=1  The signature for the custom gradient of some functionThe first argument to the template is always the result of the function call, followed by the function arguments, in order.Tangent captures the variable names of the result and arguments, and then will use them to unquote the gradient template at the appropriate place in the backward pass.Check out an  example gradient definition of a NumPy function  and  of a TF eager function  Also,  see the docstring in grads.py for more info</field></doc>
<doc><field name="id">10394</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">Because Tangent auto-generates derivative code you can read, you can also easily debug your backward pass</field></doc>
<doc><field name="id">10395</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">For instance, your NN might be outputting NaNs during training, and you want to find out where the NaNs are being generated in your model</field></doc>
<doc><field name="id">10396</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">Just insert a breakpoint  e.g., pdb.set_trace    at the end of your forward pass.! SCT for Debugging  docs/sct-ad-debugging.png "SCT for Debugging" For large models, setting a breakpoint at the beginning of the backward pass and stepping through dozens of lines might be cumbersome</field></doc>
<doc><field name="id">10397</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">Instead, you might want the breakpoint to be placed later in the derivative calculation</field></doc>
<doc><field name="id">10398</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">Tangent lets you insert code directly into any location in the backward pass</field></doc>
<doc><field name="id">10399</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">First, run from tangent import insert_grad_of, then add a with insert_grad_of block containing the code you'd like to insert into the backward pass.from tangent import insert_grad_ofdef f x :  ..</field></doc>
<doc><field name="id">10400</field><field name="title">google-tangent</field><field name="session">Debugging</field><field name="sentence">with insert_grad_of x  as dx:  ...! Ad Hoc Gradient Code  docs/sct-ad-insert_grad_of.gif "Ad Hoc Gradient Code"</field></doc>
<doc><field name="id">10401</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">You can use the insert_grad_of feature to do more than debugging and logging</field></doc>
<doc><field name="id">10402</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">Some NN architectures benefit from tricks that directly manipulate the backward pass</field></doc>
<doc><field name="id">10403</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">For example, recurrent neural networks  RNNs  suffer from the "exploding gradient" problem, where gradients grow exponentially</field></doc>
<doc><field name="id">10404</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">This prevents the model from training properly</field></doc>
<doc><field name="id">10405</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">A typical solution is to force the derivatives inside of an RNN to not exceed a certain value by directly clipping them</field></doc>
<doc><field name="id">10406</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">We can implement this with insert_grad_of.def f params, x :  h = x  for i in range 5 :  return hdfdparams = tangent.grad f You can perform other backward-pass tricks with insert_grad_of, such as stop gradients  use a break in the inlined code to stop a for loop , or synthetic gradients  replace a derivative with a prediction from a neural network</field></doc>
<doc><field name="id">10407</field><field name="title">google-tangent</field><field name="session">Derivative Surgery</field><field name="sentence">This feature lets Tangent users easily debug their models, or quickly try out derivative tweaks in the backward pass.</field></doc>
<doc><field name="id">10408</field><field name="title">google-tangent</field><field name="session">Forward Mode</field><field name="sentence">Reverse-mode autodiff, or backpropagation, generates efficient derivatives for the types of functions we use in machine learning, where there are usually many  perhaps millions  of input variables and only a single output  our loss</field></doc>
<doc><field name="id">10409</field><field name="title">google-tangent</field><field name="session">Forward Mode</field><field name="sentence">When the inverse is true, where there are many more outputs than inputs, reverse mode is not an efficient algorithm, as it has to be run as many times as there are output variables</field></doc>
<doc><field name="id">10410</field><field name="title">google-tangent</field><field name="session">Forward Mode</field><field name="sentence">However, a less famous algorithm, forward-mode autodiff, only has to be run as many times as there are _input_ variables</field></doc>
<doc><field name="id">10411</field><field name="title">google-tangent</field><field name="session">Forward Mode</field><field name="sentence">Tangent supports forward-mode autodiff.def f x :  a = x  c = a + b  return cforward_df = tangent.autodiff f, mode='forward' ! SCT Forward Mode  docs/sct-ad-forward.gif "SCT Forward Mode"</field></doc>
<doc><field name="id">10412</field><field name="title">google-tangent</field><field name="session">Hessian-Vector Products</field><field name="sentence">Although we won't dig into the technical details, forward-mode is very useful when combined with reverse-mode to calculate efficient higher-order derivatives, particularly for Hessian-vector products  HVP  of NNs</field></doc>
<doc><field name="id">10413</field><field name="title">google-tangent</field><field name="session">Hessian-Vector Products</field><field name="sentence">This is useful in research applications, and usually very painful and slow to calculate</field></doc>
<doc><field name="id">10414</field><field name="title">google-tangent</field><field name="session">Hessian-Vector Products</field><field name="sentence">Autograd has native forward-mode support, while TensorFlow has 3rd-party support.To take higher-order derivatives, you can use any combination of forwarddef f x :hvp = tangent.autodiff tangent.autodiff f,mode='reverse' ,mode='forward'</field></doc>
<doc><field name="id">10415</field><field name="title">google-tangent</field><field name="session">Performance</field><field name="sentence">Although we did not build Tangent for performance, it is competitive with major ML libraries</field></doc>
<doc><field name="id">10416</field><field name="title">google-tangent</field><field name="session">Performance</field><field name="sentence">Because we are generating derivatives ahead-of-time, there is no interpretive overhead like there is with runtime autodiff libraries</field></doc>
<doc><field name="id">10417</field><field name="title">google-tangent</field><field name="session">Performance</field><field name="sentence">We implemented a few compiler optimizations  dead code elimination, and constant folding , but we are still working on extra optimization passes to further increase performance.! Small Benchmark  docs/small-benchmark.png "Small Benchmark"</field></doc>
<doc><field name="id">10418</field><field name="title">google-tangent</field><field name="session">Optimization</field><field name="sentence">We are often interested in the gradients of only some of the arguments</field></doc>
<doc><field name="id">10419</field><field name="title">google-tangent</field><field name="session">Optimization</field><field name="sentence">In thiscase, many of the adjoint calculation might be dead code</field></doc>
<doc><field name="id">10420</field><field name="title">google-tangent</field><field name="session">Optimization</field><field name="sentence">In the optimizationpass this is removed</field></doc>
<doc><field name="id">10421</field><field name="title">google-tangent</field><field name="session">Optimization</field><field name="sentence">We also perform limited constant folding and assignment propagation.</field></doc>
<doc><field name="id">10422</field><field name="title">google-tangent</field><field name="session">Known Limitations</field><field name="sentence">Tangent is still an experiment, so expect some bugs</field></doc>
<doc><field name="id">10423</field><field name="title">google-tangent</field><field name="session">Known Limitations</field><field name="sentence">If you report them to us on GitHub, we will do our best to fix them quickly.We are working to add support in Tangent for more aspects of the Python language  e.g., closures, inline function definitions, classes, more NumPy and TensorFlow functions</field></doc>
<doc><field name="id">10424</field><field name="title">google-tangent</field><field name="session">Known Limitations</field><field name="sentence">We also hope to add more advanced automatic differentiation and compiler functionality in the future, such as automatic trade-off between memory and compute  Griewank and Walther 2000; Gruslys et al., 2016 , more aggressive optimizations, and lambda lifting.Many of Python's advanced features are difficult to statically analyze or todefine sensible gradients of, so we restrict Python to a functional subset i.e</field></doc>
<doc><field name="id">10425</field><field name="title">google-tangent</field><field name="session">Known Limitations</field><field name="sentence">no mutable objects .</field></doc>
<doc><field name="id">10426</field><field name="title">google-tangent</field><field name="session">Closures</field><field name="sentence">Closures are currently not supported for the following reasons:  will resolve to the same function at each call.</field></doc>
<doc><field name="id">10427</field><field name="title">google-tangent</field><field name="session">Classes</field><field name="sentence">Classes are not _currently_ supported, but are on our near-term roadmap.This will enable PyTorch/Chainer/TFEager-style class definitions of neural networks, and parameterized functions, like in TF Slim.</field></doc>
<doc><field name="id">10428</field><field name="title">google-tangent</field><field name="session">Team</field><field name="sentence">Tangent is developed by Alex Wiltschko, Bart van Merrienboer and Dan Moldovan.</field></doc>
<doc><field name="id">10429</field><field name="title">google-tarpc</field><field name="session">tarpc: Tim & Adam's RPC lib</field><field name="sentence">! Software License   LICENSE  ! Latest Version   ! Join the chat at   *Disclaimer*: This is not an official Google product.tarpc is an RPC framework for rust with a focus on ease of use</field></doc>
<doc><field name="id">10430</field><field name="title">google-tarpc</field><field name="session">tarpc: Tim & Adam's RPC lib</field><field name="sentence">Defining aservice can be done in just a few lines of code, and most of the boilerplate ofwriting a server is taken care of for you</field></doc>
<doc><field name="id">10431</field><field name="title">google-tarpc</field><field name="session">tarpc: Tim & Adam's RPC lib</field><field name="sentence">Documentation</field></doc>
<doc><field name="id">10432</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">"RPC" stands for "Remote Procedure Call," a function call where the work ofproducing the return value is being done somewhere else</field></doc>
<doc><field name="id">10433</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">When an rpc function isinvoked, behind the scenes the function contacts some other process somewhereand asks them to evaluate the function instead</field></doc>
<doc><field name="id">10434</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">The original function thenreturns the value produced by the other process.RPC frameworks are a fundamental building block of most microservices-orientedarchitectures</field></doc>
<doc><field name="id">10435</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">Two well-known ones are  gRPC  and Cap'n Proto tarpc differentiates itself from other RPC frameworks by defining the schema in code,rather than in a separate language such as .proto</field></doc>
<doc><field name="id">10436</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">This means there's no separate compilationprocess, and no cognitive context switching between different languages</field></doc>
<doc><field name="id">10437</field><field name="title">google-tarpc</field><field name="session">What is an RPC framework?</field><field name="sentence">Additionally, itworks with the community-backed library serde: any serde-serializable type can be used asarguments to tarpc fns.</field></doc>
<doc><field name="id">10438</field><field name="title">google-tarpc</field><field name="session">Usage</field><field name="sentence">**NB**: *this example is for master</field></doc>
<doc><field name="id">10439</field><field name="title">google-tarpc</field><field name="session">Usage</field><field name="sentence">Are you looking for other versions Add to your Cargo.toml dependencies:tarpc has two APIs: sync for blocking code and future for asynchronouscode</field></doc>
<doc><field name="id">10440</field><field name="title">google-tarpc</field><field name="session">Usage</field><field name="sentence">Here's how to use the sync api.</field></doc>
<doc><field name="id">10441</field><field name="title">google-tarpc</field><field name="session">#! plugin tarpc_plugins</field><field name="sentence">extern crate futures;</field></doc>
<doc><field name="id">10442</field><field name="title">google-tarpc</field><field name="session">macro_use</field><field name="sentence">extern crate tarpc;extern crate tokio_core;use futures::Future;use tarpc::future::{client, server};use tarpc::future::client::ClientExt;use tarpc::tls;use tarpc::util::{FirstSocketAddr, Never};use tokio_core::reactor;use tarpc::native_tls::{Pkcs12, TlsAcceptor};service! {</field></doc>
<doc><field name="id">10443</field><field name="title">google-tarpc</field><field name="session">derive Clone</field><field name="sentence">struct HelloServer;impl FutureService for HelloServer {fn get_acceptor   -> TlsAcceptor {fn main   {</field></doc>
<doc><field name="id">10444</field><field name="title">google-tarpc</field><field name="session">Example: Futures</field><field name="sentence">Here's the same service, implemented using futures.</field></doc>
<doc><field name="id">10445</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">By default, tarpc internally uses a  TcpStream  for communication between your clients andservers</field></doc>
<doc><field name="id">10446</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">However, TCP by itself has no encryption</field></doc>
<doc><field name="id">10447</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">As a result, your communication will be sent inthe clear</field></doc>
<doc><field name="id">10448</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">If you want your RPC communications to be encrypted, you can choose to use  TLS</field></doc>
<doc><field name="id">10449</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">TLSoperates as an encryption layer on top of TCP</field></doc>
<doc><field name="id">10450</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">When using TLS, your communication will occur over a TlsStream</field></doc>
<doc><field name="id">10451</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">You can add the ability to make TLS clients and servers by adding tarpcwith the tls feature flag enabled.When using TLS, some additional information is required</field></doc>
<doc><field name="id">10452</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">You will need to make  client::tls::Context structs; client::tls::Context requires a  TlsConnector</field></doc>
<doc><field name="id">10453</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">The TlsAcceptor  and  TlsConnector  types are defined in the  native-tls</field></doc>
<doc><field name="id">10454</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">tarpc re-exportsexternal TLS-related types in its native_tls module  tarpc::native_tls</field></doc>
<doc><field name="id">10455</field><field name="title">google-tarpc</field><field name="session">Example: Futures + TLS</field><field name="sentence">TLS :  TcpStream :  TlsStream :  TlsAcceptor :  TlsConnector :  native-tls : Both TLS streams and TCP streams are supported in the same binary when the tls feature is enabled.However, if you are working with both stream types, ensure that you use the TLS clients with TLSservers and TCP clients with TCP servers.</field></doc>
<doc><field name="id">10456</field><field name="title">google-tarpc</field><field name="session">Sync vs Futures</field><field name="sentence">A single service! invocation generates code for both synchronous and future-based applications.It's up to the user whether they want to implement the sync API or the futures API</field></doc>
<doc><field name="id">10457</field><field name="title">google-tarpc</field><field name="session">Sync vs Futures</field><field name="sentence">The sync API hasthe simplest programming model, at the cost of some overhead thread</field></doc>
<doc><field name="id">10458</field><field name="title">google-tarpc</field><field name="session">Sync vs Futures</field><field name="sentence">The futures API is based on tokio and can run on any tokio-compatible executor</field></doc>
<doc><field name="id">10459</field><field name="title">google-tarpc</field><field name="session">Sync vs Futures</field><field name="sentence">This mean aservice that implements the futures API for a tarpc service can run on a single thread, avoidingcontext switches and the memory overhead of having a thread per RPC.</field></doc>
<doc><field name="id">10460</field><field name="title">google-tarpc</field><field name="session">Errors</field><field name="sentence">All generated tarpc RPC methods return either std::error::Error  if no error type is explicitly specified in the service! macro invocation</field></doc>
<doc><field name="id">10461</field><field name="title">google-tarpc</field><field name="session">Errors</field><field name="sentence">Anerror type can be specified like so:use tarpc::util::Message;service! {tarpc::util::Message is just a wrapper around string that implements std::error::Error providedfor service implementations that don't require complex error handling</field></doc>
<doc><field name="id">10462</field><field name="title">google-tarpc</field><field name="session">Errors</field><field name="sentence">The pipe is used as syntaxfor specifying the error type in a way that's agnostic of whether the service implementation issynchronous or future-based</field></doc>
<doc><field name="id">10463</field><field name="title">google-tarpc</field><field name="session">Errors</field><field name="sentence">Note that in the simpler examples in the readme, no pipe is used, andthe macro automatically chooses tarpc::util::Never as the error type.The above declaration would produce the following synchronous service trait:trait FutureService {</field></doc>
<doc><field name="id">10464</field><field name="title">google-tarpc</field><field name="session">Documentation</field><field name="sentence">Use cargo doc as you normally would to see the documentation created for allitems expanded by a service! invocation.</field></doc>
<doc><field name="id">10465</field><field name="title">google-tarpc</field><field name="session">Gaps/Potential Improvements  not necessarily actively being worked on</field><field name="sentence">To contribute to tarpc, please see  CONTRIBUTING  CONTRIBUTING.md .</field></doc>
<doc><field name="id">10466</field><field name="title">google-tarpc</field><field name="session">License</field><field name="sentence">tarpc is distributed under the terms of the MIT license.See  LICENSE  LICENSE  for details.</field></doc>
<doc><field name="id">10467</field><field name="title">google-tcp_killer</field><field name="session">tcp_killer</field><field name="sentence">Shuts down a TCP connection on Linux or macOS</field></doc>
<doc><field name="id">10468</field><field name="title">google-tcp_killer</field><field name="session">tcp_killer</field><field name="sentence">Local and remote endpoint arguments can be copied from the output of 'netstat -lanW'.The functionality offered by *tcp_killer</field></doc>
<doc><field name="id">10469</field><field name="title">google-tcp_killer</field><field name="session">Basic Usage</field><field name="sentence">python tcp_killer.py  -verbose</field></doc>
<doc><field name="id">10470</field><field name="title">google-tcp_killer</field><field name="session">Full Example</field><field name="sentence">geffner@ubuntu:~ 1  135578geffner@ubuntu:~ 2  135579Connection to localhost 12345 port  tcp/*  succeeded!geffner@ubuntu:~tcpgeffner@ubuntu:~TCP connection was successfully shutdown</field></doc>
<doc><field name="id">10471</field><field name="title">google-tcp_killer</field><field name="session">Full Example</field><field name="sentence">1  2 +  Done</field></doc>
<doc><field name="id">10472</field><field name="title">google-tcp_killer</field><field name="session">lsof</field><field name="sentence">This program uses  lsof  to find the process and socket file descriptor associated with a given TCP connection.lsof can be installed via your package management system  for example, sudo apt-get install lsof .</field></doc>
<doc><field name="id">10473</field><field name="title">google-tcp_killer</field><field name="session">frida</field><field name="sentence">This program uses the  frida  framework to perform code injection.Frida can be installed as follows: sudo pip install frida</field></doc>
<doc><field name="id">10474</field><field name="title">google-tcp_killer</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10475</field><field name="title">google-tcpauth</field><field name="session">tcpauth</field><field name="sentence">Copyright 2016 Google Inc</field></doc>
<doc><field name="id">10476</field><field name="title">google-tcpauth</field><field name="session">tcpauth</field><field name="sentence">All Rights Reserved.tcpauth allows you to wrap TCP connections in RFC2386 MD5 signatures, to preventany attacker from talking to a server without first having the shared secret.This protects against any preauth attacks in the server application itself</field></doc>
<doc><field name="id">10477</field><field name="title">google-tcpauth</field><field name="session">tcpauth</field><field name="sentence">Youcould compare it to port knocking, in that this could let you keep SSH open forconnections from all over the world, as long as they know the sharedsecret</field></doc>
<doc><field name="id">10478</field><field name="title">google-tcpauth</field><field name="session">tcpauth</field><field name="sentence">Normal authentication would take place after connection, so it doesn'treduce security.Another benefit is that when MD5 signatures are turned on an attacker can'tspoof RST packets to kill your connection.</field></doc>
<doc><field name="id">10479</field><field name="title">google-tcpauth</field><field name="session">Installing</field><field name="sentence">If building from git repo:Example of running an SSH server on port On the server:</field></doc>
<doc><field name="id">10480</field><field name="title">google-tcpproxy</field><field name="session">tcpproxy</field><field name="sentence">For library usage, see For CLI usage, see</field></doc>
<doc><field name="id">10481</field><field name="title">google-teknowledge</field><field name="session">Who/what is Teknowledge?</field><field name="sentence">Teknowledge's mission is to create a introductory CS curriculum for text-based programming</field></doc>
<doc><field name="id">10482</field><field name="title">google-teknowledge</field><field name="session">Who/what is Teknowledge?</field><field name="sentence">This is not a Google product, but worked on as part of a Googler's 20% time</field></doc>
<doc><field name="id">10483</field><field name="title">google-teknowledge</field><field name="session">Who/what is Teknowledge?</field><field name="sentence">The current curriculum is being developed targeting 7th-8th grade students in Pittsburgh, though we aim to share it as widely as it finds use.Learn more at  teknowledge.xyz</field></doc>
<doc><field name="id">10484</field><field name="title">google-teknowledge</field><field name="session">Using Teknowledge's Curriculum</field><field name="sentence">There are two curriculums in this repository.</field></doc>
<doc><field name="id">10485</field><field name="title">google-teknowledge</field><field name="session">Credits</field><field name="sentence">Teknowledge started as a Carnegie Mellon student organization in early 2016, and has continued through the help of many organizations and people.</field></doc>
<doc><field name="id">10486</field><field name="title">google-teknowledge</field><field name="session">Curriculum Developers</field><field name="sentence">Erik Pintar, Chris George, Amal Nanavati, Rudina Morina, Vikram Shanker, Claire Wang, Henry Nelson, Dominic Calkosz, Keerthana Gurushankar</field></doc>
<doc><field name="id">10487</field><field name="title">google-teknowledge</field><field name="session">Special Thanks</field><field name="sentence">Mark Stehlik, David Kosbie</field></doc>
<doc><field name="id">10488</field><field name="title">google-teknowledge</field><field name="session">Thanks for Funding</field><field name="sentence">Google,  Google IgniteCS  Carnegie Mellon University</field></doc>
<doc><field name="id">10489</field><field name="title">google-templatekit</field><field name="session">#TemplateKit</field><field name="sentence">*This software is still in alpha</field></doc>
<doc><field name="id">10490</field><field name="title">google-templatekit</field><field name="session">#TemplateKit</field><field name="sentence">Backward-incompatible changes willbe made without notice.*TemplateKit is a framework for iOS view programming</field></doc>
<doc><field name="id">10491</field><field name="title">google-templatekit</field><field name="session">#TemplateKit</field><field name="sentence">Its goal is tobecome a default tool for implementing complex custom views withabstractions optimized for the most common cases.TemplateKit provides an intuitive and efficient DSL to perform commontasks in view programming such as view hierarchy construction, datapopulation, and layout</field></doc>
<doc><field name="id">10492</field><field name="title">google-templatekit</field><field name="session">#TemplateKit</field><field name="sentence">View code written with TemplateKit is muchshorter and more readable than code written with the raw UIView API.For example, to implement a classic table view cell with an image onthe left and two stacked texts on the right like this:you would just write:These seven lines of template code in the block is enough to tell the framework toconstruct a view hierarchy with one UIImageView instance and two UILabel instances,populate them with runtime data, and lay out the view hierarchy with the specifiedmargin and paddings</field></doc>
<doc><field name="id">10493</field><field name="title">google-templatekit</field><field name="session">#TemplateKit</field><field name="sentence">Even a very simple view like this would take several dozens oflines if it were implemented with the raw UIView API.Find examples in SampleApp/Templates.</field></doc>
<doc><field name="id">10494</field><field name="title">google-templatekit</field><field name="session">##Discussion Forum</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10495</field><field name="title">google-tensorflow-tools</field><field name="session">Decode data ####</field><field name="sentence">const TensorFlowReaders = require 'tensorflow-tools' .readers;let metaData = ...;let indexData = ...;let dataData = ...;let checkpointReader = readers.getCheckpointReader  ;checkpointReader.decode   metaData, indexData, dataData .then    => {  console.log 'Happy checkpoint data', checkpointReader ;} ;</field></doc>
<doc><field name="id">10496</field><field name="title">google-tensorflow-tools</field><field name="session">Decode local files ####</field><field name="sentence">const TensorFlowReaders = require 'tensorflow-tools' .readers;let checkpointReader = readers.getCheckpointReader  ;checkpointReader.decodeLocalFiles   '...model.ckpt' .then    => {  console.log 'Happy checkpoint data', checkpointReader ;} ;</field></doc>
<doc><field name="id">10497</field><field name="title">google-tensorflow-tools</field><field name="session">Decode remote files ####</field><field name="sentence">const TensorFlowReaders = require 'tensorflow-tools' .readers;let checkpointReader = readers.getCheckpointReader  ;checkpointReader.decodeRemoteFiles   ' .then    => {  console.log 'Happy checkpoint data', checkpointReader ;} ;--------------------</field></doc>
<doc><field name="id">10498</field><field name="title">google-terminal-app-function-keys</field><field name="session">Terminal.app Function Keys</field><field name="sentence">Mac OS X Terminal.app profile which enables functional keys with modifiers.It's a known problem that a lot of proper keyboard shortcuts, like Shift-F2or Alt-PgUp do not work properly when used from Mac OS X Terminal.appI created this Terminal.app profile which enablesall the combinations of F1-F12, cursor keys, page up/downwith shift, alt and control.</field></doc>
<doc><field name="id">10499</field><field name="title">google-terminal-app-function-keys</field><field name="session">How to use?</field><field name="sentence">Download Function Keys.terminal file and import it into Terminal Preferences|Profile| This may require Mac OS X Yosemite or later to be installed.In case you're using compact Apple keyboard:For some reason known shortcuts for linux terminals do not work properly</field></doc>
<doc><field name="id">10500</field><field name="title">google-terminal-app-function-keys</field><field name="session">How to use?</field><field name="sentence">So, shortcuts likeControl-W could still be useful.</field></doc>
<doc><field name="id">10501</field><field name="title">google-terminal-app-function-keys</field><field name="session">Is it working at all?</field><field name="sentence">There are some tricks as bare mac os bash abd byobu/tmux implement keyboard handling differently.For example: \0331;1P is recognised as F1 in byobu/tmux, but is not a validcombination in bash itself, as \033OP works for both.</field></doc>
<doc><field name="id">10502</field><field name="title">google-terminal-app-function-keys</field><field name="session">Full list of all bindings</field><field name="sentence">You can do it by hand, if you don't want to use my files:</field></doc>
<doc><field name="id">10503</field><field name="title">google-tern-closure</field><field name="session">tern-closure</field><field name="sentence">tern-closure  tern-closure  is a plugin which adds support for  ClosureCompiler annotations  compiler  and the Closure type system to the JavaSriptcode intelligence system  Tern  tern .To use tern-closure, you need to  install  #installation  it and then configure  #configuration  Tern to load it.</field></doc>
<doc><field name="id">10504</field><field name="title">google-tern-closure</field><field name="session">Features</field><field name="sentence">tern-closure adds the following features to your Tern installation:Understanding of types in JSDoc type annotations  similar to theUnderstanding of inheritance and interfaces with @extends andCompletion and go-to-definition support for type names in JSDoc comments andAutomatic loading of the definitions for types, so that you get completion</field></doc>
<doc><field name="id">10505</field><field name="title">google-tern-closure</field><field name="session">Installation</field><field name="sentence">Currently, tern-closure only works with the NodeJS  Tern Server  tern-server ,and not within a browser.</field></doc>
<doc><field name="id">10506</field><field name="title">google-tern-closure</field><field name="session">Short version</field><field name="sentence">After installing Tern according the setup instructions of your desired  editorplugin  tern-editor , go to the place where the  Tern package  tern-npm  wasinstalled  or the  Tern repo  tern-repo  was cloned  and runSee  INSTALL.md  INSTALL.md  for instructions tailored to each editor.</field></doc>
<doc><field name="id">10507</field><field name="title">google-tern-closure</field><field name="session">Configuration</field><field name="sentence">In order for Tern to load the tern-closure plugin once it is installed, you mustinclude .tern-project in your project's root directory, or .tern-config in your homeYou must also explicitly disable the default doc_comment plugin, which willinterfere with tern-closure.Here is a minimal example .tern-project configuration file:</field></doc>
<doc><field name="id">10508</field><field name="title">google-tern-closure</field><field name="session">"Project directory" and .tern-project vs .tern-config</field><field name="sentence">Tern looks for .tern-config is loaded instead, and *the working directory of the Tern serverprocess is used as the "project directory"*.Since Tern and tern-closure  including finders like  grep  #grep   use the"project directory" as the base for all relative paths, you should either use.tern-project or be careful about where you start your Tern server  or, whereyour editor plugin starts your Tern server .</field></doc>
<doc><field name="id">10509</field><field name="title">google-tern-closure</field><field name="session">Options</field><field name="sentence">You can set the following options in the closure section of your Ternconfiguration file:</field></doc>
<doc><field name="id">10510</field><field name="title">google-tern-closure</field><field name="session">Finders</field><field name="sentence">tern-closure uses "finders" to find the files providing Closure names viagoog.provide</field></doc>
<doc><field name="id">10511</field><field name="title">google-tern-closure</field><field name="session">Finders</field><field name="sentence">Finders allow tern-closure to load and interpret the filesproviding names required via goog.require or referenced in JSDoc type stringsso it better understands the context of a given file.The finder section of the options object for closure in your .tern-projectfile specifies what finder implementation you want to use, and what options youwant to pass to the finder</field></doc>
<doc><field name="id">10512</field><field name="title">google-tern-closure</field><field name="session">Finders</field><field name="sentence">By default, no finder is used, and files are notautomatically loaded</field></doc>
<doc><field name="id">10513</field><field name="title">google-tern-closure</field><field name="session">Finders</field><field name="sentence">Currently, only one finder implementation is included withtern-closure,  grep  #grep .*Common finder options:*</field></doc>
<doc><field name="id">10514</field><field name="title">google-tern-closure</field><field name="session">grep</field><field name="sentence">This is a basic finder which uses the grep command-line utility  or findstrin Windows  to search for goog.provide statements at startup and create a mapof Closure names to providing files.Here is an example .tern-project file using the grep finder:You can easily use a finder not included in this repository, or implement yourown</field></doc>
<doc><field name="id">10515</field><field name="title">google-tern-closure</field><field name="session">grep</field><field name="sentence">This allows you to search for names in different ways, on demand, and touse existing indexes of your codebase.Given a finder name name, tern-closure first looks in its own lib/finderdirectory, then attempts to load name using require  , so a third-partyfinder module can be installed as an npm package.A finder module must implement a simple interface:Please note that while tern-closure is in a 0.X.X release, the finder API maybe subject to breaking changes.</field></doc>
<doc><field name="id">10516</field><field name="title">google-tern-closure</field><field name="session">Bug reports and feature requests</field><field name="sentence">Please file bug reports and feature requests as issues on the  issuespage  tern-closure-issues  of the tern-closure repository.</field></doc>
<doc><field name="id">10517</field><field name="title">google-tern-closure</field><field name="session">Contributing</field><field name="sentence">Pull requests to tern-closure are welcome</field></doc>
<doc><field name="id">10518</field><field name="title">google-tern-closure</field><field name="session">Contributing</field><field name="sentence">Please see the CONTRIBUTING.md  CONTRIBUTING.md  file for requirements and guidelines.Disclaimer: tern-closure is not an official Google product, and is maintained ona best-effort basis</field></doc>
<doc><field name="id">10519</field><field name="title">google-tern-closure</field><field name="session">Contributing</field><field name="sentence">compiler :  doc_comment :  npm :  tern-closure-issues :  tern-closure :  tern-config :  tern-editor :  tern-npm :  tern-repo :  tern-server :  tern :</field></doc>
<doc><field name="id">10520</field><field name="title">google-testimony</field><field name="session">Configuration ###</field><field name="sentence">On creation, sockets are configured based on the /etc/testimony.confconfiguration file, which lists all sockets to be created</field></doc>
<doc><field name="id">10521</field><field name="title">google-testimony</field><field name="session">Configuration ###</field><field name="sentence">Each socket containsthese configuration options:</field></doc>
<doc><field name="id">10522</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">Testimony uses an extremely simple wire protocol for establishing clientconnections and passing memory regions back and forth.Most values are passed as TLV, in the form:bytes long</field></doc>
<doc><field name="id">10523</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">The type will always have its highest-order bit set, todifferentiate between a TLV and a block index.Post-connection, most communication is 4-byte block indexes passed backand forth</field></doc>
<doc><field name="id">10524</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">At any time post-connection, either the server or client maysend arbitrary TLV values across the wire..</field></doc>
<doc><field name="id">10525</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">the other side should handlethem if it knows how and ignore them if it doesn't.The server sends a block index to the client when that block isavailable to process  and it references the block internally</field></doc>
<doc><field name="id">10526</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">The clientreturns the block index to the server when it's done processing it, and theserver unrefs that block</field></doc>
<doc><field name="id">10527</field><field name="title">google-testimony</field><field name="session">Wire Protocol ###</field><field name="sentence">When a block has no more references, it is returnedto the kernel to be refilled with packets.</field></doc>
<doc><field name="id">10528</field><field name="title">google-text2text</field><field name="session">Preapre the config file wrt the model you wish to run and put it in the</field><field name="sentence">ls -Rtext2text  WORKSPACEbatch_reader  beam_search.py  BUILD  config  data  data.py  decode.py  __init__.py  library.py  main.py  metrics.py  model  README.mdcopynet_batcher.py  __init__.py  vocab_batcher.pycfg_copynet.py  cfg_seq2seq.py  cfg_bow2seq.py __init__.py copynet.py  __init__.py  seq2seq.py  bow2seq.pydata  data_convert_example.py  text_data  vocabbazel build -c opt --copt=-mavx --config=cuda text2text:main</field></doc>
<doc><field name="id">10529</field><field name="title">google-text2text</field><field name="session">Run the training.</field><field name="sentence">bazel-bin/text2text/main \</field></doc>
<doc><field name="id">10530</field><field name="title">google-text2text</field><field name="session">Run the eval. Try to avoid running on the same machine as training.</field><field name="sentence">bazel-bin/text2text/main \</field></doc>
<doc><field name="id">10531</field><field name="title">google-text2text</field><field name="session">Run the decode. Run it when the model is mostly converged.</field><field name="sentence">bazel-bin/text2text/main \  --mode=decode \--config="config_file_name" determines the config file from the config dir  in which the model you wish to run, paths to data, and hyperparameters of the model are specified</field></doc>
<doc><field name="id">10532</field><field name="title">google-text2text</field><field name="session">Run the decode. Run it when the model is mostly converged.</field><field name="sentence">There are sample config files for each models in config directory</field></doc>
<doc><field name="id">10533</field><field name="title">google-text2text</field><field name="session">Run the decode. Run it when the model is mostly converged.</field><field name="sentence">The output of the code and summaries will be written to a text2text/config_file_name directory.</field></doc>
<doc><field name="id">10534</field><field name="title">google-tflow2</field><field name="session">tflow2</field><field name="sentence">tflow2 is an in memory netflow version 9 and IPFIX analyzer.It is designed for fast arbitrary queries.*This software is currently not maintained in this repo</field></doc>
<doc><field name="id">10535</field><field name="title">google-tflow2</field><field name="session">tflow2</field><field name="sentence">Check out</field></doc>
<doc><field name="id">10536</field><field name="title">google-tflow2</field><field name="session">Usage</field><field name="sentence">Quick install with go get -u github.com/google/tflow2and go build github.com/google/tflow2or download a pre-built binary from the releases page The release binaries have an additional command, tflow2 -version,which reports the release version.Once you start the main binary it will start reading netflow version 9 packetson port 2055 UDP and IPFIX packets on port 4739 on all interfaces.For user interaction it starts a webserver on port 4444 TCP on all interfaces</field></doc>
<doc><field name="id">10537</field><field name="title">google-tflow2</field><field name="session">Usage</field><field name="sentence">The webinterface allows you to run queries against the collected data.Start time and router are mandatory criteria</field></doc>
<doc><field name="id">10538</field><field name="title">google-tflow2</field><field name="session">Usage</field><field name="sentence">If you don't provide any ofthese you will always receive an empty result.</field></doc>
<doc><field name="id">10539</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">flows to disk</field></doc>
<doc><field name="id">10540</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">Default is false</field></doc>
<doc><field name="id">10541</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">with prefix and autonomous system information</field></doc>
<doc><field name="id">10542</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">This is useful in case your  routers exported netflow data is lacking these</field></doc>
<doc><field name="id">10543</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">This is the case for example  if you use the ipt-NETFLOW on Linux</field></doc>
<doc><field name="id">10544</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">The protocol needs to be named like this: "nf_x_y_z_a" with x_y_z_a being the  source IP address of flow packets, e.g</field></doc>
<doc><field name="id">10545</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">nf_185_66_194_0  database</field></doc>
<doc><field name="id">10546</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">the moment</field></doc>
<doc><field name="id">10547</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">3 will dump every single received netflow packet on the screen</field></doc>
<doc><field name="id">10548</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">will run out of memory</field></doc>
<doc><field name="id">10549</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">Experience shows that 500k flows need about 50G of RAM</field></doc>
<doc><field name="id">10550</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">This is needed for suggestions in the web interface</field></doc>
<doc><field name="id">10551</field><field name="title">google-tflow2</field><field name="session">Command line arguments</field><field name="sentence">in case you use sampling.-v value-vmodule value</field></doc>
<doc><field name="id">10552</field><field name="title">google-tflow2</field><field name="session">Limitations</field><field name="sentence">This software currently only supports receiving netflow packets over IPvPlease be aware this software is not platform indipendent</field></doc>
<doc><field name="id">10553</field><field name="title">google-tflow2</field><field name="session">Limitations</field><field name="sentence">It will only workon little endian machines  such as x86</field></doc>
<doc><field name="id">10554</field><field name="title">google-tflow2</field><field name="session">License</field><field name="sentence">c  Google, Licensed under  Apache-2  LICENSE  license.This is not an official Google product.</field></doc>
<doc><field name="id">10555</field><field name="title">google-tie</field><field name="session">Technical Interview Exercises     ! Code Coverage</field><field name="sentence">Technical Interview Exercises  TIE  is a lightweight open-source tool aimed athelping students learn key concepts, principles, and coding patterns that areimportant in software engineering</field></doc>
<doc><field name="id">10556</field><field name="title">google-tie</field><field name="session">Technical Interview Exercises     ! Code Coverage</field><field name="sentence">TIE allows users to write code to solvetechnical coding challenges and receive real time insightful and guidingThe project is currently in early Beta</field></doc>
<doc><field name="id">10557</field><field name="title">google-tie</field><field name="session">Technical Interview Exercises     ! Code Coverage</field><field name="sentence">This means that content and features arelimited</field></doc>
<doc><field name="id">10558</field><field name="title">google-tie</field><field name="session">Technical Interview Exercises     ! Code Coverage</field><field name="sentence">We plan to add more content and features as we develop towards version</field></doc>
<doc><field name="id">10559</field><field name="title">google-tie</field><field name="session">User setup</field><field name="sentence">From  click on the green "Clone or download"button then click "Download ZIP"Unzip the zip fileOpen the file client/question.html in a web browserUse the coding window on the right to code a solution and click "I think I'mdone" if you think you have answer  repeat until you solve the question To stop the TIE application, simply close the browser windowTo remove TIE from your computer, delete the downloaded files from steps 1and 2</field></doc>
<doc><field name="id">10560</field><field name="title">google-tie</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">10561</field><field name="title">google-tie</field><field name="session">Disclaimer</field><field name="sentence">TIE is provided "as is" and withoutwarranty  refer to the TIE LICENSE file for details .</field></doc>
<doc><field name="id">10562</field><field name="title">google-tiger</field><field name="session">Acknowledge</field><field name="sentence">Tiger is highly inspired by Dagger, Kudos to those great guys.</field></doc>
<doc><field name="id">10563</field><field name="title">google-tiger</field><field name="session">Challenge</field><field name="sentence">If you find a faster DI framework, let me know</field></doc>
<doc><field name="id">10564</field><field name="title">google-tiger</field><field name="session">Challenge</field><field name="sentence">I will drop the title as long as it is proved.</field></doc>
<doc><field name="id">10565</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">It is the fastest! Not faster, but the fastest! I have tried it on a big project with ~200 modules</field></doc>
<doc><field name="id">10566</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">While it takes hundreds of milliseconds to instantiate dagger components, on the same hardware, it only takes a few milliseconds to instantiate Tiger injectors.Minimal amount of code to write therefore easy to maintain, if you need to maintain it at all</field></doc>
<doc><field name="id">10567</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">You don't need to write components like in Dagger</field></doc>
<doc><field name="id">10568</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">You don't need to split a module into several modules one for each scope that used by bindings provided by the module</field></doc>
<doc><field name="id">10569</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">You will feel it is some easy to change the scope of a binding</field></doc>
<doc><field name="id">10570</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">Just change it</field></doc>
<doc><field name="id">10571</field><field name="title">google-tiger</field><field name="session">Why Tiger?</field><field name="sentence">Way to go, isn’t it?</field></doc>
<doc><field name="id">10572</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">If you are here, you must already be familiar with DI Dependency Injection  and its advantage</field></doc>
<doc><field name="id">10573</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">Otherwise  wiki  will be your friend.DI has been evolving for long time in the different form</field></doc>
<doc><field name="id">10574</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">But the concept is not really changed much</field></doc>
<doc><field name="id">10575</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">This document will not repeat these concepts</field></doc>
<doc><field name="id">10576</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">If you find some concept not explained, google it</field></doc>
<doc><field name="id">10577</field><field name="title">google-tiger</field><field name="session">Build up your knowledge</field><field name="sentence">Also Guice probably has explained those concept very well.</field></doc>
<doc><field name="id">10578</field><field name="title">google-tiger</field><field name="session">Integration</field><field name="sentence">Tiger is an annotation process</field></doc>
<doc><field name="id">10579</field><field name="title">google-tiger</field><field name="session">Integration</field><field name="sentence">Therefore just build the jar and use it the way that annotation processors are supposed to be used</field></doc>
<doc><field name="id">10580</field><field name="title">google-tiger</field><field name="session">Integration</field><field name="sentence">All environment should work</field></doc>
<doc><field name="id">10581</field><field name="title">google-tiger</field><field name="session">Integration</field><field name="sentence">The sample uses gradle.</field></doc>
<doc><field name="id">10582</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">Before diving into details, it will be helpful, very helpful, to understand the intended usage of tiger</field></doc>
<doc><field name="id">10583</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">Tiger is designed to let the machine do as much as possible and let human do as little as possible</field></doc>
<doc><field name="id">10584</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">It requires minimal information from the developer</field></doc>
<doc><field name="id">10585</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">From these information, scoped injectors are generated</field></doc>
<doc><field name="id">10586</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">Application can instances these injectors and use them to inject classes</field></doc>
<doc><field name="id">10587</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">To achieve this, tiger has distilled the information needed to generate injectors</field></doc>
<doc><field name="id">10588</field><field name="title">google-tiger</field><field name="session">How?</field><field name="sentence">Here are they, with related annotation.</field></doc>
<doc><field name="id">10589</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">Usually application has at least one scope, singleton</field></doc>
<doc><field name="id">10590</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">Even if there is no scoped binding, it is harmless to have a singleton scope</field></doc>
<doc><field name="id">10591</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">Therefore, tiger requires there always be a scope tree</field></doc>
<doc><field name="id">10592</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">The root is usually singleton, but not necessary</field></doc>
<doc><field name="id">10593</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">Details will be shown later in the sample</field></doc>
<doc><field name="id">10594</field><field name="title">google-tiger</field><field name="session">Scopes</field><field name="sentence">Tiger generates one injector class for each scope.</field></doc>
<doc><field name="id">10595</field><field name="title">google-tiger</field><field name="session">@tiger.ScopeDependency</field><field name="sentence">It specifies the dependencies between scopes</field></doc>
<doc><field name="id">10596</field><field name="title">google-tiger</field><field name="session">@tiger.ScopeDependency</field><field name="sentence">All the dependency information form a scope tree.</field></doc>
<doc><field name="id">10597</field><field name="title">google-tiger</field><field name="session">@dagger.Module</field><field name="sentence">It provides binding information through @Provides annotated methods with optional scope</field></doc>
<doc><field name="id">10598</field><field name="title">google-tiger</field><field name="session">@dagger.Module</field><field name="sentence">Now 2016/08/10   we just reuse dagger.Module</field></doc>
<doc><field name="id">10599</field><field name="title">google-tiger</field><field name="session">@dagger.Module</field><field name="sentence">In future, dagger.Module will be copied into tiger.Module so that tiger does not need to depend on dagger.</field></doc>
<doc><field name="id">10600</field><field name="title">google-tiger</field><field name="session">@javax.inject.Inject on ctor</field><field name="sentence">It provides binding information with optional scope.</field></doc>
<doc><field name="id">10601</field><field name="title">google-tiger</field><field name="session">@tiger.MembersInjector with mandatory scope</field><field name="sentence">It specifies interfaces which includes class that has fields or methods to be injected</field></doc>
<doc><field name="id">10602</field><field name="title">google-tiger</field><field name="session">@tiger.MembersInjector with mandatory scope</field><field name="sentence">Injectors will implement all these interfaces.</field></doc>
<doc><field name="id">10603</field><field name="title">google-tiger</field><field name="session">@javax.inject.Inject on fields, methods</field><field name="sentence">It specifies the injection points from which injector fans out when injecting an object.</field></doc>
<doc><field name="id">10604</field><field name="title">google-tiger</field><field name="session">@tiger.PackageForGenerated</field><field name="sentence">The package for the generated injectors.</field></doc>
<doc><field name="id">10605</field><field name="title">google-tiger</field><field name="session">@tiger.ScopedComponentNames</field><field name="sentence">It specify the names of the injectors.</field></doc>
<doc><field name="id">10606</field><field name="title">google-tiger</field><field name="session">@Module, @Inject and @MembersInjector are naturally scattered around the code. For the others, i.e., @ScopeDependency, @PackageForGenerated, @ScopedComponentNames and @GenerationTriggerAnnotation, we suggest to put them into a dedicated java file as the central configuration information for the app.</field><field name="sentence">Here is the depicted code the sample with some modification  java@PackageForGenerated "sample" public class Scopes {Here is how ApplicationInjector is instantiated and used.</field></doc>
<doc><field name="id">10607</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">As you can see, Tiger reuses annotations from dagger like dagger.Module, dagger.Provides, etc</field></doc>
<doc><field name="id">10608</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">You can find the javadoc  here  We are not going to repeat them here</field></doc>
<doc><field name="id">10609</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">Of course, Component and Subcomponent is not needed any longer</field></doc>
<doc><field name="id">10610</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">Producer related stuff is also irrelevant to injection</field></doc>
<doc><field name="id">10611</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">There is one nice feature from Tiger</field></doc>
<doc><field name="id">10612</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">You don't need to split modules according to different scopes</field></doc>
<doc><field name="id">10613</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">Yes, you can put bindings of different scopes into one module</field></doc>
<doc><field name="id">10614</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">This way you have less modules</field></doc>
<doc><field name="id">10615</field><field name="title">google-tiger</field><field name="session">For Dagger users</field><field name="sentence">And, if you want to change the scope of a binding, just change it, easy.</field></doc>
<doc><field name="id">10616</field><field name="title">google-tiger</field><field name="session">Tip</field><field name="sentence">Inspecting the generate code will help you</field></doc>
<doc><field name="id">10617</field><field name="title">google-tiger</field><field name="session">Tip</field><field name="sentence">If you want more, there is source code.Enjoy injection!</field></doc>
<doc><field name="id">10618</field><field name="title">google-tiger</field><field name="session">Group</field><field name="sentence">fastesttiger@googlegroups.com</field></doc>
<doc><field name="id">10619</field><field name="title">google-timesketch</field><field name="session">Timesketch</field><field name="sentence">! Version   ! Tweet  Timesketch is an open source tool for collaborative forensic timeline analysis</field></doc>
<doc><field name="id">10620</field><field name="title">google-timesketch</field><field name="session">Timesketch</field><field name="sentence">Using sketches you and your collaborators can easily organize your timelines and analyze them all at the same time</field></doc>
<doc><field name="id">10621</field><field name="title">google-timesketch</field><field name="session">Timesketch</field><field name="sentence">Add meaning to your raw data with rich annotations, comments, tags and stars.! alt text  "Timesketch"</field></doc>
<doc><field name="id">10622</field><field name="title">google-timesketch</field><field name="session">Obligatory Fine Print</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">10623</field><field name="title">google-tink</field><field name="session">Tink</field><field name="sentence">----------------------------------------------------------------------------------------! Kokoro Ubuntu  | ! Kokoro macOS</field></doc>
<doc><field name="id">10624</field><field name="title">google-tink</field><field name="session">Introduction</field><field name="sentence">Using crypto in your application  shouldn't haveto feel like juggling chainsaws in the dark</field></doc>
<doc><field name="id">10625</field><field name="title">google-tink</field><field name="session">Introduction</field><field name="sentence">Tink is a crypto library written by agroup of cryptographers and security engineers at Google</field></doc>
<doc><field name="id">10626</field><field name="title">google-tink</field><field name="session">Introduction</field><field name="sentence">It was born out ofour extensive experience working with Google's product teams,  fixingweaknesses in implementations  andproviding simple APIs that can be used safely without needing a cryptoTink provides secure APIs that are easy to use correctly and hard er  to misuse.It reduces common crypto pitfalls with user-centered design, carefulimplementation and code reviews, and extensive testing</field></doc>
<doc><field name="id">10627</field><field name="title">google-tink</field><field name="session">Introduction</field><field name="sentence">At Google, Tink isalready being used to secure data of many products such as AdMob, Google Pay,Google Assistant, Firebase, the Android Search App, etc.</field></doc>
<doc><field name="id">10628</field><field name="title">google-tink</field><field name="session">Getting started</field><field name="sentence">Bazel  then build, runand play with the  hello worldexamples Tink performs cryptographic tasks via so-called  primitives  docs/PRIMITIVES.md ,each of which is defined via a corresponding interface that specifies thefunctionality of the primitive</field></doc>
<doc><field name="id">10629</field><field name="title">google-tink</field><field name="session">Getting started</field><field name="sentence">For example, _symmetric key encryption_ isoffered via an  _AEAD-primitive_  Authenticated Encryption with AssociatedData   docs/PRIMITIVES.md#authenticated-encryption-with-associated-data , thatsupports two operations:Before implementations of primitives can be used, they must be registered atruntime with Tink, so that Tink "knows" the desired implementations</field></doc>
<doc><field name="id">10630</field><field name="title">google-tink</field><field name="session">Getting started</field><field name="sentence">Here's howyou can register all implementations of all primitives in Tink:After implementations of primitives have been registered, the basic use of Tinkproceeds in three steps: Load or generate the cryptographic key material  a Keyset in Tink terms</field></doc>
<doc><field name="id">10631</field><field name="title">google-tink</field><field name="session">Getting started</field><field name="sentence">Use the key material to get an instance of the chosen primitive</field></doc>
<doc><field name="id">10632</field><field name="title">google-tink</field><field name="session">Getting started</field><field name="sentence">Use that primitive to accomplish the cryptographic task.Here is how these steps would look like when encrypting or decrypting with anAEAD primitive in Java:</field></doc>
<doc><field name="id">10633</field><field name="title">google-tink</field><field name="session">Learn More</field><field name="sentence">If you want to contribute, please read  CONTRIBUTING  docs/CONTRIBUTING.md and send us pull requests</field></doc>
<doc><field name="id">10634</field><field name="title">google-tink</field><field name="session">Learn More</field><field name="sentence">You can also report bugs or file feature requests.If you'd like to talk to the developers or get notified about major productupdates, you may want to subscribe to our  mailinglist  To join, simply sendan empty email to tink-users+subscribe@googlegroups.com.</field></doc>
<doc><field name="id">10635</field><field name="title">google-tink</field><field name="session">Maintainers</field><field name="sentence">Tink is maintained by  A-Z :</field></doc>
<doc><field name="id">10636</field><field name="title">google-tmppy</field><field name="session">Example</field><field name="sentence">As an example, let's write a metafunction  aka type trait class  add_pointer_multiple such that:However this syntax is quite verbose and not very readable</field></doc>
<doc><field name="id">10637</field><field name="title">google-tmppy</field><field name="session">Example</field><field name="sentence">For more complex metafunctions this becomes a significant issue, leading to more bugs and more effort when debugging or maintaining the code.Some C++ metaprogramming libraries  notably Boost's MPL library  can be used to reduce the verbosity, however that comes at the price of slower compile times.Using TMPPy, the above can be written as:And this TMPPy code can then be compiled to C++ code equivalent to the metafunction above  without the overhead of e.g</field></doc>
<doc><field name="id">10638</field><field name="title">google-tmppy</field><field name="session">Example</field><field name="sentence">MPL .For more information on TMPPy, see  the wiki</field></doc>
<doc><field name="id">10639</field><field name="title">google-tmppy</field><field name="session">License</field><field name="sentence">TMPPy is released under the Apache 2.0 license</field></doc>
<doc><field name="id">10640</field><field name="title">google-tmppy</field><field name="session">License</field><field name="sentence">See the LICENSE file for details.This is not an official Google product.</field></doc>
<doc><field name="id">10641</field><field name="title">google-todo-tracks</field><field name="session">TODO Tracks</field><field name="sentence">TODO Tracks is a tool to let users get a handle on the various TODOs they ortheir teammate have added over time</field></doc>
<doc><field name="id">10642</field><field name="title">google-todo-tracks</field><field name="session">TODO Tracks</field><field name="sentence">This allows people to track progress byexamining the TODOs remaining.The tool examines all the branches in a git repo  local and remote , finds the TODOsin the different revisions, and presents them to the user</field></doc>
<doc><field name="id">10643</field><field name="title">google-todo-tracks</field><field name="session">TODO Tracks</field><field name="sentence">Use cases:This is not an official Google product.</field></doc>
<doc><field name="id">10644</field><field name="title">google-todo-tracks</field><field name="session">Prerequisites</field><field name="sentence">Building requires the Go tools and GNU Make</field></doc>
<doc><field name="id">10645</field><field name="title">google-todo-tracks</field><field name="session">Prerequisites</field><field name="sentence">Running the built binary requires the git command line tool.</field></doc>
<doc><field name="id">10646</field><field name="title">google-todo-tracks</field><field name="session">Building the source code</field><field name="sentence">First checkout the code from the git repo:Build the binary:And then launch it:The tracker requires that it be started in a directory that contains at least one git repo, and it shows the TODOs from every git repo under that directory.The UI for the tracker is a webserver which defaults to listening on port To use a different port, pass it as an argument to the "--port" flag:For more details about the supported command line flags, pass in the "--help" flag.</field></doc>
<doc><field name="id">10647</field><field name="title">google-todo-tracks</field><field name="session">Running in Google Compute Engine</field><field name="sentence">We provide a pre-built binary and config files for deploying the tool to a GCE VMusing Google Deployment Manager.Assuming you already have the gcloud preview commands installed, run the following steps:</field></doc>
<doc><field name="id">10648</field><field name="title">google-traceout</field><field name="session">traceout</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">10649</field><field name="title">google-traceur-compiler</field><field name="session">What is Traceur?</field><field name="sentence">Traceur is a JavaScript.next-to-JavaScript-of-today compiler that allows you touse features from the future **today**</field></doc>
<doc><field name="id">10650</field><field name="title">google-traceur-compiler</field><field name="session">What is Traceur?</field><field name="sentence">Traceur supports ES6 as well as some experimental ES.next features.Traceur's goal is to inform the designof new JavaScript features which are only valuable if they allow you to writebetter code</field></doc>
<doc><field name="id">10651</field><field name="title">google-traceur-compiler</field><field name="session">What is Traceur?</field><field name="sentence">Traceur allows you to try out new and proposed language features today, helping you say what you mean in your code while informing the standards process.JavaScript's evolution needs your input</field></doc>
<doc><field name="id">10652</field><field name="title">google-traceur-compiler</field><field name="session">What is Traceur?</field><field name="sentence">Try  out thenew language features</field></doc>
<doc><field name="id">10653</field><field name="title">google-traceur-compiler</field><field name="session">What is Traceur?</field><field name="sentence">Tell us how they work for you and what's still causing you to use more boilerplate and"design patterns" than you prefer.</field></doc>
<doc><field name="id">10654</field><field name="title">google-traceur-compiler</field><field name="session">What now? What can Traceur do for me?</field><field name="sentence">Read the Getting Started page to get up and running</field></doc>
<doc><field name="id">10655</field><field name="title">google-traceur-compiler</field><field name="session">What now? What can Traceur do for me?</field><field name="sentence">You can use some language features right now andeven try it out in your browser here Just type in some code and see what Traceur produces</field></doc>
<doc><field name="id">10656</field><field name="title">google-traceur-compiler</field><field name="session">What now? What can Traceur do for me?</field><field name="sentence">For an idea of what isavailable and what we have in the pipeline, see the Language Features The JSConf 2011 presentation of Traceur describes the goals of the project andwhat it can do today</field></doc>
<doc><field name="id">10657</field><field name="title">google-traceur-compiler</field><field name="session">What now? What can Traceur do for me?</field><field name="sentence">Some documentation is on the wiki on this site.Extra demos are in the source repository.We also presented Traceur at NodeConf The video isavailable on  YouTube Questions, suggestions, and comments can be directed to the discussion group</field></doc>
<doc><field name="id">10658</field><field name="title">google-tracing-framework</field><field name="session">Setup</field><field name="sentence">See  building  for instructions and testing  for information on running the various tests.</field></doc>
<doc><field name="id">10659</field><field name="title">google-tracing-framework</field><field name="session">Quickstart</field><field name="sentence">Just want the extension as fast as possible?</field></doc>
<doc><field name="id">10660</field><field name="title">google-tracing-framework</field><field name="session">License</field><field name="sentence">All code except dependencies under third_party/ is licensed under the permissive BSD license</field></doc>
<doc><field name="id">10661</field><field name="title">google-tracing-framework</field><field name="session">License</field><field name="sentence">Feel free to fork/rip/etc and use as you wish!</field></doc>
<doc><field name="id">10662</field><field name="title">google-tracing-framework</field><field name="session">Contributing</field><field name="sentence">Have a fix or feature? Submit a pull request Note that we do keep to the  style_guide so please check it out first!As this is a Google project, you *must Google Contributor License Agreement  before we can accept anycode</field></doc>
<doc><field name="id">10663</field><field name="title">google-tracing-framework</field><field name="session">Contributing</field><field name="sentence">It takes only a second and basically just says you won't sue us or claimcopyright of your submitted code.</field></doc>
<doc><field name="id">10664</field><field name="title">google-transitfeed</field><field name="session">transitfeed</field><field name="sentence">Provides a library to help you parse, validate, and generate  General Transit Feed Spec  GTFS   feed files</field></doc>
<doc><field name="id">10665</field><field name="title">google-transitfeed</field><field name="session">transitfeed</field><field name="sentence">See INSTALL for installation instructions.For the latest documentation, see:</field></doc>
<doc><field name="id">10666</field><field name="title">google-translation-cards</field><field name="session">Translation Cards</field><field name="sentence">Translation Cards  is an Android app that makes it really easy to record and play back translated words and phrases.Translation Cards is an in-development tool designed to make it easy for those communicating with someone who speaks another language, providing ready access to pre-recorded translated content just by tapping a card on the screen</field></doc>
<doc><field name="id">10667</field><field name="title">google-translation-cards</field><field name="session">Translation Cards</field><field name="sentence">This app comes with an initial set of translated and recorded content, oriented towards the medical field</field></doc>
<doc><field name="id">10668</field><field name="title">google-translation-cards</field><field name="session">Translation Cards</field><field name="sentence">As a user of Translation Cards, you’re also able record their own translations for additional words and phrases.The need for this tool was born out of  field research  done for the European migrant crisis, where field workers lacked a ready way to provide instructions in a foreign language, which Translation Cards seeks to address.</field></doc>
<doc><field name="id">10669</field><field name="title">google-trillian-examples</field><field name="session">Trillian examples</field><field name="sentence">This repository contains example applications built on top of Trillian   , showing that it's possible to applyTransparency concepts to problems other than Certificates Currently the examples here are:These examples are not supported per-se, but the Trillian team will likely tryto help where possible</field></doc>
<doc><field name="id">10670</field><field name="title">google-trillian-examples</field><field name="session">Trillian examples</field><field name="sentence">You can contact them via the channels listed under Trillian :</field></doc>
<doc><field name="id">10671</field><field name="title">google-trillian</field><field name="session">MySQL Setup</field><field name="sentence">To run Trillian's integration tests you need to have an instance of MySQLrunning and configured to:database like so:the  MySQL maximum connection count Trillian includes an integration test suite to confirm basic end-to-endfunctionality, which can be run with:Working on the CodeDevelopers who want to make changes to the Trillian codebase need someadditional dependencies and tools, described in the following sections</field></doc>
<doc><field name="id">10672</field><field name="title">google-trillian</field><field name="session">MySQL Setup</field><field name="sentence">The Travis configuration  .travis.yml  for the codebase is also useful referencefor the required tools and scripts, as it may be more up-to-date than this</field></doc>
<doc><field name="id">10673</field><field name="title">google-trillian</field><field name="session">Rebuilding Generated Code</field><field name="sentence">Some of the Trillian Go code is autogenerated from other files:Re-generating mock or protobuffer files is only needed if you're changingthe original files; if you do, you'll need to install the prerequisites:and run the following:The Trillian codebase includes a couple of external projects under the master branch and the current stable release</field></doc>
<doc><field name="id">10674</field><field name="title">google-trillian</field><field name="session">Rebuilding Generated Code</field><field name="sentence">These external codebases areincluded as Git subtrees To update the code in one of these subtrees, perform steps like:The  scripts/presubmit.sh  scripts/presubmit.sh  script runs various toolsand tests over the codebase.</field></doc>
<doc><field name="id">10675</field><field name="title">google-trillian</field><field name="session">Install gometalinter and all linters</field><field name="sentence">go get -u github.com/alecthomas/gometalintergometalinter --install</field></doc>
<doc><field name="id">10676</field><field name="title">google-trillian</field><field name="session">Or just run the linters alone:</field><field name="sentence">gometalinter --config=gometalinter.json ./...------</field></doc>
<doc><field name="id">10677</field><field name="title">google-trillian</field><field name="session">Design Overview</field><field name="sentence">Trillian is primarily implemented as a gRPC service this service receives get/set requests over gRPC and retrieves the correspondingMerkle tree data from a separate storage layer  currently using MySQL , ensuringthat the cryptographic properties of the tree are preserved along the way.The Trillian service is multi-tenanted &ndash; a single Trillian installationcan support multiple Merkle trees in parallel, distinguished by their TreeId&ndash; and operates in one of two modes:proofs of inclusion/consistency are available for data items added to the</field></doc>
<doc><field name="id">10678</field><field name="title">google-trillian</field><field name="session">Personalities</field><field name="sentence">The Trillian service expects to be paired with additional code that is specificto the particular application of the transparent store; this is known as aThe primary purpose of a personality is to implement **admission criteria*the store, so that only particular types of data are added to the store</field></doc>
<doc><field name="id">10679</field><field name="title">google-trillian</field><field name="session">Personalities</field><field name="sentence">Forexample, a certificate transparency log only accepts data items that are validcertificates; a "CT Log" personality would police this, so that the Trillianservice can process all incoming data blindly.A personality may also perform **canonicalization*convert equivalent formulations of the same underlying data to a singlecanonical format, avoiding needless duplication</field></doc>
<doc><field name="id">10680</field><field name="title">google-trillian</field><field name="session">Personalities</field><field name="sentence">For example, keys inJSON dictionaries could be sorted, or Unicode string data could be normalised</field></doc>
<doc><field name="id">10681</field><field name="title">google-trillian</field><field name="session">Personalities</field><field name="sentence">The per-application personality is also responsible for providing anexternally-visible interface, typically over HTTP S .Note that a personality may need to implement its own data store,separate from Trillian</field></doc>
<doc><field name="id">10682</field><field name="title">google-trillian</field><field name="session">Personalities</field><field name="sentence">In particular, if the personality does notcompletely trust Trillian, it needs to store the various things thatTrillian signs in order to be able to detect problems  and so thepersonality effectively also acts as a monitor for Trillian .</field></doc>
<doc><field name="id">10683</field><field name="title">google-trillian</field><field name="session">Map Mode</field><field name="sentence">Trillian in Map mode can be thought of as providing a key:value store, togetherwith cryptographic transparency guarantees for that data.When running in Map mode, Trillian provides a straightforward gRPC API with thefollowing available operations: Documentation may be out-of-date; please check the protocol buffer message definitions  trillian_map_api.proto  for the definitive current map API</field></doc>
<doc><field name="id">10684</field><field name="title">google-trillian</field><field name="session">Map Mode</field><field name="sentence">Each SetLeaves request includes a batch of updates to the Map; once all ofthese updates have been applied, the Map has a new **revision**, with a new treehead for that revision</field></doc>
<doc><field name="id">10685</field><field name="title">google-trillian</field><field name="session">Map Mode</field><field name="sentence">To allow historical queries, the API allows queriesof the Map as of a particular revision.TODO: add description of per-personality MappersTODO: add description of distribution: how many instances run, how distributed,how synchronized  master election , mention use of transactions as a fallback in case of errors in master election .! Map components  docs/MapDesign.png</field></doc>
<doc><field name="id">10686</field><field name="title">google-trillian</field><field name="session">Log Mode</field><field name="sentence">When running in Log mode, Trillian provides a gRPC API whose operations aresimilar to those available for Certificate Transparency logs cf</field></doc>
<doc><field name="id">10687</field><field name="title">google-trillian</field><field name="session">Log Mode</field><field name="sentence">RFC 6962  These include:In Log mode, Trillian includes an additional Signer component; this componentperiodically processes pending queued items and adds them to the Merkle tree,creating a new signed tree head as a result.! Log components  docs/LogDesign.png TODO: add description of distribution: how many instances run, how distributed etc.</field></doc>
<doc><field name="id">10688</field><field name="title">google-trillian</field><field name="session">Logged Map</field><field name="sentence">As it currently stands, it is not possible to reliably monitor or audit aTrillian Map instance; key:value pairs can be modified and subsequently resetwithout anyone noticing.A future plan to deal with this is to create a *Logged Map*, which combines aTrillian Map with a Trillian Log so that all published revisions of the Maphave their signed tree head data appended to the corresponding Map.Use Cases</field></doc>
<doc><field name="id">10689</field><field name="title">google-trillian</field><field name="session">Certificate Transparency Log</field><field name="sentence">The most obvious application for Trillian in Log mode is to provide acertificate transparency  RFC 6962  Log</field></doc>
<doc><field name="id">10690</field><field name="title">google-trillian</field><field name="session">Certificate Transparency Log</field><field name="sentence">To do this, the CT Log personalityneeds to include all of the certificate-specific processing &ndash; inparticular, checking that an item that has been suggested for inclusion isindeed a valid certificate that chains to an accepted root.</field></doc>
<doc><field name="id">10691</field><field name="title">google-trillian</field><field name="session">Verifiable Log-Derived Map</field><field name="sentence">One useful application for Trillian in Map mode is to provide a verifiablelog-derived map  VLDM , as described in the Verifiable Data Structures  docs/VerifiableDataStructures.pdf  white paper which uses the term 'log-backed map'</field></doc>
<doc><field name="id">10692</field><field name="title">google-trillian</field><field name="session">Verifiable Log-Derived Map</field><field name="sentence">To do this, a VLDM personality wouldmonitor the additions of entries to a Log, potentially external, and would writesome kind of corresponding key:value data to a Trillian Map.Clients of the VLDM are then able to verify that the entries in the Map they areshown are also seen by anyone auditing the Log for correct operation, which inturn allows the client to trust the key/value pairs returned by the Map.A concrete example of this might be a VLDM that monitors a certificatetransparency Log and builds a corresponding Map from domain names to the set ofcertificates associated with that domain.The following table summarizes properties of data structures laid in the Verifiable Data Structures  docs/VerifiableDataStructures.pdf  white paper.“Efficiently” means that a client can and should perform this validationthemselves</field></doc>
<doc><field name="id">10693</field><field name="title">google-trillian</field><field name="session">Verifiable Log-Derived Map</field><field name="sentence">“Full audit” means that to validate correctly, a client would needto download the entire dataset, and is something that in practice we expect asmall number of dedicated auditors to perform, rather than being done by each| ---------------------------------------| Prove inclusion of value| Prove non-inclusion of value| Retrieve provable value for key| Retrieve provable current value for key  |  Impractical| Prove append-only| Enumerate all entries| Prove correct operation| Enable detection of split-view</field></doc>
<doc><field name="id">10694</field><field name="title">google-truth</field><field name="session">What is Truth?</field><field name="sentence">Truth makes your  test assertions  and  failure messages  more readable</field></doc>
<doc><field name="id">10695</field><field name="title">google-truth</field><field name="session">What is Truth?</field><field name="sentence">Similar  comparison  to  AssertJ , it  natively supports  known_types  many JDKand  Guava  types, and it is  extensible  extension  to others.Truth is owned and maintained by the  Guava  team</field></doc>
<doc><field name="id">10696</field><field name="title">google-truth</field><field name="session">What is Truth?</field><field name="sentence">It is used from the majorityof the tests in Google’s own codebase.Read more at  the main website  test assertions :  failure messages :  comparison :  AssertJ :  known_types :  extension :  Guava :  gh-pages-shield :  gh-pages-link :  travis-shield :  travis-link :  maven-shield :  maven-link :  stackoverflow-shield :  stackoverflow-link :</field></doc>
<doc><field name="id">10697</field><field name="title">google-ts-bridge</field><field name="session">Time Series Bridge  ts-bridge</field><field name="sentence">Time Series Bridge is a tool that can be used to import metrics from onemonitoring system to another</field></doc>
<doc><field name="id">10698</field><field name="title">google-ts-bridge</field><field name="session">Time Series Bridge  ts-bridge</field><field name="sentence">It regularly runs a specific query againsta source monitoring system  currently only Datadog  and writes result into thedestination system  currently only Stackdriver .ts-bridge is an App Engine Standard app written in Go.</field></doc>
<doc><field name="id">10699</field><field name="title">google-ts-bridge</field><field name="session">Quick Start</field><field name="sentence">Add it into $PATH</field></doc>
<doc><field name="id">10700</field><field name="title">google-ts-bridge</field><field name="session">Quick Start</field><field name="sentence">cd app/ && goapp deploy -application $APP_ID -version live</field></doc>
<doc><field name="id">10701</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">To import a metric from Datadog, ts-bridge regularly runs a configured queryagainst the  Datadog QueryAPI Metrics imported from Datadog are defined in the datadog_metrics section ofthe configuration file  app/metrics.yaml</field></doc>
<doc><field name="id">10702</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">The following parameters need tobe specified for each metric:  stackdriver_destinations section of the configuration file.All parameters are required.Please keep in mind the following details about Datadog API:  the whole organization</field></doc>
<doc><field name="id">10703</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">Even if ts-bridge is the only user of the Query API,  it still means you can only import 5 metrics if you are querying every minute   which is the default</field></doc>
<doc><field name="id">10704</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">The limit can be raised</field></doc>
<doc><field name="id">10705</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">as part of your query, Datadog will return a single point per each rollup  interval</field></doc>
<doc><field name="id">10706</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">If rollup interval is longer than the importing period of  ts-bridge, some import operations will fetch 0 new points</field></doc>
<doc><field name="id">10707</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">For example, if  your query is producing a 10-minute ratio    xxx.rollup sum, 600  / yyy.rollup sum, 600   and you are using the default  importing period  1 minute , ts-bridge will still issue the query every  minute, however Datadog will only return a single point once every 10 minutes</field></doc>
<doc><field name="id">10708</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">interval</field></doc>
<doc><field name="id">10709</field><field name="title">google-ts-bridge</field><field name="session">Datadog</field><field name="sentence">Please keep in mind that Datadog might return more than 1 point  per minute, and all points will be written to Stackdriver, even though  Stackdriver does not allow querying with  alignment period</field></doc>
<doc><field name="id">10710</field><field name="title">google-ts-bridge</field><field name="session">Stackdriver</field><field name="sentence">Imported metrics can be written to multiple destination Stackdriver projects,even though in practice we expect a single instance of Time Series Bridge towrite to a single project  usually matching the GCP project where thets-bridge is running .Stackdriver destinations are listed in the stackdriver_destinationssection of the configuration file</field></doc>
<doc><field name="id">10711</field><field name="title">google-ts-bridge</field><field name="session">Stackdriver</field><field name="sentence">The following parameters can be specifiedfor each destination:  ts-bridge is running will be used.If you are using ts-bridge to write metrics to a different Stackdriver projectthan the one it's running in, you will need to grant roles/monitoring.editorIAM permission to the service account used by the ts-bridge App Engine app toallow it to read and write Stackdriver metrics.</field></doc>
<doc><field name="id">10712</field><field name="title">google-ts-bridge</field><field name="session">Importing period</field><field name="sentence">Time Series Bridge attempts to import all configured metrics regularly</field></doc>
<doc><field name="id">10713</field><field name="title">google-ts-bridge</field><field name="session">Importing period</field><field name="sentence">Thisis driven by the  App Engine Cron Service   which isconfigured in app/cron.yaml</field></doc>
<doc><field name="id">10714</field><field name="title">google-ts-bridge</field><field name="session">Importing period</field><field name="sentence">By default metrics are imported every minute.</field></doc>
<doc><field name="id">10715</field><field name="title">google-ts-bridge</field><field name="session">Global settings</field><field name="sentence">Some other settings can be set globally as App Engine environment variables viathe env_variables section of app/app.yaml</field></doc>
<doc><field name="id">10716</field><field name="title">google-ts-bridge</field><field name="session">Global settings</field><field name="sentence">points are found</field></doc>
<doc><field name="id">10717</field><field name="title">google-ts-bridge</field><field name="session">Global settings</field><field name="sentence">This interval should be kept reasonably short to  avoid fetching too much data from Stackdriver on each update</field></doc>
<doc><field name="id">10718</field><field name="title">google-ts-bridge</field><field name="session">Global settings</field><field name="sentence">than this, and a subsequent update will be triggered again</field></doc>
<doc><field name="id">10719</field><field name="title">google-ts-bridge</field><field name="session">Global settings</field><field name="sentence">context of a single incoming HTTP request, and setting this value too high  might result in the App Engine instance running out of RAM.You can use --env_var flag to override these environment variables whilerunning the app via dev_appserver.py.</field></doc>
<doc><field name="id">10720</field><field name="title">google-ts-bridge</field><field name="session">Status Web Page</field><field name="sentence">If ENABLE_STATUS_PAGE environment variable is set to 'yes', the index page ofthe App Engine app shows a list of configured metrics along with import statusfor each metric</field></doc>
<doc><field name="id">10721</field><field name="title">google-ts-bridge</field><field name="session">Status Web Page</field><field name="sentence">This might be useful for debugging, however is disabled bydefault to avoid publicly exposing a list of configured metrics  App Engine HTTPendpoints are publicly available by default .If you choose to leave the status page enabled, we recommend configuring Identity-Aware Proxy  IAP  for the Cloud project where ts-bridge is running</field></doc>
<doc><field name="id">10722</field><field name="title">google-ts-bridge</field><field name="session">Status Web Page</field><field name="sentence">You can use IAP torestrict access to ts-bridge by a specific Google group or a list ofGoogle accounts.</field></doc>
<doc><field name="id">10723</field><field name="title">google-ts-bridge</field><field name="session">Monitoring</field><field name="sentence">Time Series Bridge uses  OpenCensus  to report severalmetrics to Stackdriver:  you might need to increase UPDATE_PARALLELISM or UPDATE_TIMEOUT</field></doc>
<doc><field name="id">10724</field><field name="title">google-ts-bridge</field><field name="session">Monitoring</field><field name="sentence">data.All metrics are reported as Stackdriver custom metrics and have names prefixed by</field></doc>
<doc><field name="id">10725</field><field name="title">google-ts-bridge</field><field name="session">Development</field><field name="sentence">Add it into $PATHIf you'd like to contribute a patch, please see contribution guidelines in</field></doc>
<doc><field name="id">10726</field><field name="title">google-ts-bridge</field><field name="session">Support</field><field name="sentence">This is not an officially supported Google product.</field></doc>
<doc><field name="id">10727</field><field name="title">google-ts-style</field><field name="session">gts</field><field name="sentence">! NPM Version  npm-image   npm-url  ! CircleCI  circle-image   circle-url   david-image   david-url   david-dev-image   david-dev-url  ! Known Vulnerabilities  snyk-image   snyk-url  ! codecov  codecov-image   codecov-url  gts  npm-url  is Google's TypeScript style guide, and the configuration for our formatter, linter, and automatic code fixer</field></doc>
<doc><field name="id">10728</field><field name="title">google-ts-style</field><field name="session">gts</field><field name="sentence">No lint rules to edit, no configuration to update, no more bike shedding over syntax</field></doc>
<doc><field name="id">10729</field><field name="title">google-ts-style</field><field name="session">gts</field><field name="sentence">To borrow from  standardjs  standardjs-url :Made with ❤️ by the Google Node.js team.</field></doc>
<doc><field name="id">10730</field><field name="title">google-ts-style</field><field name="session">Getting Started</field><field name="sentence">If you're already using npm@5.3+  bundled with Node 8.3+ , run:Still on an older version of npm? We got ya! In a directory with your package.json run:When you run the npx gts init command, it's going to do a few things for you:The commands above will all run in the scope of the current folder</field></doc>
<doc><field name="id">10731</field><field name="title">google-ts-style</field><field name="session">Getting Started</field><field name="sentence">Some commands can be run on individual files:See  LICENSE.md  LICENSE.md > ***NOTE: This is not an official Google product.*** circle-image :  circle-url :  clang-format-url :  codecov-image :  codecov-url :  david-dev-image :  david-dev-url :  david-image :  david-url :  npm-image :  npm-url :  snyk-image :  snyk-url :  standardjs-url :  tslint-url :</field></doc>
<doc><field name="id">10732</field><field name="title">google-tsviewdb</field><field name="session">Table Of Contents</field><field name="sentence">--------</field></doc>
<doc><field name="id">10733</field><field name="title">google-tsviewdb</field><field name="session">Time-series of Time-series</field><field name="sentence">Time-series of time-series can be produced by periodically run experiments each of which contain multiple iterations</field></doc>
<doc><field name="id">10734</field><field name="title">google-tsviewdb</field><field name="session">Time-series of Time-series</field><field name="sentence">TSViewDB stores the data points associated with these multiple iterations, and also automatically calculate various summary statistics over them  mean, min, max, 50th percentile, etc</field></doc>
<doc><field name="id">10735</field><field name="title">google-tsviewdb</field><field name="session">Time-series of Time-series</field><field name="sentence">.! Time-series of Time-series  docs/ts_of_ts.png "Time-series of Time-series"</field></doc>
<doc><field name="id">10736</field><field name="title">google-tsviewdb</field><field name="session">Interactive Graphs</field><field name="sentence">TSViewDB provides a UI which quickly shows you what's in your data</field></doc>
<doc><field name="id">10737</field><field name="title">google-tsviewdb</field><field name="session">Interactive Graphs</field><field name="sentence">You have ready access to interactive graphs for summary statistics  aggregates , for iteration points, and for histograms of iteration points</field></doc>
<doc><field name="id">10738</field><field name="title">google-tsviewdb</field><field name="session">Interactive Graphs</field><field name="sentence">Common functionality is either a mouseover, click, or click and drag away</field></doc>
<doc><field name="id">10739</field><field name="title">google-tsviewdb</field><field name="session">Interactive Graphs</field><field name="sentence">Graphs are zoomable and auto-resizing.! TSViewDB Screenshot  docs/screenshot.png "TSViewDB Screenshot"</field></doc>
<doc><field name="id">10740</field><field name="title">google-tsviewdb</field><field name="session">Regression Detection</field><field name="sentence">TSViewDB can optionally determine if a regression has occurred in non-cyclic data for any of the read result data it returns</field></doc>
<doc><field name="id">10741</field><field name="title">google-tsviewdb</field><field name="session">Regression Detection</field><field name="sentence">The regression function works over noisy, non-cyclic data and returns the precise regressing segments  which may also be graphed</field></doc>
<doc><field name="id">10742</field><field name="title">google-tsviewdb</field><field name="session">Regression Detection</field><field name="sentence">This facilitates setting up daily regression alert emails and analysis systems.</field></doc>
<doc><field name="id">10743</field><field name="title">google-tsviewdb</field><field name="session">Easy Horizontal Infrastructure Scaling</field><field name="sentence">TSViewDB's current Apache Cassandra backend can be scaled simply by adding nodes, and is  known to handle significant write traffic   The TSViewDB server itself can be replicated behind a load balancer</field></doc>
<doc><field name="id">10744</field><field name="title">google-tsviewdb</field><field name="session">Easy Horizontal Infrastructure Scaling</field><field name="sentence">It includes an in-process, cluster-aware cache server which allows latencies for read hits to be low  --------------------Download executable:Quick Start1\</field></doc>
<doc><field name="id">10745</field><field name="title">google-tsviewdb</field><field name="session">Easy Horizontal Infrastructure Scaling</field><field name="sentence">Register a new data source: "testdir/testsubdir/testdata"2\</field></doc>
<doc><field name="id">10746</field><field name="title">google-tsviewdb</field><field name="session">Easy Horizontal Infrastructure Scaling</field><field name="sentence">Upload some data to it.Result should be something like:Additional Documentation----------</field></doc>
<doc><field name="id">10747</field><field name="title">google-tuneup.dart</field><field name="session">tuneup.dart</field><field name="sentence">A command-line tool to manipulate and inspect your Dart projects</field></doc>
<doc><field name="id">10748</field><field name="title">google-tuneup.dart</field><field name="session">tuneup.dart</field><field name="sentence"></field></doc>
<doc><field name="id">10749</field><field name="title">google-tuneup.dart</field><field name="session">Installing</field><field name="sentence">To install, run:</field></doc>
<doc><field name="id">10750</field><field name="title">google-tuneup.dart</field><field name="session">Running</field><field name="sentence">Run tuneup --help  or pub global run tuneup --help  to see a list of available commands.from the root of your project.</field></doc>
<doc><field name="id">10751</field><field name="title">google-tuneup.dart</field><field name="session">Filing Issues</field><field name="sentence">Please file reports on the  GitHub Issue Tracker</field></doc>
<doc><field name="id">10752</field><field name="title">google-tuneup.dart</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10753</field><field name="title">google-turbine</field><field name="session">Turbine</field><field name="sentence">Turbine is a header compiler for Java.</field></doc>
<doc><field name="id">10754</field><field name="title">google-turbinia</field><field name="session">Summary</field><field name="sentence">Turbinia is an open-source framework for deploying, managing, and running distributed forensic workloads</field></doc>
<doc><field name="id">10755</field><field name="title">google-turbinia</field><field name="session">Summary</field><field name="sentence">It is intended to automate running of common forensic processing tools  i.e</field></doc>
<doc><field name="id">10756</field><field name="title">google-turbinia</field><field name="session">Summary</field><field name="sentence">Plaso, TSK, strings, etc  to help with processing evidence in the Cloud, scaling the processing of large amounts of evidence, and decreasing response time by parallelizing processing where possible.</field></doc>
<doc><field name="id">10757</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">Turbinia is composed of different components for the client, server and the workers</field></doc>
<doc><field name="id">10758</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">These components can be run in the Cloud, on local machines, or as a hybrid of both</field></doc>
<doc><field name="id">10759</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">The Turbinia client makes requests to process evidence to the Turbinia server</field></doc>
<doc><field name="id">10760</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">The Turbinia server creates logical jobs from these incoming user requests, which creates and schedules forensic processing tasks to be run by the workers</field></doc>
<doc><field name="id">10761</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">The evidence to be processed will be split up by the jobs when possible, and many tasks can be created in order to process the evidence in parallel</field></doc>
<doc><field name="id">10762</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">One or more workers run continuously to process tasks from the server</field></doc>
<doc><field name="id">10763</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">Any new evidence created or discovered by the tasks will be fed back into Turbinia for further processing.Communication from the client to the server is currently done with either Google Cloud PubSub or  Kombu  messaging</field></doc>
<doc><field name="id">10764</field><field name="title">google-turbinia</field><field name="session">How it works</field><field name="sentence">The worker implementation can use either  PSQ   a Google Cloud PubSub Task Queue  or  Celery  for task scheduling.More information on Turbinia and how it works can be  found here  docs/how-it-works.md .</field></doc>
<doc><field name="id">10765</field><field name="title">google-turbinia</field><field name="session">Status</field><field name="sentence">Turbinia is currently in Alpha release.</field></doc>
<doc><field name="id">10766</field><field name="title">google-turbinia</field><field name="session">Installation</field><field name="sentence">There is an  rough installation guide here  docs/install.md .</field></doc>
<doc><field name="id">10767</field><field name="title">google-turbinia</field><field name="session">Usage</field><field name="sentence">The basic steps to get things running after the initial installation and configuration are: usage: turbiniactl  -h   -q   -v   -d   -a   -f   -o OUTPUT_DIR   -L LOG_FILE optional arguments:  -h, --help  -q, --quiet  -v, --verbose  -d, --debug  -a, --all_fields  -f, --force_evidence  Force evidence processing request in potentially  -o OUTPUT_DIR, --output_dir OUTPUT_DIR  -L LOG_FILE, --log_file LOG_FILE  -r REQUEST_ID, --request_id REQUEST_ID  -S, --server  -C, --use_celery  -V, --version  -D, --dump_json  -F FILTER_PATTERNS_FILE, --filter_patterns_file FILTER_PATTERNS_FILE  -j JOBS_WHITELIST, --jobs_whitelist JOBS_WHITELIST  -J JOBS_BLACKLIST, --jobs_blacklist JOBS_BLACKLIST  -p POLL_INTERVAL, --poll_interval POLL_INTERVAL  -w, --wait  The commands for processing the evidence types of rawdisk and directory specify information about evidence that Turbinia should process</field></doc>
<doc><field name="id">10768</field><field name="title">google-turbinia</field><field name="session">Usage</field><field name="sentence">By default, when adding new evidence to be processed, turbiniactl will act as a client and send a request to the configured Turbinia server, otherwise if usage: turbiniactl rawdisk  -h  -l LOCAL_PATH  -s SOURCE   -n NAME optional arguments:  -h, --help  -l LOCAL_PATH, --local_path LOCAL_PATH  -s SOURCE, --source SOURCE  -n NAME, --name NAME  Descriptive name of the evidence</field></doc>
<doc><field name="id">10769</field><field name="title">google-turbinia</field><field name="session">Other documentation</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">10770</field><field name="title">google-u2f-ref-code</field><field name="session">Reference code for U2F specifications</field><field name="sentence">This code implements the FIDO U2F specifications being developed at  This code is intended as a reference and resourcefor developers who are interested in exploring U2F</field></doc>
<doc><field name="id">10771</field><field name="title">google-u2f-ref-code</field><field name="session">Reference code for U2F specifications</field><field name="sentence">The code consists of thefollowing components:</field></doc>
<doc><field name="id">10772</field><field name="title">google-u2f-ref-code</field><field name="session">Java U2F implementation</field><field name="sentence">This code can verify U2F registrations and signatures</field></doc>
<doc><field name="id">10773</field><field name="title">google-u2f-ref-code</field><field name="session">Java U2F implementation</field><field name="sentence">A web application builtto accept U2F 2nd factor is built on top of a code base such as this</field></doc>
<doc><field name="id">10774</field><field name="title">google-u2f-ref-code</field><field name="session">Java U2F implementation</field><field name="sentence">The codebase includes a trivial web application so the user can experiment withregistration and signatures  also see the sample web app below .</field></doc>
<doc><field name="id">10775</field><field name="title">google-u2f-ref-code</field><field name="session">A virtual  software  U2F device</field><field name="sentence">This is a Java implementation of a U2F device</field></doc>
<doc><field name="id">10776</field><field name="title">google-u2f-ref-code</field><field name="session">A virtual  software  U2F device</field><field name="sentence">It generates registration andsignature statements and is meant for testing against your serverimplementation</field></doc>
<doc><field name="id">10777</field><field name="title">google-u2f-ref-code</field><field name="session">A virtual  software  U2F device</field><field name="sentence">A physical U2F device will generate similar statements.</field></doc>
<doc><field name="id">10778</field><field name="title">google-u2f-ref-code</field><field name="session">A sample web app that uses U2F</field><field name="sentence">This is a sample application built on the Google App Engine web platform whichdemonstrates a possible UX for  user interaction with U2F in a web page</field></doc>
<doc><field name="id">10779</field><field name="title">google-u2f-ref-code</field><field name="session">A sample web app that uses U2F</field><field name="sentence">Thesample application is deployed and available live at The underlying U2F capability is provided by theJava U2F implementation</field></doc>
<doc><field name="id">10780</field><field name="title">google-u2f-ref-code</field><field name="session">A sample web app that uses U2F</field><field name="sentence">A developer can take the core ideas from here andintegrate U2F into a web application on their own favorite web app platform.</field></doc>
<doc><field name="id">10781</field><field name="title">google-u2f-ref-code</field><field name="session">A U2F extension for the Chrome browser</field><field name="sentence">This extension brings U2F capability to the Chrome browser</field></doc>
<doc><field name="id">10782</field><field name="title">google-u2f-ref-code</field><field name="session">A U2F extension for the Chrome browser</field><field name="sentence">A web applicationis able to access USB U2F devices using the U2F API provided by this extension.The extension is  available from the Chrome store  webstore  for direct use.The source is available in u2f-chrome-extension for experimentation, see the extension README  u2f-chrome-extension/README.md  for details</field></doc>
<doc><field name="id">10783</field><field name="title">google-u2f-ref-code</field><field name="session">A U2F extension for the Chrome browser</field><field name="sentence">webstore :USB device since the virtual device *does nottime</field></doc>
<doc><field name="id">10784</field><field name="title">google-u2f-ref-code</field><field name="session">A U2F extension for the Chrome browser</field><field name="sentence">You can visit  to find FIDO U2F compliant devicesavailable for sale.</field></doc>
<doc><field name="id">10785</field><field name="title">google-u2f-ref-code</field><field name="session">Getting started</field><field name="sentence">u2f-ref-code is a self contained java project that includes a basic web serverand includes packages for all crypto, utilities, etc</field></doc>
<doc><field name="id">10786</field><field name="title">google-u2f-ref-code</field><field name="session">Getting started</field><field name="sentence">It does *notin a container or application server like Tomcat</field></doc>
<doc><field name="id">10787</field><field name="title">google-u2f-ref-code</field><field name="session">Getting started</field><field name="sentence">To run the demo server, runthe main class in com.google.u2f.tools.httpserver.U2fHttpServerTo compile and run the server in Eclipse, import the Maven project into yourworkspace</field></doc>
<doc><field name="id">10788</field><field name="title">google-u2f-ref-code</field><field name="session">Getting started</field><field name="sentence">You may need to fix the classpath if your version of JDK isdifferent  this has been tested with Java 1.7</field></doc>
<doc><field name="id">10789</field><field name="title">google-u2f-ref-code</field><field name="session">Getting started</field><field name="sentence">The simple demo web server isin com.google.u2f.tools.httpserver.U2fHttpServer.java and runs on portRun this class as a regular Java application  right click, select *Runinstalled in Chrome in order for the demo app to talk to your U2F token.To run directly with Maven, run mvn compile exec:java from the u2f-ref-code</field></doc>
<doc><field name="id">10790</field><field name="title">google-u2f-ref-code</field><field name="session">U2F-GAE-Demo</field><field name="sentence">The u2f-gae-demo project is a sample application built on the Google App Engineweb platform which demonstrates a possible UX for user interaction with U2F in aweb page.To start the development server with Maven, run mvn appengine:devserver</field></doc>
<doc><field name="id">10791</field><field name="title">google-u2f-ref-code</field><field name="session">U2F-GAE-Demo</field><field name="sentence">Thiswill run the server locally at .As above, if importing the Maven project into Eclipse you might have to adjustJDK versions, App Engine SDK version, etc</field></doc>
<doc><field name="id">10792</field><field name="title">google-u2f-ref-code</field><field name="session">U2F-GAE-Demo</field><field name="sentence">Once everything compiles, you can runthe App Engine server locally and point Google Chrome at .The built-in support for U2F in Google Chrome only works on HTTPS sites</field></doc>
<doc><field name="id">10793</field><field name="title">google-u2f-ref-code</field><field name="session">U2F-GAE-Demo</field><field name="sentence">To testthe app on , which uses HTTP, you need to do one of the</field></doc>
<doc><field name="id">10794</field><field name="title">google-u2f-ref-code</field><field name="session">Option 1: Use the extension from the webstore</field><field name="sentence">u2f-api.js   to</field></doc>
<doc><field name="id">10795</field><field name="title">google-u2f-ref-code</field><field name="session">Option 2: Use the built-in chrome support</field><field name="sentence">You can deploy this App Engine app to your own domain by changing the applicationname in u2f-gae-demo/war/WEB-INF/appengine-web.xml.</field></doc>
<doc><field name="id">10796</field><field name="title">google-ubntools</field><field name="session">ubntools</field><field name="sentence">Copyright 2017 Google Inc.This is not a google product.Tools to do fun things with ubiquity gear.</field></doc>
<doc><field name="id">10797</field><field name="title">google-ubntools</field><field name="session">Generate SSH key</field><field name="sentence">Try a one-time upload by uploading</field></doc>
<doc><field name="id">10798</field><field name="title">google-ubntools</field><field name="session">Set up regular data uploads</field><field name="sentence">On the AP, run:Make sure files are being uploaded to the server every 10 minutes</field></doc>
<doc><field name="id">10799</field><field name="title">google-ubntools</field><field name="session">Set up regular data uploads</field><field name="sentence">If it alllooks good then the AP setup is done</field></doc>
<doc><field name="id">10800</field><field name="title">google-ubntools</field><field name="session">Set up regular data uploads</field><field name="sentence">At least until it reboots.</field></doc>
<doc><field name="id">10801</field><field name="title">google-ubntools</field><field name="session">On server: Create database</field><field name="sentence">There are premade views  do \d and then SELECT but you can query more raw data too.</field></doc>
<doc><field name="id">10802</field><field name="title">google-uiimage-additions</field><field name="session">UIImage Additions</field><field name="sentence">A collection of miscellaneous utility methods for UIImage for memory-efficientimage transformations.</field></doc>
<doc><field name="id">10803</field><field name="title">google-uiimage-additions</field><field name="session">CocoaPods</field><field name="sentence">Add the following to your Podfile:</field></doc>
<doc><field name="id">10804</field><field name="title">google-uiimage-additions</field><field name="session">Carthage</field><field name="sentence">Add the following to your Cartfile:</field></doc>
<doc><field name="id">10805</field><field name="title">google-uiimage-additions</field><field name="session">Import</field><field name="sentence">Import the umbrella header as:</field></doc>
<doc><field name="id">10806</field><field name="title">google-uniflow-polymer</field><field name="session">UniFlow for Polymer 2.x</field><field name="sentence">Set of mixins to enable uni-directional data flow in Polymer application.*This library was developed as part of internal project at Google and isn't directly affiliated with the Polymer project  although Polymer team has provided some good feedback on UniFlow implementation .*</field></doc>
<doc><field name="id">10807</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">When you start working on a new Polymer application, it's easy to start and build the first few elements, and make them communicate via events and data binding, so everything looks nice and rosy</field></doc>
<doc><field name="id">10808</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">However, as the number and complexity of elements grows, it becomes increasingly difficult to manage relationships between them, trace where/when the data changes happened, and debug the problems</field></doc>
<doc><field name="id">10809</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">So this project started as an attempt by our team at Google to find a good way to architect large Polymer application</field></doc>
<doc><field name="id">10810</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">Inspired by React's community Flux  and, later, Redux  architecture, we implemented a unidirectional data flow pattern  data down, events up  for Polymer</field></doc>
<doc><field name="id">10811</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">We found that when using UniFlow application code becomes more streamlined  e.g</field></doc>
<doc><field name="id">10812</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">it is clear what the responsibilities of each element are  and much easier to manage; the code has fewer bugs, and debugging is a lot more efficient</field></doc>
<doc><field name="id">10813</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">Adding new functionality no longer exponentially increases complexity.This project was also inspired by Backbone Marionette</field></doc>
<doc><field name="id">10814</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">Backbone.js back in the days of its glory was a great library that provided a nice set of building blocks for building JavaScript applications</field></doc>
<doc><field name="id">10815</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">However, it left much of the application design, architecture and scalability to the developer, including memory management, view management, and more</field></doc>
<doc><field name="id">10816</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">Marionette brought an application architecture to Backbone, along with built in view management and memory management</field></doc>
<doc><field name="id">10817</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">It was designed to be a lightweight and flexible library of tools that sits on top of Backbone, providing the framework for building a scalable application</field></doc>
<doc><field name="id">10818</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">Uniflow strives to achieve similar goal for Polymer</field></doc>
<doc><field name="id">10819</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">We feel that Polymer, and web components in general, is a great concept that takes interoperability and encapsulation in Web development to the next level</field></doc>
<doc><field name="id">10820</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">But it lacked the patterns for building large and complex applications, and this is the void we expect UniFlow to fill</field></doc>
<doc><field name="id">10821</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">It is still in beta, so breaking changes may be happening before the first release</field></doc>
<doc><field name="id">10822</field><field name="title">google-uniflow-polymer</field><field name="session">History & Overview</field><field name="sentence">However, we believe that abstractions implemented in the library can be useful for Polymer community, so we encourage people to try, fork, ask questions, send  comments, and submit pull requests.</field></doc>
<doc><field name="id">10823</field><field name="title">google-uniflow-polymer</field><field name="session">Applicability</field><field name="sentence">This library implements the architectural pattern called 'unidirectional data flow'</field></doc>
<doc><field name="id">10824</field><field name="title">google-uniflow-polymer</field><field name="session">Applicability</field><field name="sentence">It works best if application logic involves complicated data management, when multiple elements need to have access to or modify the same data</field></doc>
<doc><field name="id">10825</field><field name="title">google-uniflow-polymer</field><field name="session">Applicability</field><field name="sentence">Even though the pattern can be implemented just using built-in Polymer concepts, such as custom events and data binding, the UniFlow library provides a useful set of tools and abstractions, and helps to structure application code.</field></doc>
<doc><field name="id">10826</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">UniFlow is implemented as a set of mixins that developers apply to their elements</field></doc>
<doc><field name="id">10827</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">It is assumed that each application has a singleton application element that maintains state of entire application</field></doc>
<doc><field name="id">10828</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">Each element that needs access to the data is bound, directly or indirectly, to sub-tree of application state tree</field></doc>
<doc><field name="id">10829</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">Two way data binding is never used to send data up, from child to parent, so only parent elements send data to children using one way data binding</field></doc>
<doc><field name="id">10830</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">Child elements, in turn, send the events  emit actions  responding to user actions, indicating that the data may need to be modified</field></doc>
<doc><field name="id">10831</field><field name="title">google-uniflow-polymer</field><field name="session">Implementation</field><field name="sentence">Special non-visual elements called action dispatchers mutate the data, then all elements listening to the data changes render new data</field></doc>
<doc><field name="id">10832</field><field name="title">google-uniflow-polymer</field><field name="session">Action Dispatcher</field><field name="sentence">Use UniFlow.ActionDispatcher for non-visual elements that process actions emitted by visualelements</field></doc>
<doc><field name="id">10833</field><field name="title">google-uniflow-polymer</field><field name="session">Action Dispatcher</field><field name="sentence">Action dispatchers usually placed at the application level</field></doc>
<doc><field name="id">10834</field><field name="title">google-uniflow-polymer</field><field name="session">Action Dispatcher</field><field name="sentence">Each action dispatcherelement gets a chance to process the action in the order the elements are present in theDOM tree</field></doc>
<doc><field name="id">10835</field><field name="title">google-uniflow-polymer</field><field name="session">Action Dispatcher</field><field name="sentence">It is important that action dispatcher elements get two-way data binding toapplication state as follows:Action dispatcher elements can include nested action dispatchers, so you can have ahierarchical organization of action dispatchers.</field></doc>
<doc><field name="id">10836</field><field name="title">google-uniflow-polymer</field><field name="session">HTML:</field><field name="sentence">class MyElement extends UniFlow.StateAware Polymer.Element  {  }customElements.define MyElement.is, MyElement ;When above element is declared as follows:</field></doc>
<doc><field name="id">10837</field><field name="title">google-uniflow-polymer</field><field name="session">JavaScript:</field><field name="sentence">class MyApp extends UniFlow.ApplicationState Polymer.Element  {  }customElements.define MayApp.is, MyApp ;In the example above,  will receive notification of any changes to the state,as if it was declared as follows:the value of state.someElement.propertyA, and receive all notification of the property changewhenever the corresponding data in state tree changes</field></doc>
<doc><field name="id">10838</field><field name="title">google-uniflow-polymer</field><field name="session">JavaScript:</field><field name="sentence">This essentially translates to followingown state, it is considered their private state and no other elements will be notified of those</field></doc>
<doc><field name="id">10839</field><field name="title">google-uniflow-polymer</field><field name="session">Action Emitter</field><field name="sentence">Whenever element needs to emit an action, this mixin should be used</field></doc>
<doc><field name="id">10840</field><field name="title">google-uniflow-polymer</field><field name="session">Action Emitter</field><field name="sentence">Action object must always include type property.</field></doc>
<doc><field name="id">10841</field><field name="title">google-uniflow-polymer</field><field name="session">Application State</field><field name="sentence">Assign this mixin to your main application element</field></doc>
<doc><field name="id">10842</field><field name="title">google-uniflow-polymer</field><field name="session">Application State</field><field name="sentence">It provides globalstate and functionality to maintain individual elements states</field></doc>
<doc><field name="id">10843</field><field name="title">google-uniflow-polymer</field><field name="session">Application State</field><field name="sentence">This mixinis responsible for notifying all state-aware elements about their statechanges  provided those elements have statePath property defined .Only one element in the application is supposed to have this mixin.</field></doc>
<doc><field name="id">10844</field><field name="title">google-uniflow-polymer</field><field name="session">List View</field><field name="sentence">This mixin used by elements that need to render multiple models backedby 'list' array</field></doc>
<doc><field name="id">10845</field><field name="title">google-uniflow-polymer</field><field name="session">List View</field><field name="sentence">You may want to use ModelView to render individualmodels in the list</field></doc>
<doc><field name="id">10846</field><field name="title">google-uniflow-polymer</field><field name="session">List View</field><field name="sentence">The mixin supports element selection by setting predefined$selected property on list elements.</field></doc>
<doc><field name="id">10847</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">Element rendering data represented by a single object  model  in theapplication state should use ModelView mixin</field></doc>
<doc><field name="id">10848</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">Model View is a powerfulconcept that encapsulates model data  likely the data received from theserver and to be persisted to the server if modified as a result of useractions , status  validity of the data, flag that data was modified,notifications for the user, etc</field></doc>
<doc><field name="id">10849</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">Auxiliary data supplied by actiondispatchers and needed for display purposes or element's logicshould be defined as element’s properties</field></doc>
<doc><field name="id">10850</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">Same applies to datacreated/modified by the element but not intended to be persisted.If StateAware mixin is used along with ModelView, you can take advantageof statePath property that indicates path to the element's state in theapplication state tree</field></doc>
<doc><field name="id">10851</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">Whenever any data is mutated by action dispatchersat statePath or below, the element will receive notification of itsproperties' change  even if there is no explicit binding for thoseproperties</field></doc>
<doc><field name="id">10852</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">See UniFlow.StateAware for more details and example.ModelView mixin defines some properties that are intended to be overriddenin the elements:+ validation property allows to specify validation rulesthat will be applied when validateModel   method is called</field></doc>
<doc><field name="id">10853</field><field name="title">google-uniflow-polymer</field><field name="session">Model View</field><field name="sentence">As a result ofthis method validation status will be updated to indicate result for eachmodel field that has validation rule associated with it.+ saveAction property indicates which action should be emitted whensaveModel method is called to perform save of the model.+ getMessage should be overridden with the function returning messagestring for given error code  to translate validation error code to message</field></doc>
<doc><field name="id">10854</field><field name="title">google-uniflow-polymer</field><field name="session">State Aware</field><field name="sentence">Key mixin that must be assigned to all elements that need to access application state and/or have access to the application element</field></doc>
<doc><field name="id">10855</field><field name="title">google-uniflow-polymer</field><field name="session">State Aware</field><field name="sentence">The element is notified of any changes to application's state, as well as all its properties when they're modified by state mutator elements</field></doc>
<doc><field name="id">10856</field><field name="title">google-uniflow-polymer</field><field name="session">State Aware</field><field name="sentence">state-path property must be used to identify path to element's state in application state tree.</field></doc>
<doc><field name="id">10857</field><field name="title">google-uniflow-polymer</field><field name="session">State Mutator</field><field name="sentence">Some non-visual elements, like action dispatchers, need to modify applicationstate, in which case they should have this mixin assigned</field></doc>
<doc><field name="id">10858</field><field name="title">google-uniflow-polymer</field><field name="session">State Mutator</field><field name="sentence">Implements stateare only supposed to exist at the application level.</field></doc>
<doc><field name="id">10859</field><field name="title">google-unigem-objective-c</field><field name="session">Unigem</field><field name="sentence">This repository contains **Unicode Gems**, a Mac app, an iOS app,and an iOS keyboard that makes it easy for you to use interestingtypefaces in contexts that don't allow fonted text.As an iOS app, you get an iPhone UI, an iPad UI, and iPad split view support.Apple, in iOS 11, dramatically extended the character styles that you can get in theirimplementation of Unicode.Some examples:𝐓𝐡𝐞 𝐪𝐮𝐢𝐜𝐤 𝐛𝐫𝐨𝐰𝐧 𝐟𝐨𝐱 𝐣𝐮𝐦𝐩𝐞𝐝 𝐨𝐯𝐞𝐫 𝐭𝐡𝐞 𝐥𝐚𝐳𝐲 𝐝𝐨𝐠𝐬.𝕋𝕙𝕖 𝕢𝕦𝕚𝕔𝕜 𝕓𝕣𝕠𝕨𝕟 𝕗𝕠𝕩 𝕛𝕦𝕞𝕡𝕖𝕕 𝕠𝕧𝕖𝕣 𝕥𝕙𝕖 𝕝𝕒𝕫𝕪 𝕕𝕠𝕘𝕤.🄽🄾🅆 🄸🅂 🅃🄷🄴 🅃🄸🄼🄴 🄵🄾🅁 🄰🄻🄻 🄶🄾🄾🄳 🄼🄴🄽 🅃🄾 🄲🄾🄼🄴 🅃🄾 🅃🄷🄴 🄰🄸🄳 🄾🄵 🅃🄷🄴🄸🅁 🄿🄰🅁🅃🅈.𝙉𝙤𝙬 𝙞𝙨 𝙩𝙝𝙚 𝙩𝙞𝙢𝙚 𝙛𝙤𝙧 𝙖𝙡𝙡 𝙜𝙤𝙤𝙙 𝙢𝙚𝙣 𝙩𝙤 𝙘𝙤𝙢𝙚 𝙩𝙤 𝙩𝙝𝙚 𝙖𝙞𝙙 𝙤𝙛 𝙩𝙝𝙚𝙞𝙧 𝙥𝙖𝙧𝙩𝙮.𝒥𝒶𝒸𝓀𝒹𝒶𝓌𝓈 𝓁ℴ𝓋ℯ 𝓂𝓎 𝒷𝒾ℊ 𝓈𝓅𝒽𝒾𝓃𝓍 ℴ𝒻 𝓆𝓊𝒶𝓇𝓉𝓏.𝔍𝔞𝔠𝔨𝔡𝔞𝔴𝔰 𝔩𝔬𝔳𝔢 𝔪𝔶 𝔟𝔦𝔤 𝔰𝔭𝔥𝔦𝔫𝔵 𝔬𝔣 𝔮𝔲𝔞𝔯𝔱𝔷.¿ʇɐɥʇ ɟo ʞuᴉɥʇ I ʇ,upᴉp ʎɥʍ ʍoNThese unicode tricks only work for the English alphabet, and some will translate to uppercaseif that is all that mode has.Sample Mac screenshot:! Sample Mac screenshot  Art/MacSample.png Sample iPhone screenshot:! Sample iPhone screenshot  Art/iPhoneSample.png This is not an officially supported Google product.</field></doc>
<doc><field name="id">10860</field><field name="title">google-unigem-objective-c</field><field name="session">Using:</field><field name="sentence">Select a mode and start typing</field></doc>
<doc><field name="id">10861</field><field name="title">google-unigem-objective-c</field><field name="session">Using:</field><field name="sentence">Copy from the result line into another app or use the customkeyboard to type directly into another app.</field></doc>
<doc><field name="id">10862</field><field name="title">google-unigem-objective-c</field><field name="session">Caveat:</field><field name="sentence">Since your text is mapped to unusual unicode values, it won't be indexed correctly by search engines</field></doc>
<doc><field name="id">10863</field><field name="title">google-unigem-objective-c</field><field name="session">Caveat:</field><field name="sentence">If you care,you should repeat the text as ordinary characters in the body of your message.</field></doc>
<doc><field name="id">10864</field><field name="title">google-unigem-objective-c</field><field name="session">Building</field><field name="sentence">1  Start by editing account.xcconfig</field></doc>
<doc><field name="id">10865</field><field name="title">google-unigem-objective-c</field><field name="session">Building</field><field name="sentence">It currently says:change that to your bundle prefix: the one on your developer account</field></doc>
<doc><field name="id">10866</field><field name="title">google-unigem-objective-c</field><field name="session">Building</field><field name="sentence">Example:2  With the project 'Unigem' selected in Xcode's File Navigator, select each of the three targets and fix up the signing for your developer account</field></doc>
<doc><field name="id">10867</field><field name="title">google-unigem-objective-c</field><field name="session">Building</field><field name="sentence">If you don't do this then you'll only able to run the Mac app, and the iOS ones in the simulator.2.a  In the Unigem target's General section check the checkbox to turn on automatic signing and select your team.2.b  Do the same for the 'keys' target2.c  and again for the unigem target3  Now you'll be able to select each of the three targets and use Xcode's Run command to run them.4  On the iOS device, you enable a custom keyboard in Settings > General > Keyboard > Keyboards > Add New Keyboard.PRODUCT_VERSION is a build setting defined at the project level that affects all three targets.None of the three versions of Unigem store or send your data.</field></doc>
<doc><field name="id">10868</field><field name="title">google-unigem-objective-c</field><field name="session">See also:</field><field name="sentence">Macintosh Unicode  Character Viewer  Part of OS X.Click on a character to enter it in the current text edit box</field></doc>
<doc><field name="id">10869</field><field name="title">google-unigem-objective-c</field><field name="session">See also:</field><field name="sentence">Zalgo Text  Stacking punctuation to make your text look likesomething out of a Lovecraft horror novel.</field></doc>
<doc><field name="id">10870</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">Which languages convey the most information in a given amount of space? This isa question often asked of linguists, especially by engineers who often have someinformation theoretic measure of "information" in mind, but rarely defineexactly how they would measure that information</field></doc>
<doc><field name="id">10871</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">The question is, in factremarkably hard to answer, and many linguists consider it unanswerable</field></doc>
<doc><field name="id">10872</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">But itis a question that seems as if it ought to have an answer</field></doc>
<doc><field name="id">10873</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">If one had a databaseof close translations between a set of typologically diverse languages, withdetailed marking of morphosyntactic and morphosemantic features, one could hopeto quantify the differences between how these different languages conveyinformation</field></doc>
<doc><field name="id">10874</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">Since no appropriate database exists we decided to constructone</field></doc>
<doc><field name="id">10875</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">The purpose of this paper is to present our work on the database, alongwith some preliminary results</field></doc>
<doc><field name="id">10876</field><field name="title">google-unimorph</field><field name="session">Abstract</field><field name="sentence">We plan to release the dataset once complete.</field></doc>
<doc><field name="id">10877</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">Our data are taken from a few domains of interest to Google including drivingdirections and answers generated from structured data for Google Now™</field></doc>
<doc><field name="id">10878</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">Notethat no Google user data is included in our data collection</field></doc>
<doc><field name="id">10879</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">Obviously suchexamples are but a subset of the ways in which language is used to communicate:The reason for picking data from this circumscribed set of domains is that forpart of the data at least, the text corresponds to, and in a real applicationwould be automatically generated from, data in a defined format  see below foran example</field></doc>
<doc><field name="id">10880</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">Therefore the basic intended meaning of a message is to a largeextent given, thus obviating the need to do semantic annotation</field></doc>
<doc><field name="id">10881</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">By producingparallel target sentences in various languages, and making sure that thetranslations are as close as possible, while still being stylistically andsocially acceptable, we can be minimize differences in information content thatmight arise for irrelevant reasons, such as liberal choices of wording taken bythe translators</field></doc>
<doc><field name="id">10882</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">We are therefore focusing as much as possible on what thelanguages must convey, rather than one what they may convey.Our initial dataset consists of 85 sentences from a mix of domains for thefollowing languages: English, French, Italian, German, Russian, Arabic, Koreanand Mandarin Chinese</field></doc>
<doc><field name="id">10883</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">These languages were chosen from among languages for whichwe have very good resources, to be somewhat typologically balanced, representinglanguages of the “isolating” or quasi-isolating type  English, Mandarin ,“inflectional”  French, Italian, German, Russian, Arabic  and “agglutinative”’ Korean</field></doc>
<doc><field name="id">10884</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">We are also interested in languages with rich case systems  German,Russian, Korean , gender systems  French, Italian, German, Russian, Arabic ,anda variety of language families — four in this case.2 For the current dataset,translators were given the English original in a spreadsheet, and were given thefollowing instructions:This is a request for natural sounding and socially appropriate translationswhich should be inserted directly into the provided spreadsheet in the columnfor your language</field></doc>
<doc><field name="id">10885</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">Important: There is no character restriction for thesetranslations</field></doc>
<doc><field name="id">10886</field><field name="title">google-unimorph</field><field name="session">Per the paper</field><field name="sentence">However, we want translations that are succinct as possible,natural sounding, and socially appropriate.</field></doc>
<doc><field name="id">10887</field><field name="title">google-upb</field><field name="session">μpb</field><field name="sentence">μpb is a small protobuf implementation written in C.API and ABI are both subject to change!  Please do not distributeas a shared library for this reason  for now at least .</field></doc>
<doc><field name="id">10888</field><field name="title">google-upb</field><field name="session">Building the core libraries</field><field name="sentence">The core libraries are pure C99 and have no dependencies.This will create a separate C library for each core libraryin lib/</field></doc>
<doc><field name="id">10889</field><field name="title">google-upb</field><field name="session">Building the core libraries</field><field name="sentence">They are built separately to help your binariesslim, so you don't need to link in things you neither wantor need.Other useful targets:</field></doc>
<doc><field name="id">10890</field><field name="title">google-upb</field><field name="session">C and C++ API</field><field name="sentence">The public C/C++ API is defined by all of the .h files inupb/ except .int.h files  which are internal-only .</field></doc>
<doc><field name="id">10891</field><field name="title">google-upb</field><field name="session">Lua bindings</field><field name="sentence">Lua bindings provide μpb's functionality to Lua programs.The bindings target Lua 5.1, Lua 5.2, LuaJIT, and  soon  Lua 5.To build the Lua bindings, the Lua libraries must be installed</field></doc>
<doc><field name="id">10892</field><field name="title">google-upb</field><field name="session">Lua bindings</field><field name="sentence">Oncethey are installed, run:Note that if the Lua headers are not in a standard place, you mayneed to pass custom flags:To test the Lua bindings:</field></doc>
<doc><field name="id">10893</field><field name="title">google-upb</field><field name="session">Contact</field><field name="sentence">Author: Josh Haberman   jhaberman@gmail.com  mailto:jhaberman@gmail.com , haberman@google.com  mailto:haberman@google.com</field></doc>
<doc><field name="id">10894</field><field name="title">google-upvote</field><field name="session">Features</field><field name="sentence"></field></doc>
<doc><field name="id">10895</field><field name="title">google-upvote</field><field name="session">Setup</field><field name="sentence">See the  docs page  docs/setup.md  for full instructions.</field></doc>
<doc><field name="id">10896</field><field name="title">google-upvote</field><field name="session">Docs</field><field name="sentence">We are current working hard to get Upvote ready for external contributions.However, at this time, we do not have the necessary approvals to do so.In the meantime, please feel free to file GitHub issues or post in our GoogleGroup,  upvote-discuss with any comments, bugs, or feature requests.</field></doc>
<doc><field name="id">10897</field><field name="title">google-upvote</field><field name="session">Contributors</field><field name="sentence">Core Contributors:  Chief  Matthew Special thanks to  Danny  Haru   Maxim And to the Santa team:  Russell  Tom   Ed  Phillip</field></doc>
<doc><field name="id">10898</field><field name="title">google-upvote</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10899</field><field name="title">google-uri.dart</field><field name="session">UriPattern</field><field name="sentence">UriPattern is an interface for classes that match and parse URIs, much like the  Pattern  pattern  is for Strings</field></doc>
<doc><field name="id">10900</field><field name="title">google-uri.dart</field><field name="session">UriPattern</field><field name="sentence">It defines the methods bool matches Uri uri  and UriMatch match Uri uri</field></doc>
<doc><field name="id">10901</field><field name="title">google-uri.dart</field><field name="session">UriPattern</field><field name="sentence">pattern :</field></doc>
<doc><field name="id">10902</field><field name="title">google-uri.dart</field><field name="session">UriMatch</field><field name="sentence">UriMatch is the result of UriPattern.match</field></doc>
<doc><field name="id">10903</field><field name="title">google-uri.dart</field><field name="session">UriMatch</field><field name="sentence">It contains the parameters parsed out of a URI and the "rest" of the URI left over after parsing, which is useful for parsing a single URI with multiple relative URI patterns that form a hierarchy.</field></doc>
<doc><field name="id">10904</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">UriTemplate is an implementation of  RFC 6570 URI Templates  rfc6570</field></doc>
<doc><field name="id">10905</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">URI Templates are useful for generating URIs from data</field></doc>
<doc><field name="id">10906</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">UriTemplates are created from a template string, and then expanded with data to generate a URI:URI templates are strings made up of fixed and variable parts</field></doc>
<doc><field name="id">10907</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">The variable parts are described with _expressions_, which are places within single curly-braces: { and }.Expressions consist of an optional _operator_ and a comma-separated list of _variable_specifications_</field></doc>
<doc><field name="id">10908</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">Variable specifications consist of a variable name and an optional _modifier_</field></doc>
<doc><field name="id">10909</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">The operator applies to the whole expression and controls how reserved characters are expanded, the prefix and separator, if any, applied to the expansion, and whether to expand the variable as a key/value pair</field></doc>
<doc><field name="id">10910</field><field name="title">google-uri.dart</field><field name="session">UriTemplate</field><field name="sentence">Modifiers apply to each variable in the expression and allow truncating the value, or "exploding" list and maps into multiple key/value pairs.</field></doc>
<doc><field name="id">10911</field><field name="title">google-uri.dart</field><field name="session">Examples</field><field name="sentence">URI template expansions does more than simple variable replacement, it has facilities for generating paths, fragments, query strings and more</field></doc>
<doc><field name="id">10912</field><field name="title">google-uri.dart</field><field name="session">Examples</field><field name="sentence">To control the expansion, expressions can use one of the supported operators:| Operator | Description| _none_   | Simple string expansion| +| #| .| /| ;| ?| &</field></doc>
<doc><field name="id">10913</field><field name="title">google-uri.dart</field><field name="session">Modifiers</field><field name="sentence">Modifiers control | Modifier | Description| _none_   | Default expansion| :_n_</field></doc>
<doc><field name="id">10914</field><field name="title">google-uri.dart</field><field name="session">UriParser</field><field name="sentence">UriParser parses URIs according to a UriTemplate, extracting paramaters based on the variables defined in the template.Since URI Templates are not designed to be parsable, only a restricted subset of templates can be used for parsing.Parsable templates have the following restrictions over expandable templates:UriBuilder is mutable container of URI components for incrementally building Uris.</field></doc>
<doc><field name="id">10915</field><field name="title">google-uribeacon</field><field name="session">Project Status Update</field><field name="sentence">We launched the UriBeacon project in 2014 to explore how to use BLE technology to share URLs</field></doc>
<doc><field name="id">10916</field><field name="title">google-uribeacon</field><field name="session">Project Status Update</field><field name="sentence">Since then, we’ve been thrilled about the community that has formed around UriBeacon, and with the contributors and partners who have worked with us to produce UriBeacon utilities, apps, prototypes, and production-ready beacons.We’ve also found that in addition to broadcasting URLs, there is much more that can be accomplished with an open beacon format.To that end, **UriBeacon is evolving to become part of the  Eddystone open beacon format Like UriBeacon, Eddystone supports broadcasting URLs in BTLE advertisement packets via its  Eddystone-URL  frame type</field></doc>
<doc><field name="id">10917</field><field name="title">google-uribeacon</field><field name="session">Project Status Update</field><field name="sentence">But unlike UriBeacon, Eddystone offers first class support for a variety of payload types</field></doc>
<doc><field name="id">10918</field><field name="title">google-uribeacon</field><field name="session">Project Status Update</field><field name="sentence">Eddystone provides much better support for unique IDs via its  Eddystone-UID  frame, provides telemetry information via its  Eddystone-TLM  frame, and it opens the door for more future innovation</field></doc>
<doc><field name="id">10919</field><field name="title">google-uribeacon</field><field name="session">Project Status Update</field><field name="sentence">Read the full  Protocol Specification There are some protocol changes to this new format, but this move should not impact much for the  Physical Web  project, which will support Eddystone-URL beacons.We look forward to continuing to work with you in the Eddystone-URL project!—The UriBeacon  and now Eddystone-URL  team</field></doc>
<doc><field name="id">10920</field><field name="title">google-uribeacon</field><field name="session">Old Repo Contents</field><field name="sentence">If you’re looking for the old UriBeacon specification and code, you can find it tagged  here</field></doc>
<doc><field name="id">10921</field><field name="title">google-us-altgr-intl</field><field name="session">US AltGr International Keyboard for Android</field><field name="sentence">This package contains additional layout files for physical keyboards  i.e</field></doc>
<doc><field name="id">10922</field><field name="title">google-us-altgr-intl</field><field name="session">US AltGr International Keyboard for Android</field><field name="sentence">USB,Bluetooth  to enable the "AltGr" variant of the US International keyboard layouton Android.These layouts are also known as "us altgr-intl" or "US Extended".</field></doc>
<doc><field name="id">10923</field><field name="title">google-us-altgr-intl</field><field name="session">The Layouts</field><field name="sentence">The layouts are based on the existing English  US International  layouts, withthe following changes:In case of the Pixel C variant, the following additional changes were done:</field></doc>
<doc><field name="id">10924</field><field name="title">google-us-altgr-intl</field><field name="session">English  US AltGr International</field><field name="sentence">! Keyboard Layout Picture  images/keyboard_english_us_intl.png</field></doc>
<doc><field name="id">10925</field><field name="title">google-us-altgr-intl</field><field name="session">English  US AltGr International; Pixel C</field><field name="sentence">! Keyboard Layout Picture  images/keyboard_dragon_english_us_intl.png</field></doc>
<doc><field name="id">10926</field><field name="title">google-us-altgr-intl</field><field name="session">Compiling & Installing</field><field name="sentence">keyboard layouts from this package</field></doc>
<doc><field name="id">10927</field><field name="title">google-us-altgr-intl</field><field name="session">Compiling & Installing</field><field name="sentence">They will show up as layouts provided by"US AltGr International External Keyboard Layout".Pixel C users: to go back to using the layouts included with the device, run oneTo add a custom layout:Download one of the existing layout files fromEdit and rename the file as needed</field></doc>
<doc><field name="id">10928</field><field name="title">google-us-altgr-intl</field><field name="session">Compiling & Installing</field><field name="sentence">Some ideas:Save it below res/raw/ in this repository.Duplicate and edit one of the existing entries belowDuplicate and edit one of the existing entries inCompile and install as above.</field></doc>
<doc><field name="id">10929</field><field name="title">google-us-altgr-intl</field><field name="session">Copyright</field><field name="sentence">See the LICENSE file.</field></doc>
<doc><field name="id">10930</field><field name="title">google-us-altgr-intl</field><field name="session">Contributing</field><field name="sentence">See the CONTRIBUTING.md file.</field></doc>
<doc><field name="id">10931</field><field name="title">google-us-altgr-intl</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10932</field><field name="title">google-usbinfo</field><field name="session">USBInfo</field><field name="sentence">USBInfo provides Python developers a way to uniformly access informationabout USB endpoints on a system without the need to understand the finedetails of any one particular platform's implementation of USB</field></doc>
<doc><field name="id">10933</field><field name="title">google-usbinfo</field><field name="session">USBInfo</field><field name="sentence">This isuseful in robotics and device automation and allows developers to writemore portable code.More information can be found in the documentation</field></doc>
<doc><field name="id">10934</field><field name="title">google-uuid</field><field name="session">uuid ! build status</field><field name="sentence">The uuid package generates and inspects UUIDs based on RFC 4122 and DCE 1.1: Authentication and Security Services</field></doc>
<doc><field name="id">10935</field><field name="title">google-uuid</field><field name="session">uuid ! build status</field><field name="sentence">This package is based on the github.com/pborman/uuid package  previously namedcode.google.com/p/go-uuid</field></doc>
<doc><field name="id">10936</field><field name="title">google-uuid</field><field name="session">uuid ! build status</field><field name="sentence">It differs from these earlier packages in thata UUID is a 16 byte array rather than a byte slice</field></doc>
<doc><field name="id">10937</field><field name="title">google-uuid</field><field name="session">uuid ! build status</field><field name="sentence">One loss due to thischange is the ability to represent an invalid UUID  vs a NIL UUID .</field></doc>
<doc><field name="id">10938</field><field name="title">google-uuid</field><field name="session">Install</field><field name="sentence">go get github.com/google/uuid</field></doc>
<doc><field name="id">10939</field><field name="title">google-uuid</field><field name="session">Documentation</field><field name="sentence">! GoDoc  Full go doc style documentation for the package can be viewed online withoutinstalling this package by using the GoDoc site here:</field></doc>
<doc><field name="id">10940</field><field name="title">google-vae-seq</field><field name="session">VAE-Seq</field><field name="sentence">VAE-Seq is a library for modeling sequences of observations.</field></doc>
<doc><field name="id">10941</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">One tool that's commonly used to model sequential data is theRecurrent Neural Network  RNN , or gated variations of it such as theLong Short-Term Memory cell or the Gated Recurrent Unit cell.RNNs in general are essentially trainable transition functions:Normal distributions for real-valued observations.The output of the RNN specifies the parameters of the observationdistribution  e.g</field></doc>
<doc><field name="id">10942</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">the logits of a Categorical or the mean andvariance of a Normal</field></doc>
<doc><field name="id">10943</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">But the size of the RNN output and thenumber of parameters that we need don't necessarily match up</field></doc>
<doc><field name="id">10944</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">To solvethis, we project output into the appropriate shape via a NeuralNetwork we'll call a decoder.And what about the input of the RNN? It can be empty, but we mightwant to include side information from the environment  e.g</field></doc>
<doc><field name="id">10945</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">actionswhen modeling a game or a metronome when modelingmusic</field></doc>
<doc><field name="id">10946</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">Additionally, the observation from the previous step s  isalmost always an important feature to include</field></doc>
<doc><field name="id">10947</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">Here, we'll use anotherNeural Network we'll call an encoder to summarize the observationinto a more digestible form.Together, these components specify a factored  by time step probability distribution that we can train in the usual way: bymaximizing the probability of the network weights given theobservations in your training data and your priors over thoseweights</field></doc>
<doc><field name="id">10948</field><field name="title">google-vae-seq</field><field name="session">Background</field><field name="sentence">Once trained, you can use ancestral sampling to generate new</field></doc>
<doc><field name="id">10949</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">This library allows you to express the type of model describedabove</field></doc>
<doc><field name="id">10950</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">It handles the plumbing for you: you define the encoder, thedecoder, and the observation distribution</field></doc>
<doc><field name="id">10951</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">The resulting model canbe trained on a Dataset of observation sequences, queried for theprobability of a given sequence, or queried to generate new sequences.But the model above also has a limitation: the family of observationdistributions we pick is the only source of non-determinism in themodel</field></doc>
<doc><field name="id">10952</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">If it can't express the true distribution of observations, themodel won't be able to learn or generate the true range of observationsequences</field></doc>
<doc><field name="id">10953</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">For example, consider a sequence of black/white images</field></doc>
<doc><field name="id">10954</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">Ifwe pick the observation distribution to be a set of independentBernoulli distributions over pixel values, the first generated imagewould always look like a noisy average over images in the trainingset</field></doc>
<doc><field name="id">10955</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">Subsequent images might get more creative since they areconditioned on a noisy input, but that depends on how images varybetween steps in the training data.The issue in the example above is that the observation distribution wepicked wasn't expressive enough: pixels in an image aren'tindependent</field></doc>
<doc><field name="id">10956</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">One way to fix this is to design very expressiveobservation distributions that can model images</field></doc>
<doc><field name="id">10957</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">Another way is tocondition the simple distribution on a latent variable to produce ahierarchical output distribution</field></doc>
<doc><field name="id">10958</field><field name="title">google-vae-seq</field><field name="session">Motivation</field><field name="sentence">This latter type of model is knownas a Variational Auto encoder  VAE .There are different ways to incorporate latent variables in asequential model  see the supported architectures below  but thegeneral approach we take here is to view the RNN state as acollection of stochastic and deterministic variables.</field></doc>
<doc><field name="id">10959</field><field name="title">google-vae-seq</field><field name="session">Usage</field><field name="sentence">To define a model, subclass ModelBase to define an encoder, adecoder, and the output distribution</field></doc>
<doc><field name="id">10960</field><field name="title">google-vae-seq</field><field name="session">Usage</field><field name="sentence">The decoder and outputdistribution are packaged together into a DistModule  see: vaeseq/codec.py  vaeseq/codec.py  .The following model architectures are currently available  see: vaeseq/vae  vaeseq/vae  : see:  vaeseq/hparams.py  vaeseq/hparams.py</field></doc>
<doc><field name="id">10961</field><field name="title">google-vae-seq</field><field name="session">Usage</field><field name="sentence">You can select amongthe architectures above by setting the vae_type parameter.</field></doc>
<doc><field name="id">10962</field><field name="title">google-vae-seq</field><field name="session">Examples</field><field name="sentence">When you build and install this library via python setup.py install,the following example programs are installed as well</field></doc>
<doc><field name="id">10963</field><field name="title">google-vae-seq</field><field name="session">Examples</field><field name="sentence">See: vaeseq/examples  vaeseq/examples .</field></doc>
<doc><field name="id">10964</field><field name="title">google-vae-seq</field><field name="session">Text</field><field name="sentence">A character-sequence model that can be used to generate nonsense textor to evaluate the probability that a given piece of text was writtenby a given author.To train on Andrej Karpathy's "Tiny Shakespeare" dataset:After training has completed, you can generate text:Or you can tell how likely a piece of text is to be Shakespearean:</field></doc>
<doc><field name="id">10965</field><field name="title">google-vae-seq</field><field name="session">MIDI</field><field name="sentence">Similar to the text example above, but now modeling MIDI music specifically, piano rolls</field></doc>
<doc><field name="id">10966</field><field name="title">google-vae-seq</field><field name="session">MIDI</field><field name="sentence">Installed under vaeseq-midi</field></doc>
<doc><field name="id">10967</field><field name="title">google-vae-seq</field><field name="session">MIDI</field><field name="sentence">Don'texpect it to sound great.</field></doc>
<doc><field name="id">10968</field><field name="title">google-vae-seq</field><field name="session">Play</field><field name="sentence">An experiment modeling a game environment and using that to train anagent via policy gradient</field></doc>
<doc><field name="id">10969</field><field name="title">google-vae-seq</field><field name="session">Play</field><field name="sentence">This example uses the OpenAI Gymmodule</field></doc>
<doc><field name="id">10970</field><field name="title">google-vae-seq</field><field name="session">Play</field><field name="sentence">Installed under vaeseq-play.</field></doc>
<doc><field name="id">10971</field><field name="title">google-vae-seq</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10972</field><field name="title">google-varstruct</field><field name="session">Varstruct Overview</field><field name="sentence">Varstruct creates struct-like types with runtime-computed array sizes.Varstruct is a header-only library -build config, just add varstruct.h and varstruct_internal.h to your includes.C-style struct definitions may have internal array fields; however, these fielddeclarations must specify the size of each array at compile time so that thecompiler may reserve enough space when computing the offset of each member andthe size of the struct.Unfortunately, many I/O protocols use headers with internal arrays whose size isspecified or computed based on other header fields</field></doc>
<doc><field name="id">10973</field><field name="title">google-varstruct</field><field name="session">Varstruct Overview</field><field name="sentence">Therefore, code that parsesthese headers often has to perform error-prone manual pointer manipulation.Varstruct is a C++11 library that creates types that may contains internalarrays, and the sizes of these arrays may be passed in at runtime</field></doc>
<doc><field name="id">10974</field><field name="title">google-varstruct</field><field name="session">Varstruct Overview</field><field name="sentence">Varstructthen computes offsets to each member, and can also read and modify fields whengiven an input pointer</field></doc>
<doc><field name="id">10975</field><field name="title">google-varstruct</field><field name="session">Varstruct Overview</field><field name="sentence">Modification is performed via std::memcpy   to avoid memory alignment problemsthat would otherwise occur accessing misaligned fields -any padding of its own .You can run the tests by running the following in the repo root directory  youwill need Google Bazel installed :bazel test :varstruct_testSee the comments in varstruct.h for more information.Author: Caleb Raitto</field></doc>
<doc><field name="id">10976</field><field name="title">google-varstruct</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">10977</field><field name="title">google-vector_math.dart</field><field name="session">vector_math</field><field name="sentence"></field></doc>
<doc><field name="id">10978</field><field name="title">google-vector_math.dart</field><field name="session">Introduction</field><field name="sentence">A Vector math library for 2D and 3D applications.</field></doc>
<doc><field name="id">10979</field><field name="title">google-vector_math.dart</field><field name="session">Features</field><field name="sentence">1\</field></doc>
<doc><field name="id">10980</field><field name="title">google-vector_math.dart</field><field name="session">Features</field><field name="sentence">Add the following to your project's **pubspec.yaml*Read the  docs</field></doc>
<doc><field name="id">10981</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">1\</field></doc>
<doc><field name="id">10982</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Using the GLSL getter and setter syntax.import 'package:vector_math/vector_math.dart';void main   {  Vector3 x = new Vector3.zero  ; // Zero vector  Vector4 y = new Vector4.all 4.0 ; // Vector with 4.0 in all lanes  x.zyx = y.xzz; // Sets z,y,x the values in x,z,z2\</field></doc>
<doc><field name="id">10983</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Transforming a vector.import 'dart:math';import 'package:vector_math/vector_math.dart';void main   {  // Rotation of PI/2 degrees around the Y axis followed by a  // translation of  5.0, 2.0, 3.0</field></doc>
<doc><field name="id">10984</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Matrix4 T = new Matrix4.rotationY PI  Vector3 position = new Vector3 1.0, 1.0, 1.0 ;  // Transform position by T</field></doc>
<doc><field name="id">10985</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">T.transform3 position ;3\</field></doc>
<doc><field name="id">10986</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Invert a matriximport 'dart:math';import 'package:vector_math/vector_math.dart';void main   {  // Rotation of 90 degrees around the Y axis followed by a  // translation of  5.0, 2.0, 3.0</field></doc>
<doc><field name="id">10987</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Matrix4 T = new Matrix4.rotationY PI  T.invert  ;  // Invert just the rotation in T</field></doc>
<doc><field name="id">10988</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">T.invertRotation  ;4\</field></doc>
<doc><field name="id">10989</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Rotate a vector using a quaternionimport 'dart:math';import 'package:vector_math/vector_math.dart';void main   {  // The X axis</field></doc>
<doc><field name="id">10990</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Vector3 axis = new Vector3 1.0, 0.0, 0.0 ;  // 90 degrees</field></doc>
<doc><field name="id">10991</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">double angle = PI / 2.0;  // Quaternion encoding a 90 degree rotation along the X axis</field></doc>
<doc><field name="id">10992</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Quaternion q = new Quaternion.axisAngle axis, angle ;  // A point</field></doc>
<doc><field name="id">10993</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Vector3 point = new Vector3 1.0, 1.0, 1.0 ;  // Rotate point by q</field></doc>
<doc><field name="id">10994</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">q.rotate point ;5\</field></doc>
<doc><field name="id">10995</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Check if two axis aligned bounding boxes intersectimport 'package:vector_math/vector_math.dart';void main   {  // Define the first box with a minimum and a maximum</field></doc>
<doc><field name="id">10996</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Aabb2 aabbOne = new Aabb2.minMax new Vector2.zero  , new Vector2 4.0, 4.0  ;  // Define the second box  Aabb2 aabbTwo =  // Extend the second box to contain a point  aabbTwo.hullPoint new Vector2 3.0, 3.0  ;  // Check if the two boxes intersect, returns true in this case</field></doc>
<doc><field name="id">10997</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">bool intersect = aabbOne.intersectsWithAabb2 aabbTwo ;6\</field></doc>
<doc><field name="id">10998</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Check where a ray and a sphere intersectimport 'package:vector_math/vector_math.dart';void main   {  // Define a ray starting at the origin and going into positive x-direction</field></doc>
<doc><field name="id">10999</field><field name="title">google-vector_math.dart</field><field name="session">Examples</field><field name="sentence">Ray ray = new Ray.originDirection new Vector3.zero  , new Vector3 1.0, 0.0, 0.0  ;  // Defines a sphere with the center  5.0 0.0 0.0  and a radius of   Sphere sphere = new Sphere.centerRadius new Vector3 5.0, 0.0, 0.0 , 2.0 ;  // Checks if the ray intersect with the sphere and returns the distance of the  // intersection from the origin of the ray</field></doc>
