<doc><field name="id">999</field><field name="title">google-amss</field><field name="session">References</field><field name="sentence">2017</field></doc>
<doc><field name="id">1000</field><field name="title">google-amt-forensics</field><field name="session">AMT Forensics for Linux</field><field name="sentence">This README contains instructions on how to use the scripts in this repositoryto retrieve Intel AMT's Audit Log from a Linux machine without knowing theother pertinent information from Intel AMT via the ME Interface  MEI</field></doc>
<doc><field name="id">1001</field><field name="title">google-amt-forensics</field><field name="session">AMT Forensics for Linux</field><field name="sentence">TOC</field></doc>
<doc><field name="id">1002</field><field name="title">google-amt-forensics</field><field name="session">Prerequisites</field><field name="sentence">Linux machine with a provisioned AMTAMT yourself in 10 steps.Python & OpenWSMAN installedThe Local Manageability Service  LMS  for Linux needs to built and started:Download  lms-8.0.0-7.tar.gz Copy lms.patch from this repository into the unziped directory.Carry out the following commands:Note: On some machines, restarting lms and/or machine is required.If problems continue, re-try with **debugging*Once LMS is successfully running as per above, start a new shell:To login via  you canobtain password for the user **$$osAdmin*string to login.</field></doc>
<doc><field name="id">1003</field><field name="title">google-amt-forensics</field><field name="session">Info from all APIs</field><field name="sentence">The getallinfo.sh script under the all_api_calls directory willattempt to gather info from all available AMT WSMAN APIs</field></doc>
<doc><field name="id">1004</field><field name="title">google-amt-forensics</field><field name="session">Info from all APIs</field><field name="sentence">This can be usefulfor manual searching & inspiration during forensics.</field></doc>
<doc><field name="id">1005</field><field name="title">google-amt-forensics</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">1006</field><field name="title">google-androguard</field><field name="session">Androguard</field><field name="sentence"></field></doc>
<doc><field name="id">1007</field><field name="title">google-androguard</field><field name="session">Features</field><field name="sentence">Androguard is a full python tool to play with Android files.Androguard + tools: Anthony Desnos  desnos at t0t0.fr .DAD  DAD is A Decompiler : Geoffroy Gueguen  geoffroy dot gueguen at gmail dot com</field></doc>
<doc><field name="id">1008</field><field name="title">google-androguard</field><field name="session">##Stable release</field><field name="sentence">See the stable release here:All rights reserved.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS-IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.All rights reserved.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS-IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">1009</field><field name="title">google-android-arscblamer</field><field name="session">ArscBlamer</field><field name="sentence">ArscBlamer is a command-line tool that can parse an Android app's resources.arsc file and extract useful, actionable information about its contents.Features include:</field></doc>
<doc><field name="id">1010</field><field name="title">google-android-arscblamer</field><field name="session">Building</field><field name="sentence">To use ArscBlamer with relative file paths, build the jar with:</field></doc>
<doc><field name="id">1011</field><field name="title">google-android-arscblamer</field><field name="session">-\-type=configs</field><field name="sentence">Copyright 2016 Google Inc</field></doc>
<doc><field name="id">1012</field><field name="title">google-android-arscblamer</field><field name="session">-\-type=configs</field><field name="sentence">All Rights Reserved.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">1013</field><field name="title">google-android-arscblamer</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">1014</field><field name="title">google-android-classyshark</field><field name="session">Introduction</field><field name="sentence">Follow the shark on twitter  @ItsClassyshark ! alt text ClassyShark is a standalone binary inspection tool for Android developers</field></doc>
<doc><field name="id">1015</field><field name="title">google-android-classyshark</field><field name="session">Introduction</field><field name="sentence">It can reliably browse any Android executable and show important info such as class interfaces and members, dex counts and dependencies</field></doc>
<doc><field name="id">1016</field><field name="title">google-android-classyshark</field><field name="session">Introduction</field><field name="sentence">ClassyShark supports multiple formats including libraries  .dex, .aar, .so , executables  .apk, .jar, .class  and all Android binary XMLs: AndroidManifest, resources, layouts etc.</field></doc>
<doc><field name="id">1017</field><field name="title">google-android-classyshark</field><field name="session">Useful links</field><field name="sentence">To run, grab the  latest JAR and run java -jar ClassyShark.jar.</field></doc>
<doc><field name="id">1018</field><field name="title">google-android-classyshark</field><field name="session">Export data in text format</field><field name="sentence">Clone the repoOpen in your favorite IDE/editorBuild options:If you're running Arch Linux you can install the latest  prebuilt jar from the AUR</field></doc>
<doc><field name="id">1019</field><field name="title">google-android-classyshark</field><field name="session">Dependencies</field><field name="sentence">If you've found an error, please file an issue:submitting a pull request through GitHub.=======</field></doc>
<doc><field name="id">1020</field><field name="title">google-android-cuttlefish</field><field name="session">Virtual Device for Android host-side utilities</field><field name="sentence">This repository holds source for Debian packages that prepare a hostto boot cuttlefish, an Android device that is designed to run on GoogleCompute Engine.</field></doc>
<doc><field name="id">1021</field><field name="title">google-android-gradle-dsl</field><field name="session">Reference for latest plugin version</field><field name="sentence">All versions   API Javadoc</field></doc>
<doc><field name="id">1022</field><field name="title">google-android-gradle-dsl</field><field name="session">Android Gradle Plugin DSL Reference</field><field name="sentence">This repository contains HTML documentation generated from Android Gradle Pluginsource code</field></doc>
<doc><field name="id">1023</field><field name="title">google-android-gradle-dsl</field><field name="session">Android Gradle Plugin DSL Reference</field><field name="sentence">For instructions on how to check out the plugin source code, see the Building the Android Gradle Plugin If you find errors or missing parts, please  file a bug in the Android issuetracker or open an issue in this GitHub repo.</field></doc>
<doc><field name="id">1024</field><field name="title">google-android-management-api-samples</field><field name="session">Android Management API Samples</field><field name="sentence">This repository contains Python notebooks for getting started with the Android Management API You can run the notebooks in  Google Colab using the following links:</field></doc>
<doc><field name="id">1025</field><field name="title">google-android-transition-examples</field><field name="session">Android Transition Examples</field><field name="sentence">This repository holds various Android transition example projects.**This is not an officially supported Google product.**</field></doc>
<doc><field name="id">1026</field><field name="title">google-android-transition-examples</field><field name="session">Licence</field><field name="sentence">Apache License Version 2.0</field></doc>
<doc><field name="id">1027</field><field name="title">google-android-ui-toolkit-demos</field><field name="session">Disclaimers</field><field name="sentence">**This is not an official Google product.**</field></doc>
<doc><field name="id">1028</field><field name="title">google-angle</field><field name="session">ANGLE</field><field name="sentence">The goal of ANGLE is to allow users of multiple operating systems to seamlessly run WebGL and otherOpenGL ES content by translating OpenGL ES API calls to one of the hardware-supported APIs availablefor that platform</field></doc>
<doc><field name="id">1029</field><field name="title">google-angle</field><field name="session">ANGLE</field><field name="sentence">ANGLE currently provides translation from OpenGL ES 2.0 and 3.0 to desktopOpenGL, OpenGL ES, Direct3D 9, and Direct3D Support for translation from OpenGL ES to Vulkan isunderway, and future plans include compute shader support  ES 3.1  and MacOS support.</field></doc>
<doc><field name="id">1030</field><field name="title">google-angle</field><field name="session">Level of OpenGL ES support via backing renderers</field><field name="sentence">|----------------|:-------------:|:----------------:|:--------------:|:-------------:|:-------------:|| OpenGL ES 2.0  || OpenGL ES 3.0  || OpenGL ES 3.1  |</field></doc>
<doc><field name="id">1031</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">|------------:|:--------------:|:--------------:|:-------------:|:-----------:|:-----------:|| Windows| Linux| Mac OS X| Chrome OS   || AndroidANGLE v1.0.772 was certified compliant by passing the ES 2.0.3 conformance tests in October ANGLE also provides an implementation of the EGL 1.4 specification.ANGLE is used as the default WebGL backend for both Google Chrome and Mozilla Firefox on Windowsplatforms</field></doc>
<doc><field name="id">1032</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">Chrome uses ANGLE for all graphics rendering on Windows, including the acceleratedCanvas2D implementation and the Native Client sandbox environment.Portions of the ANGLE shader compiler are used as a shader validator and translator by WebGLimplementations across multiple platforms</field></doc>
<doc><field name="id">1033</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">It is used on Mac OS X, Linux, and in mobile variants ofthe browsers</field></doc>
<doc><field name="id">1034</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">Having one shader validator helps to ensure that a consistent set of GLSL ES shadersare accepted across browsers and platforms</field></doc>
<doc><field name="id">1035</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">The shader translator can be used to translate shadersto other shading languages, and to optionally apply shader modifications to work around bugs orquirks in the native graphics drivers</field></doc>
<doc><field name="id">1036</field><field name="title">google-angle</field><field name="session">Platform support via backing renderers</field><field name="sentence">The translator targets Desktop GLSL, Direct3D HLSL, and evenESSL for native GLES2 platforms.</field></doc>
<doc><field name="id">1037</field><field name="title">google-angle</field><field name="session">Sources</field><field name="sentence">ANGLE repository is hosted by Chromium project and can be browsed online  or cloned with</field></doc>
<doc><field name="id">1038</field><field name="title">google-angle</field><field name="session">Building</field><field name="sentence">View the  Dev setup instructions  doc/DevSetup.md</field></doc>
<doc><field name="id">1039</field><field name="title">google-angle</field><field name="session">Building</field><field name="sentence">For generating a Windows Store version of ANGLE view the  Windows Store instructions  doc/BuildingAngleForWindowsStore.md</field></doc>
<doc><field name="id">1040</field><field name="title">google-angular-a11y-workshop</field><field name="session">AngularA11yWorkshop</field><field name="sentence">This project was generated with  Angular CLI  version 6.0.</field></doc>
<doc><field name="id">1041</field><field name="title">google-angular-a11y-workshop</field><field name="session">About</field><field name="sentence">A 4 hour deep dive interactive workshop to give developers the tools they need to make their Angular applications more inclusive and accessible to those with a wide variety of disabilities.</field></doc>
<doc><field name="id">1042</field><field name="title">google-angular-a11y-workshop</field><field name="session">Source Code Headers</field><field name="sentence">Every file containing source code must include copyright and licenseinformation</field></doc>
<doc><field name="id">1043</field><field name="title">google-angular-a11y-workshop</field><field name="session">Source Code Headers</field><field name="sentence">This includes any JS/CSS files that you might be serving out tobrowsers</field></doc>
<doc><field name="id">1044</field><field name="title">google-angular-a11y-workshop</field><field name="session">Source Code Headers</field><field name="sentence">This is to help well-intentioned people avoid accidental copying thatdoesn't comply with the license</field></doc>
<doc><field name="id">1045</field><field name="title">google-angular-a11y-workshop</field><field name="session">Source Code Headers</field><field name="sentence">Apache header:</field></doc>
<doc><field name="id">1046</field><field name="title">google-angular-a11y-workshop</field><field name="session">Development server</field><field name="sentence">Run ng serve for a dev server</field></doc>
<doc><field name="id">1047</field><field name="title">google-angular-a11y-workshop</field><field name="session">Development server</field><field name="sentence">Navigate to</field></doc>
<doc><field name="id">1048</field><field name="title">google-angular-a11y-workshop</field><field name="session">Development server</field><field name="sentence">The app will automatically reload if you change any of the source files.</field></doc>
<doc><field name="id">1049</field><field name="title">google-angular-a11y-workshop</field><field name="session">Code scaffolding</field><field name="sentence">Run ng generate component component-name to generate a new component</field></doc>
<doc><field name="id">1050</field><field name="title">google-angular-a11y-workshop</field><field name="session">Code scaffolding</field><field name="sentence">You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.</field></doc>
<doc><field name="id">1051</field><field name="title">google-angular-a11y-workshop</field><field name="session">Build</field><field name="sentence">Run ng build to build the project</field></doc>
<doc><field name="id">1052</field><field name="title">google-angular-a11y-workshop</field><field name="session">Build</field><field name="sentence">The build artifacts will be stored in the dist/ directory</field></doc>
<doc><field name="id">1053</field><field name="title">google-angular-a11y-workshop</field><field name="session">Build</field><field name="sentence">Use the --prod flag for a production build.</field></doc>
<doc><field name="id">1054</field><field name="title">google-angular-a11y-workshop</field><field name="session">Running unit tests</field><field name="sentence">Run ng test to execute the unit tests via  Karma</field></doc>
<doc><field name="id">1055</field><field name="title">google-angular-a11y-workshop</field><field name="session">Running end-to-end tests</field><field name="sentence">Run ng e2e to execute the end-to-end tests via  Protractor</field></doc>
<doc><field name="id">1056</field><field name="title">google-angular-a11y-workshop</field><field name="session">Further help</field><field name="sentence">To get more help on the Angular CLI use ng help or go check out the  Angular CLI README</field></doc>
<doc><field name="id">1057</field><field name="title">google-angular_cli</field><field name="session">AngularDart CLI</field><field name="sentence">! Pub Package    A command line interface for  AngularDart  webdev_angular .It can scaffold a skeleton AngularDart project, component, and test with page object  page_object .</field></doc>
<doc><field name="id">1058</field><field name="title">google-angular_cli</field><field name="session">Installation</field><field name="sentence">To install:For example:</field></doc>
<doc><field name="id">1059</field><field name="title">google-angular_cli</field><field name="session">Generating AngularDart project</field><field name="sentence">Command following will assume that you are in the root directory ofthe project.</field></doc>
<doc><field name="id">1060</field><field name="title">google-angular_cli</field><field name="session">Generating component</field><field name="sentence">This command will generate component under folder lib/.You can use option -p to change the folder.</field></doc>
<doc><field name="id">1061</field><field name="title">google-angular_cli</field><field name="session">Generating test</field><field name="sentence">and the other one is test file.Test generated is using  angular_test  pub_angular_test and  test  pub_test  package.Use command webdev_angular :  page_object :  pub_angular_test :  pub_test :</field></doc>
<doc><field name="id">1062</field><field name="title">google-anodyne</field><field name="session">Anodyne: Type analysis of dynamic languages</field><field name="sentence">NOTE: This is not an official Google product.Anodyne is an open-source experimental project to implement a type analysis toolfor commonly used manifestly-typed imperative programming languages.</field></doc>
<doc><field name="id">1063</field><field name="title">google-anodyne</field><field name="session">Building</field><field name="sentence">Anodyne can be built with Bazel</field></doc>
<doc><field name="id">1064</field><field name="title">google-anodyne</field><field name="session">Building</field><field name="sentence">There are some additional dependencies thatare not managed by Bazel that you must provide</field></doc>
<doc><field name="id">1065</field><field name="title">google-anodyne</field><field name="session">Building</field><field name="sentence">They may be hardto these locations:</field></doc>
<doc><field name="id">1066</field><field name="title">google-aperture_supervision</field><field name="session">Aperture Supervision for Monocular Depth Estimation</field><field name="sentence">*Aperture Supervision for Monocular Depth Estimation*   Pratul P</field></doc>
<doc><field name="id">1067</field><field name="title">google-aperture_supervision</field><field name="session">Aperture Supervision for Monocular Depth Estimation</field><field name="sentence">Srinivasan, Rahul Garg, Neal Wadhwa, Ren Ng, Jonathan T</field></doc>
<doc><field name="id">1068</field><field name="title">google-aperture_supervision</field><field name="session">Aperture Supervision for Monocular Depth Estimation</field><field name="sentence">Barron  Computer Vision and Pattern Recognition, 2018Running this code requires the dataset from  Srinivasan 2017 This code is not quite the same as what was used in the paper, as the bilateral solver implementation used in the paper is not included in this open source release</field></doc>
<doc><field name="id">1069</field><field name="title">google-aperture_supervision</field><field name="session">Aperture Supervision for Monocular Depth Estimation</field><field name="sentence">Comments in the code indicate where the solver used to be.</field></doc>
<doc><field name="id">1070</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">Google APIs Code GeneratorAugust 20, 2013  documents</field></doc>
<doc><field name="id">1071</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">It builds a rich  but language neutral  model of the API and  then invokes a language specific backend to emit the library</field></doc>
<doc><field name="id">1072</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">The language  generators are template driven, so it is easy for a developer knowning  language X to write templates for code in X, without having to learn much  Python</field></doc>
<doc><field name="id">1073</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">and Dart</field></doc>
<doc><field name="id">1074</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">There may be multiple variations of each language</field></doc>
<doc><field name="id">1075</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">For each,  the variant used by default  typically also named "default"  matches the  head of the respective base client libraries.Python 2.7 is required</field></doc>
<doc><field name="id">1076</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">Python3 is not supported.Everything can be installed quickly with easy_install or pip</field></doc>
<doc><field name="id">1077</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">E.g.:The following dependencies will be installed:To run the library generator, use the "generate_library" script</field></doc>
<doc><field name="id">1078</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">This isnormally what you'd want to do</field></doc>
<doc><field name="id">1079</field><field name="title">google-apis-client-generator</field><field name="session">limitations under the License.</field><field name="sentence">E.g.:To expand arbitrary templates, the "expand_templates" script is also available:  Jacob Smullyan  smulloni@google.com</field></doc>
<doc><field name="id">1080</field><field name="title">google-appengine-codiad</field><field name="session">Codiad Managed VMs Docker Image</field><field name="sentence">! Screenshot of Codiad running on MVMs  /codiad-screenshot.png?raw=true "Screenshot of Codiad running on MVMs" This repo defines a Docker Image that can be used to run Codiad on App Engine Managed VMs.</field></doc>
<doc><field name="id">1081</field><field name="title">google-appengine-codiad</field><field name="session">Codiad</field><field name="sentence">The image is using a heavily customized version of Codiad  whichresides in codiad/third_party/codiad directory.</field></doc>
<doc><field name="id">1082</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">In order to run the IDE instances for developers in a cloud project, there is an IDE proxy runningon the managed VM which routes the requests to the individual Codiad containers for each developerbased on their email</field></doc>
<doc><field name="id">1083</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">The IDE proxy is written in nodejs</field></doc>
<doc><field name="id">1084</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">It is responsible for creating a Codiadcontainer for a user as soon as they connect to the IDE</field></doc>
<doc><field name="id">1085</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">Thereafter all of the request coming fromthat user will be forwarded to the respective container</field></doc>
<doc><field name="id">1086</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">The authentication is done throughappengine</field></doc>
<doc><field name="id">1087</field><field name="title">google-appengine-codiad</field><field name="session">IDE Proxy</field><field name="sentence">Proxy code can be found under ide-proxy directory.</field></doc>
<doc><field name="id">1088</field><field name="title">google-appengine-codiad</field><field name="session">Building a dev image to test your changes to IDE</field><field name="sentence">In order to do so, please see the README.md file in codiad directory.</field></doc>
<doc><field name="id">1089</field><field name="title">google-appengine-codiad</field><field name="session">Deploying to a Google Cloud project</field><field name="sentence">Please see the instructions in ide-proxy directory.</field></doc>
<doc><field name="id">1090</field><field name="title">google-appengine-codiad</field><field name="session">How does it work?</field><field name="sentence">The IDE is deployed as a Managed VM  MVM  module into a cloud project</field></doc>
<doc><field name="id">1091</field><field name="title">google-appengine-codiad</field><field name="session">How does it work?</field><field name="sentence">This module is responsiblefor handling requests coming from different users of the IDE and dispatching them to the rightCodiad container</field></doc>
<doc><field name="id">1092</field><field name="title">google-appengine-codiad</field><field name="session">How does it work?</field><field name="sentence">The general architecture of the system is as follows:routing requests to them based on user's email address which is registered with the cloud project.</field></doc>
<doc><field name="id">1093</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">As can be seen in the above diagram, the authentication for each user is done by MVM</field></doc>
<doc><field name="id">1094</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">Users areauthenticated with their cloud credential for the cloud project</field></doc>
<doc><field name="id">1095</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">The IDE is accessed by all usersusing the same secure URL, e.g</field></doc>
<doc><field name="id">1096</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">The Codiad containers are run by project's service account and not by user's credential</field></doc>
<doc><field name="id">1097</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">No user'scredential is stored anywhere in the container by the system.Codiad containers for all users are run in the same machine and there is no security boundaryestablished for them</field></doc>
<doc><field name="id">1098</field><field name="title">google-appengine-codiad</field><field name="session">Security</field><field name="sentence">Hence a user A's container could potentially access user B's container.</field></doc>
<doc><field name="id">1099</field><field name="title">google-appengine-codiad</field><field name="session">Running Codiad Locally</field><field name="sentence">It is possible to run Codiad locally on a machine without using the IDE proxy and MVM hosting</field></doc>
<doc><field name="id">1100</field><field name="title">google-appengine-codiad</field><field name="session">Running Codiad Locally</field><field name="sentence">Inorder to do so, see the README.md file in codiad directory.</field></doc>
<doc><field name="id">1101</field><field name="title">google-appengine-phabricator</field><field name="session">Phabricator-on-App-Engine Docker Image</field><field name="sentence">This repo defines a Docker Image that can be used to run Phabricator on App Engine Managed VMs.</field></doc>
<doc><field name="id">1102</field><field name="title">google-appengine-phabricator</field><field name="session">Getting the code</field><field name="sentence">Since Phabricator and its dependencies are fetched as git submodules, you have to include themwhen checking out the code:</field></doc>
<doc><field name="id">1103</field><field name="title">google-appengine-phabricator</field><field name="session">Installing</field><field name="sentence">The source code includes a script named "install.sh", which deploys the image to a Managed VM.Assuming that you have your GCP project's name stored in the environment variable "PROJECT", runthe following:</field></doc>
<doc><field name="id">1104</field><field name="title">google-appengine-phabricator</field><field name="session">Phabricator version</field><field name="sentence">The image is built using a fixed version of the source code for Phabricator and itsdependencies  libphutil and arcanist</field></doc>
<doc><field name="id">1105</field><field name="title">google-appengine-phabricator</field><field name="session">Phabricator version</field><field name="sentence">These versions are defined by the git submodulesunder the "third_party" directory named "arcanist", "libphutil", and "phabricator".</field></doc>
<doc><field name="id">1106</field><field name="title">google-appengine-phabricator</field><field name="session">Backups</field><field name="sentence">This image automatically backs up the contents of the /var/repo directory to the project's defaultGoogle Cloud Storage bucket</field></doc>
<doc><field name="id">1107</field><field name="title">google-appengine-phabricator</field><field name="session">Backups</field><field name="sentence">Backups are performed every 60 seconds, and on startup the imageautomatically tries to restore from the most recent backup  if one exists .Note that this means you will be billed by GCS for the storage of this backup</field></doc>
<doc><field name="id">1108</field><field name="title">google-appengine-phabricator</field><field name="session">Backups</field><field name="sentence">To help minimizethis, the image automatically deletes the previous backup after generating a new one.</field></doc>
<doc><field name="id">1109</field><field name="title">google-appengine-phabricator</field><field name="session">Git/Phabricator mirror</field><field name="sentence">This image includes a daemon which mirrors code reviews to and from git-notes That allows the Phabricator instance to integrate with the git-appraise command line tool  andmakes the use of the arcanist command line tool optional.Operations performed by the mirror daemon show up as the "git-mirror" bot, which is automatically</field></doc>
<doc><field name="id">1110</field><field name="title">google-appengine-phabricator</field><field name="session">Git authentication</field><field name="sentence">This image includes a git credential helper that automatically authenticates access to Google Cloud Repositories  usingthe service account of the VM  hence the requirement for the projecthosting scope .</field></doc>
<doc><field name="id">1111</field><field name="title">google-appengine-phabricator</field><field name="session">Prerequisites</field><field name="sentence">The built image requires an external MySQL instance, and must be run inside of a GCE VM withthe "" service account scope.There are four environment variables that must be passed to a Docker container running the image: "SQL_HOST": The IPv4 address of the MySQL instance "SQL_PASS": The root password for the MySQL instance "PHABRICATOR_BASE_URI": The URL of the Phabricator instance  for linking back to itself  "ALTERNATE_FILE_DOMAIN": A second URL for the Phabricator instance used for linking to untrusted user content</field></doc>
<doc><field name="id">1112</field><field name="title">google-appengine-phabricator</field><field name="session">Building a dev image to test your changes</field><field name="sentence">The image is built using Make</field></doc>
<doc><field name="id">1113</field><field name="title">google-appengine-phabricator</field><field name="session">Building a dev image to test your changes</field><field name="sentence">The default target builds a new Docker image andtags it with the name "google/phabricator-appengine":You can deploy this locally-built image to a test project using the "deploy" target:</field></doc>
<doc><field name="id">1114</field><field name="title">google-appengine-phabricator</field><field name="session">Building a testing or stable image</field><field name="sentence">*Note that these two rules require permissions that are restricted to the core developer team.*The makefile also defines rules for creating a shared testing image, and uploading it to gcr.io.:..</field></doc>
<doc><field name="id">1115</field><field name="title">google-appengine-phabricator</field><field name="session">Building a testing or stable image</field><field name="sentence">and one for labelling the current "testing" image as "latest"  which denotes our stable image :</field></doc>
<doc><field name="id">1116</field><field name="title">google-appengine-phabricator</field><field name="session">Updating the Phabricator version</field><field name="sentence">This step should be taken with care.The git-phabricator-mirror tool included in this image calls into the conduit APIs provided byPhabricator</field></doc>
<doc><field name="id">1117</field><field name="title">google-appengine-phabricator</field><field name="session">Updating the Phabricator version</field><field name="sentence">As such, any breaking changes to those APIs need to be preceded by correspondingupdates to the mirror's use of those APIs.This will result in pending changes that have to be committed  and pushed  which update thefixed versions for those submodules.</field></doc>
<doc><field name="id">1118</field><field name="title">google-apps_script_tools</field><field name="session">Apps Script Tools</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">1119</field><field name="title">google-apps_script_tools</field><field name="session">Apps Script Tools</field><field name="sentence">It is not supported by the Dart team.This package is still in an experimental state.This package provides tools for using dart2js-compiled programs as Google AppsThe upload program uploads the resulting gs script to Google Drive.The main program makes the development process easier by automaticallyusing those two tools whenever the input JS file is changed.See also  clasp  for a similar tool that isn'tspecialized for Dart, but supports more operations.</field></doc>
<doc><field name="id">1120</field><field name="title">google-apps_script_tools</field><field name="session">Usage</field><field name="sentence">The most common use case is to watch the output file of a dart2jscompilation and upload it as Google Apps script whenever it changes.This is accomplished with the main-script  aka apps_script_watch whenenabled through pub global activate .In its simplest form it just needs two arguments: the input file anda Google Drive destination</field></doc>
<doc><field name="id">1121</field><field name="title">google-apps_script_tools</field><field name="session">Usage</field><field name="sentence">Every time the input file changes  and alsoinitially at startup  it converts the JS file into a validGoogle Apps script  prefixing it with a necessary preamble  and thenuploads it to Google drive at the given location</field></doc>
<doc><field name="id">1122</field><field name="title">google-apps_script_tools</field><field name="session">Usage</field><field name="sentence">This requires anOAuth authentication .Similar to /*Note that Google Apps script must be compiled with the --cps flag of</field></doc>
<doc><field name="id">1123</field><field name="title">google-apps_script_tools</field><field name="session">Gsify</field><field name="sentence">The gsify executable converts a dart2js-compiled program into a validGoogle Apps script.It prefixes the necessary preamble and optionally add some stub functions,and /The input file must be the output of dart2js with the --cps flag.The following example adds the</field></doc>
<doc><field name="id">1124</field><field name="title">google-apps_script_tools</field><field name="session">Upload</field><field name="sentence">upload takes a valid Google Apps script and uploads it to Google Drive.If there exists already a Google Apps script at the provided destinationreplaces the content with the given input script</field></doc>
<doc><field name="id">1125</field><field name="title">google-apps_script_tools</field><field name="session">Upload</field><field name="sentence">This only works if theexisting Google Apps script only contains one source file.The destination may be prefixed with folders  which must exist .This script uses Google APIs and thus requires an OAuth authenticationwhich is cached for future uses.</field></doc>
<doc><field name="id">1126</field><field name="title">google-apps_script_tools</field><field name="session">Run</field><field name="sentence">run executes the uploaded script</field></doc>
<doc><field name="id">1127</field><field name="title">google-apps_script_tools</field><field name="session">Run</field><field name="sentence">Scripts must be run in the sameGoogle Cloud project as the Google API that makes the invocation</field></doc>
<doc><field name="id">1128</field><field name="title">google-apps_script_tools</field><field name="session">Run</field><field name="sentence">Thismeans that the request to run the script must use a clientId/Secret thatis provided by the user.See below  "Remote Script Execution"  for detailed instructions on how toset this up.</field></doc>
<doc><field name="id">1129</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">Whenever the Google Apps Script service needs to call into the provided scriptit needs to statically see the target function</field></doc>
<doc><field name="id">1130</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">That is, the providedJavaScript must contain a function with the given name</field></doc>
<doc><field name="id">1131</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">For example,Spreadsheet Addons that want to add a menu entry must have a statically visibleonOpen function</field></doc>
<doc><field name="id">1132</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">The output of dart2js avoids modifying the global environmentand the current JS interop functionality does not give any means to export aDart function</field></doc>
<doc><field name="id">1133</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">To work around this limitation, one can use a stub function thatis then overwritten from within the Dart program.Concretely, running main or gsify with -s onOpen will add the followingJavaScript function to the generated .gs:it is invoked: dart@JS  library main;import 'package:js/js.dart';@JS  external set onOpen value ;void onOpenDart e  {  // Run on-open things like adding a menu.main   {  onOpen = allowInterop onOpenDart ;This  or a similar setup  must be done for any function that the Apps frameworkwants to use as an entry point</field></doc>
<doc><field name="id">1134</field><field name="title">google-apps_script_tools</field><field name="session">Stub Functions</field><field name="sentence">This includes simple triggers  see the  menu entries,and callbacks from html services</field></doc>
<doc><field name="id">1135</field><field name="title">google-apps_script_tools</field><field name="session">Using the Script Editor</field><field name="sentence">The easiest way to run a script is to upload it  using one of the providedtools , and then run a function from within the Script Editor.The Script Editor is not connected by default in Google Drive</field></doc>
<doc><field name="id">1136</field><field name="title">google-apps_script_tools</field><field name="session">Using the Script Editor</field><field name="sentence">If theuploaded script doesn't open on double-click: go to "New" -> "More" -> "Connect more apps" and connect "Google Apps Script".The Editor allows to run  statically visible  functions directly.</field></doc>
<doc><field name="id">1137</field><field name="title">google-apps_script_tools</field><field name="session">Bound Scripts / Addons</field><field name="sentence">Scripts that should be run on an opened document/spreadsheet are called"bound scripts" or "addons".The Script Editor has a convenient 'Test as add-on...' functionality whichopens a file with the script running as add-on.</field></doc>
<doc><field name="id">1138</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">Instead of using Script Editor's "Test as add-on...", one can also create abound script directly and then use the uploaded script as a shared library</field></doc>
<doc><field name="id">1139</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">Thisapproach has the advantage that the script will also be loaded when the documentis opened outside the editor</field></doc>
<doc><field name="id">1140</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">It also makes it possible for other users to usethe script without needing to publish it.Create a saved version of the script you want to use as a shared library</field></doc>
<doc><field name="id">1141</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">File -> Manage versions .Create a bound script: "Tools" -> "Script Editor" from within a openfile  document, spreadsheet, ..</field></doc>
<doc><field name="id">1142</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">.Save the project and give it a name.Link the uploaded script as shared library: Resources -> Libraries -> Add a library</field></doc>
<doc><field name="id">1143</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">Don't forget to enable the "Development mode"</field></doc>
<doc><field name="id">1144</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">This way uploads to the script are  immediately visible to you  but not other users .Once that's in place, one just needs to forward functions to the shared library.For example, the following bound script forwards the onOpen and hellofunctions from the bound script to the shared library  imported with theidentifier "dart" :possible to create menu entries that call immediately into the sharedlibrary</field></doc>
<doc><field name="id">1145</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">In this case, the function does not even need a stub.For development it's thus convenient to forward the prefix to Dart'sonOpen function:without needing to deal with forwarders or stub functions</field></doc>
<doc><field name="id">1146</field><field name="title">google-apps_script_tools</field><field name="session">As a Shared Library</field><field name="sentence">dart@JS  external set onOpen value ;@JS  external set hello value ;void onOpenDart e,  String prefix   {  if  prefix == null  {  } else {  }  SpreadsheetAppvoid helloDart   {  SpreadsheetApp.getUi  .alert "Hello World" ;main   {  onOpen = allowInterop onOpenDart ;  hello = allowInterop helloDart ;</field></doc>
<doc><field name="id">1147</field><field name="title">google-apps_script_tools</field><field name="session">Using Google APIs</field><field name="sentence">Google Apps script that have been uploaded to Google Drive can be invoked withGoogle API calls</field></doc>
<doc><field name="id">1148</field><field name="title">google-apps_script_tools</field><field name="session">Using Google APIs</field><field name="sentence">The  Executing Functions using the Apps Script API Guide explains how to remotely execute a specified Apps Script function.Fundamentally, the call needs the following information:However, the scripts.run API has one important restriction: the scriptbeing called and the calling application must share a Cloud PlatformOne can either use the default one created for each script, or move thescript to a different project:The walk-through below details the necessary steps.</field></doc>
<doc><field name="id">1149</field><field name="title">google-apps_script_tools</field><field name="session">Walk-throughs</field><field name="sentence">This section step-by-step instructions on common tasks.For all examples we assume a google-apps and js package:name: exampledescription: Example for Google Apps scripting in Dart.version: 0.0.1</field></doc>
<doc><field name="id">1150</field><field name="title">google-apps_script_tools</field><field name="session">#homepage:</field><field name="sentence">author:   sdk: '>=1.20.1  More -> Connect more appsSearch for Google Apps Script and connect it.In the editor select "create" in the listed functions and press run:! Image of selecting create  pics/select_create.png The first time the script is run it will ask for permissions, and thencreate a new Google Docs document.</field></doc>
<doc><field name="id">1151</field><field name="title">google-apps_script_tools</field><field name="session">Hello World Addon</field><field name="sentence">In this section we create a script that is bound to a document.First create a new spreadsheet</field></doc>
<doc><field name="id">1152</field><field name="title">google-apps_script_tools</field><field name="session">Hello World Addon</field><field name="sentence">Alternatively you can create a Google Docsdocument, but you would need to change a few lines below.Create the following bin/sheet.dart program: dart@JS  library hello_docs;import 'package:js/js.dart';import 'package:google_apps/spreadsheet.dart';@JS  external set sayHello value ;@JS  external set onOpen value ;void sayHelloDart   {  SpreadsheetApp.getUi  .alert "Hello world" ;void onOpenDart e  {  SpreadsheetAppmain List arguments  {  onOpen = allowInterop onOpenDart ;  sayHello = allowInterop sayHelloDart ;Compile it with dart2js:Upload it to Google Drive:Open the uploaded script in the Apps Script Editor</field></doc>
<doc><field name="id">1153</field><field name="title">google-apps_script_tools</field><field name="session">Hello World Addon</field><field name="sentence">If a double-clickon the script doesn't work  "No preview available"  see the first example.In the editor run the application by testing it as an addon:! Image of testing as addon  pics/test_as_addon.png Note that the script will add an entry in the Add-ons menu</field></doc>
<doc><field name="id">1154</field><field name="title">google-apps_script_tools</field><field name="session">Hello World Addon</field><field name="sentence">Ifthe script had been run as a bound script, it would add the menu directlyinto the main menu</field></doc>
<doc><field name="id">1155</field><field name="title">google-apps_script_tools</field><field name="session">Hello World Addon</field><field name="sentence">We can achieve this effect by using the uploadedcode as a shared library.</field></doc>
<doc><field name="id">1156</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">Go back to the script editor from where we launched the add-on test.Save a new version: File -> Manage versionsFind the script-id</field></doc>
<doc><field name="id">1157</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">It's available in the URL, or in "File" -> "Project properties".Now go back to the spreadsheet where we want to run this script in.From within the spreadsheet open the Script editor  "Tools" -> "Script Editor" .Copy the following code into the editor  usually "Code.gs" :Go into "Resources" -> "Libraries".Add a new library, using the script-id we retrieved earlier.Use the latest version.Verify that the "Identifier" is correctly set to "hello"</field></doc>
<doc><field name="id">1158</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">You can alsouse a different identifier, but then you need to update "Code.gs" .Enable "Development mode"</field></doc>
<doc><field name="id">1159</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">This way a new upload of the apps script isimmediately used</field></doc>
<doc><field name="id">1160</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">Note, however, that other users only see the selectedsaved version.Open the spreadsheet again  or reload it</field></doc>
<doc><field name="id">1161</field><field name="title">google-apps_script_tools</field><field name="session">Shared Library</field><field name="sentence">It should now add a new menuentry "from dart".</field></doc>
<doc><field name="id">1162</field><field name="title">google-apps_script_tools</field><field name="session">Remote Script Execution</field><field name="sentence">Start by finishing the "Create Document" tutorial above</field></doc>
<doc><field name="id">1163</field><field name="title">google-apps_script_tools</field><field name="session">Remote Script Execution</field><field name="sentence">You should nowhave a script "docs_create" in Google Drive.Open it with the Script Editor.First retrieve the project id and the necessary scopes for this project:Publish the script so that the Script's API can find it:"Publish" -> "Deploy as API executable".Now go to "Resources" -> "Cloud Platform project".In the opened window, the editor shows the project the script is currentlyassociated with</field></doc>
<doc><field name="id">1164</field><field name="title">google-apps_script_tools</field><field name="session">Remote Script Execution</field><field name="sentence">Click on the link</field></doc>
<doc><field name="id">1165</field><field name="title">google-apps_script_tools</field><field name="session">Remote Script Execution</field><field name="sentence">This brings you to the"Google Cloud Platform" page.In the "Getting Started" section click on"Enable APIs and get credentials like keys".Enable the Scripting API:Use those two strings as follows to run the script remotely from thecommand line:If there are multiple scopes, each of them must have its own "-s"parameter to the run script.If the script takes parameters, they can be added after the function name.</field></doc>
<doc><field name="id">1166</field><field name="title">google-apps_script_tools</field><field name="session">Features and bugs</field><field name="sentence">Please file feature requests and bugs at the  issue tracker  tracker</field></doc>
<doc><field name="id">1167</field><field name="title">google-apps_script_tools</field><field name="session">Features and bugs</field><field name="sentence">tracker :</field></doc>
<doc><field name="id">1168</field><field name="title">google-arc-jazzy-linter</field><field name="session">jazzy-linter</field><field name="sentence">Use  jazzy  to lint your Objective-C and Swift documentationwith  Phabricator  arc command line tool.</field></doc>
<doc><field name="id">1169</field><field name="title">google-arc-jazzy-linter</field><field name="session">Features</field><field name="sentence">Identify missing documentation for Objective-C and Swift APIs.</field></doc>
<doc><field name="id">1170</field><field name="title">google-arc-jazzy-linter</field><field name="session">Installation</field><field name="sentence">Jazzy 0.6.0 or higher is required.Verify your version by running:</field></doc>
<doc><field name="id">1171</field><field name="title">google-arc-jazzy-linter</field><field name="session">Project-specific installation</field><field name="sentence">You can add this repository as a git submodule</field></doc>
<doc><field name="id">1172</field><field name="title">google-arc-jazzy-linter</field><field name="session">Project-specific installation</field><field name="sentence">Add a path to the submodule in your .arcconfiglike so:arcanist can load modules from an absolute path</field></doc>
<doc><field name="id">1173</field><field name="title">google-arc-jazzy-linter</field><field name="session">Project-specific installation</field><field name="sentence">But it also searches for modules in a directoryup one level from itself.You can clone this repository to the same directory where arcanist and libphutil are located.In the end it will look like this:To use the linter you must register it in your .arclint file.of multiple parts then you may wish to create multiple .jazzy.yaml files</field></doc>
<doc><field name="id">1174</field><field name="title">google-arc-jazzy-linter</field><field name="session">Project-specific installation</field><field name="sentence">Place the .jazzy.yamleither in the same directory as your source or in a parent directory.Example .jazzy.yaml for an Objective-C library:Licensed under the Apache 2.0 license</field></doc>
<doc><field name="id">1175</field><field name="title">google-arc-jazzy-linter</field><field name="session">Project-specific installation</field><field name="sentence">See LICENSE for details.</field></doc>
<doc><field name="id">1176</field><field name="title">google-arc-proselint</field><field name="session">prose-lint for arc</field><field name="sentence">prose-lint is a lint engine for use with  Phabricator  arc command line tool.It uses the open source  proselint  tool.</field></doc>
<doc><field name="id">1177</field><field name="title">google-arc-proselint</field><field name="session">Features</field><field name="sentence">prose-lint generates advice messages.Example output:</field></doc>
<doc><field name="id">1178</field><field name="title">google-arc-proselint</field><field name="session">Install proselint</field><field name="sentence">Read the  proselint installation guide  for more</field></doc>
<doc><field name="id">1179</field><field name="title">google-arc-proselint</field><field name="session">Project-specific</field><field name="sentence">Add this repository as a git submodule.Your .arcconfig should list arc-proselint in the load configuration:</field></doc>
<doc><field name="id">1180</field><field name="title">google-arc-proselint</field><field name="session">Global</field><field name="sentence">Clone this repository to the same directory where arcanist and libphutil are globally located.Your directory structure will look like so:Your .arcconfig should list arc-proselint in the load configuration  without a path :</field></doc>
<doc><field name="id">1181</field><field name="title">google-arc-proselint</field><field name="session">Usage</field><field name="sentence">Create a .arclint file in the root of your project and add the following content:Feel free to change the include/exclude regexes to suit your project's needs.</field></doc>
<doc><field name="id">1182</field><field name="title">google-arc-proselint</field><field name="session">Configuration options</field><field name="sentence">Checks can be ignored by configuring their severity:</field></doc>
<doc><field name="id">1183</field><field name="title">google-arc-proselint</field><field name="session">License</field><field name="sentence">Licensed under the Apache 2.0 license</field></doc>
<doc><field name="id">1184</field><field name="title">google-arc-proselint</field><field name="session">License</field><field name="sentence">See LICENSE for details.</field></doc>
<doc><field name="id">1185</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">regex-line-length linter for arc</field><field name="sentence">regex-line-length is a linter for use with  Phabricator  arc commandline tool</field></doc>
<doc><field name="id">1186</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">regex-line-length linter for arc</field><field name="sentence">This linter is able to identify lines that exceed a certain length while ignoring linesthat match a list of regexes.</field></doc>
<doc><field name="id">1187</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">Project-specific</field><field name="sentence">Add this repository as a git submodule.Your .arcconfig should list arc-regex-line-length-lint in the load configuration:</field></doc>
<doc><field name="id">1188</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">Global</field><field name="sentence">Clone this repository to the same directory where arcanist and libphutil are globally located.Your directory structure will look like so:Your .arcconfig should list arc-regex-line-length-lint in the load configuration  without apath :</field></doc>
<doc><field name="id">1189</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">Usage</field><field name="sentence">Create a .arclint file in the root of your project and add the following content:Feel free to change the include/exclude regexes to suit your project's needs.</field></doc>
<doc><field name="id">1190</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">Configuration options</field><field name="sentence">Line length can be configured by providing a max-line-length number:Lines can be ignored if they match a given list of regexes</field></doc>
<doc><field name="id">1191</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">Configuration options</field><field name="sentence">In the following example we ignore linesthat include a url.</field></doc>
<doc><field name="id">1192</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">License</field><field name="sentence">Licensed under the Apache 2.0 license</field></doc>
<doc><field name="id">1193</field><field name="title">google-arc-regex-line-length-linter</field><field name="session">License</field><field name="sentence">See LICENSE for details.</field></doc>
<doc><field name="id">1194</field><field name="title">google-arc-xcode-test-engine</field><field name="session">xcode-test-engine for arc</field><field name="sentence">xcode-test-engine is a test engine for use with  Phabricator  arccommand line tool.</field></doc>
<doc><field name="id">1195</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Features</field><field name="sentence">xcode-test-engine presently works well with projects that have asingle root workspace and a single unit test target.Supports arc unit:And arc unit --coverage:</field></doc>
<doc><field name="id">1196</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Project-specific</field><field name="sentence">Add this repository as a git submodule.Your .arcconfig should list xcode-test-engine in the load</field></doc>
<doc><field name="id">1197</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Global</field><field name="sentence">Clone this repository to the same directory where libphutil are globally located</field></doc>
<doc><field name="id">1198</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Global</field><field name="sentence">Your directory structure willlook like so:Your .arcconfig should list arc-xcode-test-engine in the loadconfiguration  without a path :</field></doc>
<doc><field name="id">1199</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Usage</field><field name="sentence">Create a .arcunit file in the root of your project and add the following content:Feel free to change the include/exclude regexes to suit your project's needs.Now modify your .arcconfig file by adding the following configuration:</field></doc>
<doc><field name="id">1200</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Build configuration options</field><field name="sentence">Any value provided to "build" will be passed along to xcodebuild as a flag.</field></doc>
<doc><field name="id">1201</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Picking the coverage product</field><field name="sentence">Provide the path to the product for which coverage should be calculated</field></doc>
<doc><field name="id">1202</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Picking the coverage product</field><field name="sentence">If building alibrary/framework this might be the framework binary product.</field></doc>
<doc><field name="id">1203</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Pre-build commands</field><field name="sentence">Some projects require a pre-build script that runs before the xcodebuild command.For example, CocoaPods projects may need to be re-generated.</field></doc>
<doc><field name="id">1204</field><field name="title">google-arc-xcode-test-engine</field><field name="session">Supporting multiple test engines</field><field name="sentence">We support Arcanist's *multi test engineYour .arcconfig file will have something similar to the following configuration:Coverage will appear for affected source files in Side-by-Side mode as a colored bar.</field></doc>
<doc><field name="id">1205</field><field name="title">google-arc-xcode-test-engine</field><field name="session">License</field><field name="sentence">Licensed under the Apache 2.0 license</field></doc>
<doc><field name="id">1206</field><field name="title">google-arc-xcode-test-engine</field><field name="session">License</field><field name="sentence">See LICENSE for details.</field></doc>
<doc><field name="id">1207</field><field name="title">google-argtail-check</field><field name="session">argtail-check</field><field name="sentence">Copyright 2017 Google Inc.This is not a Google product.Programatically adds check for trailing args that would otherwise be ignored.</field></doc>
<doc><field name="id">1208</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">Arithmancer is a prediction market application</field></doc>
<doc><field name="id">1209</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">Users can make trades on predictions, betting on how likely an event is to occur</field></doc>
<doc><field name="id">1210</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">Each prediction is an individual market with a market maker system modeled on Robin Hanson's logarithmic market scoring rules.This was designed and tested as an internal corporate decision market</field></doc>
<doc><field name="id">1211</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">Using outside of an organization as a general application will likely require additional features  ex</field></doc>
<doc><field name="id">1212</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">ACLs, better form validation and security, etc</field></doc>
<doc><field name="id">1213</field><field name="title">google-arithmancer</field><field name="session">Arithmancer</field><field name="sentence">.Note: This is not an official Google product.! Arithmancer  "Preview" ! Arithmancer Prediction</field></doc>
<doc><field name="id">1214</field><field name="title">google-arithmancer</field><field name="session">Getting Started</field><field name="sentence">pip install -r requirements.txt Download and install the Google Cloud SDK  and use dev_appserver.py to run a local server for development</field></doc>
<doc><field name="id">1215</field><field name="title">google-arithmancer</field><field name="session">Getting Started</field><field name="sentence">Create your first prediction by going to "/predictions/create"</field></doc>
<doc><field name="id">1216</field><field name="title">google-arithmancer</field><field name="session">Prerequisites</field><field name="sentence">This runs on App Engine and uses Google Cloud Datastore</field></doc>
<doc><field name="id">1217</field><field name="title">google-arithmancer</field><field name="session">Prerequisites</field><field name="sentence">Google Cloud SDK is a prerequisite for development and deployment.</field></doc>
<doc><field name="id">1218</field><field name="title">google-arithmancer</field><field name="session">Running the tests</field><field name="sentence">python runner.py app_test.py</field></doc>
<doc><field name="id">1219</field><field name="title">google-arithmancer</field><field name="session">Contributing</field><field name="sentence">Please read CONTRIBUTING.md for details on contributing.Features that would be desired/on the roadmap:This project is licensed under the Apache 2 License</field></doc>
<doc><field name="id">1220</field><field name="title">google-ashier</field><field name="session">Ashier for Automating Terminal Interactions</field><field name="sentence">Ashier is a program that serves the same purpose as expect  helping users script terminalinteractions</field></doc>
<doc><field name="id">1221</field><field name="title">google-ashier</field><field name="session">Ashier for Automating Terminal Interactions</field><field name="sentence">It is a computer assistant that watches the terminal screen overyour shoulder and interacts with the terminal using its own keyboard; someoneto answer the boring questions and enter the tedious commands for you</field></doc>
<doc><field name="id">1222</field><field name="title">google-ashier</field><field name="session">Ashier for Automating Terminal Interactions</field><field name="sentence">Unlikeexpect, Ashier supports multiple programming languages and provides a readabletemplate language for terminal output matching</field></doc>
<doc><field name="id">1223</field><field name="title">google-ashier</field><field name="session">Ashier for Automating Terminal Interactions</field><field name="sentence">These features make it easierto create and to maintain scripted terminal interactions.Ashier is not an official Google product.</field></doc>
<doc><field name="id">1224</field><field name="title">google-ashier</field><field name="session">Example: wargames</field><field name="sentence">wargames is a program that asks you to play a game and then tells you thatthe only winning move is not to play</field></doc>
<doc><field name="id">1225</field><field name="title">google-ashier</field><field name="session">Example: wargames</field><field name="sentence">This example shows how you can makeAshier refuse wargames automatically.First, create a file ENTER.Then, enter the following command to run Ashier, which starts a new interactiveshell</field></doc>
<doc><field name="id">1226</field><field name="title">google-ashier</field><field name="session">Example: wargames</field><field name="sentence">The -c option points Ashier to the configuration file you justWhen you run /usr/games/wargames in this shell, Ashier automatically answers"no" to the "Would you like to play a game?" prompt.To stop Ashier, type exit in the interactive shell.</field></doc>
<doc><field name="id">1227</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">ping is a program that sends network packets to a remote host and reports theresponses</field></doc>
<doc><field name="id">1228</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">It has a command line option to send a specific number of packets,but no option to continue sending packets until it receives, say, 10 responses.This example shows how you can implement that feature with Ashier.This wargames has a fixed prompt, but ping responses vary in reported packetsize, source, sequence number, Time-to-Live value, and latency</field></doc>
<doc><field name="id">1229</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">So Ashierneeds to match only some parts of the template and ignore differences inothers</field></doc>
<doc><field name="id">1230</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Second, wargames takes only a fixed no response, but here Ashierneeds to react differently to ping responses: do nothing for the first 9, andpress Ctrl-C for the 10th</field></doc>
<doc><field name="id">1231</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">In other words, Ashier needs to support dynamicbehavior through custom stateful logic.Ashier solves the first problem with variable markers, which appear on lines2-6 in the ping-output.ahr configuration file  shown below</field></doc>
<doc><field name="id">1232</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Each variablemarker line starts with ?, followed by an optional sequence of SPACEcharacters, and then a sequence of</field></doc>
<doc><field name="id">1233</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">dots</field></doc>
<doc><field name="id">1234</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">The dots on each variable markerline marks the corresponding part of the template as a variable, which tellsAshier to ignore differences there when matching terminal output with thetemplate</field></doc>
<doc><field name="id">1235</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Each variable marker can also have a name, which appears after theAshier solves the second problem with a controller process</field></doc>
<doc><field name="id">1236</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">When Ashierstarts, it in turn starts another program in the background</field></doc>
<doc><field name="id">1237</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">That runningprogram is the controller process, which implements dynamic behavior forAshier</field></doc>
<doc><field name="id">1238</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Ashier talks to the controller process by sending messages to itsstandard input</field></doc>
<doc><field name="id">1239</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">In return, the controller process may send data to standardoutput, which Ashier forwards verbatim to the terminal as keystrokes.Here, the last line of ping-output.ahr  above  tells Ashier to send a messageto the controller process  instead of typing into the terminal  when it matchesterminal output to the template</field></doc>
<doc><field name="id">1240</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">The controller program ping-react.py  shownbelow  reads these messages and dynamically generates keystrokes</field></doc>
<doc><field name="id">1241</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Since Ashierstarts with a new interactive shell, the controller process first enters ashell command to run the ping program</field></doc>
<doc><field name="id">1242</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Then, it reads 10 Ashier messages each representing a ping response  from standard input and logs each messageto the output file</field></doc>
<doc><field name="id">1243</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">After receiving all 10 messages, it sends the Ctrl-C keycombination to standard output, which terminates ping and drops the terminalback to the interactive shell</field></doc>
<doc><field name="id">1244</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">Finally, it enters the exit command to quitthe interactive shell and stop Ashier.You can now enter the following command to run Ashier, which starts a newinteractive shell</field></doc>
<doc><field name="id">1245</field><field name="title">google-ashier</field><field name="session">Example: ping</field><field name="sentence">The -c option points Ashier to its configuration file,and the remaining arguments specify the controller program ping-react.py andits arguments.In the new shell, Ashier automatically runs ping with Ctrl-C and types exit to quit the new interactive shell.</field></doc>
<doc><field name="id">1246</field><field name="title">google-asset-check</field><field name="session">Asset Check</field><field name="sentence">Check your assetlinks.json file for associations, ensuring you're configured correctly.*This is not an official Google product.*</field></doc>
<doc><field name="id">1247</field><field name="title">google-asset-check</field><field name="session">Install</field><field name="sentence">Install the node dependencies and link the executable:</field></doc>
<doc><field name="id">1248</field><field name="title">google-asset-check</field><field name="session">Usage</field><field name="sentence">If you've linked the package you can use:asset-check asset-check asset-check -u    # check a url with a specific useragentasset-check -d Or in your install directory:./run.js ./run.js ./run.js -d     # check a url with a specific useragent</field></doc>
<doc><field name="id">1249</field><field name="title">google-asset-check</field><field name="session">Examples</field><field name="sentence">> asset-check -d assetlinks.jsoninstance 1 .target: is not exactly one from ,Errors validating schema› asset-check URL:</field></doc>
<doc><field name="id">1250</field><field name="title">google-asset-check</field><field name="session">Tests</field><field name="sentence">npm test</field></doc>
<doc><field name="id">1251</field><field name="title">google-astc-codec</field><field name="session">astc-codec</field><field name="sentence">astc-codec is a software ASTC decoder implementation, which supports the ASTCLDR profile.Example usage:</field></doc>
<doc><field name="id">1252</field><field name="title">google-astc-codec</field><field name="session">#include</field><field name="sentence">// ...std::vector astc = LoadMyASTCData  ;const size_t width = 640;const size_t height = 480;std::vector result;result.resize width bool result = astc_codec::ASTCDecompressToRGBA</field></doc>
<doc><field name="id">1253</field><field name="title">google-astc-codec</field><field name="session">Building</field><field name="sentence">Install  Bazel  and then run:</field></doc>
<doc><field name="id">1254</field><field name="title">google-astc-codec</field><field name="session">Run Tests</field><field name="sentence">See  CONTRIBUTING.md  CONTRIBUTING.md  for important contributing requirements.</field></doc>
<doc><field name="id">1255</field><field name="title">google-astc-codec</field><field name="session">License</field><field name="sentence">astc-codec project is licensed under the Apache License Version 2.You canfind a copy of it in  LICENSE  LICENSE .This is not an officially supported Google product.</field></doc>
<doc><field name="id">1256</field><field name="title">google-asylo-site</field><field name="session">asylo-site</field><field name="sentence">This repository contains the source code for the  asylo.dev  website.Please see the main Asylo  README file to learn about the overall Asylo project and how to get in touch with us.The website uses  Jekyll  templates Please make sure you arefamiliar with these before editing.To run the site locally with Docker, use the following command from the top level directory for this git repo e.g</field></doc>
<doc><field name="id">1257</field><field name="title">google-asylo-site</field><field name="session">asylo-site</field><field name="sentence">pwd must be git clone  > In some cases the --incremental may not work properly and you might have to remove it.Alternatively, if you just want to develop locally w/o Docker/Kubernetes/Minikube, you can try installing Jekyll locally.You may need to install other prerequisites manually  which is where using the docker image shines</field></doc>
<doc><field name="id">1258</field><field name="title">google-asylo-site</field><field name="session">asylo-site</field><field name="sentence">Here's an example of doingso for Mac OS X:You should run scripts/linters.sh prior to checking in your changes.This will run 3 tests:Many thanks to  @geeknoid  for his help basing thiswebsite off the clean and elegant Istio.io</field></doc>
<doc><field name="id">1259</field><field name="title">google-asylo</field><field name="session">Asylo</field><field name="sentence">Copyright 2018 Asylo authors</field></doc>
<doc><field name="id">1260</field><field name="title">google-asylo</field><field name="session">Documentation</field><field name="sentence">The v0.2 documentation can be found at  asylo.dev Example code can be found in the  asylo/examples  asylo/examples  directory.This directory has a working Bazel workspace and example applications that canbe used as the start of your own project.</field></doc>
<doc><field name="id">1261</field><field name="title">google-asylo</field><field name="session">Support</field><field name="sentence">There are several ways of getting support with Asylo:+   Join the  asylo-users +   Ask questions and find curated answers on</field></doc>
<doc><field name="id">1262</field><field name="title">google-asylo</field><field name="session">Build Environment in Docker  Recommended</field><field name="sentence">Asylo provides a custom Docker image that contains all required dependencies, aswell as Asylo's custom toolchain, which is required for compiling enclaveapplications for various enclave backends.inside the container image.See this guide for additional details on how to pull images from Google's Container Registry.</field></doc>
<doc><field name="id">1263</field><field name="title">google-asylo</field><field name="session">Examples</field><field name="sentence">The following examples assume that the Asylo SDK was installed at ASYLO_SDK,which can be a directory of your choice</field></doc>
<doc><field name="id">1264</field><field name="title">google-asylo</field><field name="session">Examples</field><field name="sentence">For example:</field></doc>
<doc><field name="id">1265</field><field name="title">google-asylo</field><field name="session">Running the hello_world example</field><field name="sentence">To run the hello_world example, first use the following commands to grab the examples source code  and save it toany directory of your choice.simulated enclave backend:settings  #bazel-flags-and-workspace-settings  for an explanation of the flagsand workspace configuration used in this example.</field></doc>
<doc><field name="id">1266</field><field name="title">google-asylo</field><field name="session">Docker flags</field><field name="sentence">In the above example, we use the following Docker flags:+   -it is used to allocate an interactive terminal in which the command is+   --rm is used to automatically delete the temporary container after the+   -v is used to map local files to paths inside the container.+   -w is used to set the working directory in the container so that bazel</field></doc>
<doc><field name="id">1267</field><field name="title">google-asylo</field><field name="session">Bazel flags and workspace settings</field><field name="sentence">In the above example, we use the following Bazel flags:+   --config=enc-sim uses the Asylo toolchain to build the target for the+   --names="${NAMES}" is the argument passed to the //hello_world target.Note: The example project from  examples/  asylo/examples  also picks upadditional Bazel configuration from the tools/bazel.rc file in that directory.Remember to copy this file to a tools/ sub-directory in future Bazel projectsyou create so that you can make use of Asylo's toolchain configurations.</field></doc>
<doc><field name="id">1268</field><field name="title">google-asylo</field><field name="session">Running your own enclave application</field><field name="sentence">You can follow the  steps above  #running-the-hello_world-example-1  to buildyour own enclave application instead</field></doc>
<doc><field name="id">1269</field><field name="title">google-asylo</field><field name="session">Running your own enclave application</field><field name="sentence">You can use the examples code inMY_PROJECT as the start of your own project, or simply change MY_PROJECT topoint to your own Bazel project instead.</field></doc>
<doc><field name="id">1270</field><field name="title">google-asylo</field><field name="session">Running an interactive terminal</field><field name="sentence">You can get an interactive terminal  instead of running a single command  byomitting the bazel run ..</field></doc>
<doc><field name="id">1271</field><field name="title">google-asylo</field><field name="session">Running an interactive terminal</field><field name="sentence">part of the docker invocation</field></doc>
<doc><field name="id">1272</field><field name="title">google-asylo</field><field name="session">Running an interactive terminal</field><field name="sentence">For instance, torun the hello_world example as above but in an interactive terminal, run:run Bazel as usual:To run our regression test suite, first clone the Asylo repository to adirectory of your choice.tests that run inside a simulated enclave environment</field></doc>
<doc><field name="id">1273</field><field name="title">google-asylo</field><field name="session">Running an interactive terminal</field><field name="sentence">You can run it with thefollowing command:command</field></doc>
<doc><field name="id">1274</field><field name="title">google-asylo</field><field name="session">Running an interactive terminal</field><field name="sentence">Note that in this command we also use -v to map the Asylo SDK sourcefiles to /opt/asylo/sdk.</field></doc>
<doc><field name="id">1275</field><field name="title">google-asylo</field><field name="session">Manual Installation</field><field name="sentence">If you don't want to use the Asylo Docker image, you can manually install Asyloand its dependencies instead.See  INSTALL.md  INSTALL.md  for detailed installation steps.</field></doc>
<doc><field name="id">1276</field><field name="title">google-asylo</field><field name="session">Running the regression test suite</field><field name="sentence">If you haven't already, use the following commands to clone the Asylo sourcecode repository and copy it to a directory of your choice.tests that run inside a simulated enclave environment</field></doc>
<doc><field name="id">1277</field><field name="title">google-asylo</field><field name="session">Running the regression test suite</field><field name="sentence">You can run it with thefollowing command:This repository contains source code for the Asylo framework</field></doc>
<doc><field name="id">1278</field><field name="title">google-asylo</field><field name="session">Running the regression test suite</field><field name="sentence">The v0.2 releaseof the framework supports C++11 applications and a Bazel build environment.The following packages contain source code that may be of particular interest tousers of the Asylo framework as well as those looking to contribute to Asylo+    asylo  asylo</field></doc>
<doc><field name="id">1279</field><field name="title">google-asylo</field><field name="session">Disclaimer</field><field name="sentence">This is not an officially supported Google product.</field></doc>
<doc><field name="id">1280</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Learning Edge Representations via Low-Rank Asymmetric Projections</field><field name="sentence">Implementation of  ACM CIKM 2017 paper _Learning Edge Representation via Low-Rank Asymmetric Projections_</field></doc>
<doc><field name="id">1281</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Learning Edge Representations via Low-Rank Asymmetric Projections</field><field name="sentence">As describedbelow, this repository includes:Code to process a graph  i.e</field></doc>
<doc><field name="id">1282</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Learning Edge Representations via Low-Rank Asymmetric Projections</field><field name="sentence">create training files .Code to train node embeddings and edge function, using our method, andDataset files, that are used in our paper.If you use this code, then you should:Note that this is **not*Consider citing our work, using the following bibtex:</field></doc>
<doc><field name="id">1283</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Overview of files</field><field name="sentence">model on the test partition</field></doc>
<doc><field name="id">1284</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Overview of files</field><field name="sentence">and  BioGrid  Nonetheless, we release our train/test  splits for others to replicate our results.</field></doc>
<doc><field name="id">1285</field><field name="title">google-asymproj_edge_dnn</field><field name="session">How to use</field><field name="sentence">To use, you must first create dataset files using  create_dataset_arrays.py  ./create_dataset_arrays.py  , then train the nodeembeddings and the edge function using  deep_edge_trainer.py  ./deep_edge_trainer.py</field></doc>
<doc><field name="id">1286</field><field name="title">google-asymproj_edge_dnn</field><field name="session">How to use</field><field name="sentence">The following twosubsections explain how to use these two python scripts.</field></doc>
<doc><field name="id">1287</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Create Trainer Files</field><field name="sentence">The input to our method is an edge-list  readable by nx.read_edgelist In particular, assume that your file /path/to/graph.txt contains lines like:where n1 and n2 are node IDs, which can be strings or integers</field></doc>
<doc><field name="id">1288</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Create Trainer Files</field><field name="sentence">The lineindicates edge n1-n2  if graph is undirected  or n1->n2  if graph isdirected</field></doc>
<doc><field name="id">1289</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Create Trainer Files</field><field name="sentence">Assume that the above graph.txt contains |E| lines</field></doc>
<doc><field name="id">1290</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Create Trainer Files</field><field name="sentence">You cangenerate dataset files by running:Which creates directory ~/asymproj/datasets/my_graph, writing files:train.pairs..txt.npy: Training pairs</field></doc>
<doc><field name="id">1291</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Create Trainer Files</field><field name="sentence">Sampled using random walks.</field></doc>
<doc><field name="id">1292</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Pre-processed dataset files</field><field name="sentence">If you are using pre-processed dataset files, with --only_simulate_walks to binary create_dataset_arrays.py</field></doc>
<doc><field name="id">1293</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Pre-processed dataset files</field><field name="sentence">For example, ifyou want to simulate walks for the PPI dataset  see  datasets  ./datasets/  ,then you can run the command:</field></doc>
<doc><field name="id">1294</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">The training binary create_dataset_arrays.py</field></doc>
<doc><field name="id">1295</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">During training, the trainer outputs the trainedmodel onto subdirectory dumps</field></doc>
<doc><field name="id">1296</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">The name of the model files are automaticallycaptured from the hyper-parameters  e.g</field></doc>
<doc><field name="id">1297</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">dimensions of embedding, dnn,projection</field></doc>
<doc><field name="id">1298</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">Setting flag --restore=0 will force to the trainer to start fromscratch</field></doc>
<doc><field name="id">1299</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">Otherwise, if flag is ommitted, the trainer will continue training themodel from the last saved state.If you simulated walks on PPI, you can train a model with:The above command will print many lines like this:where Best=0.80/0.85 and cur=0.81/0.84, respectively, are the bestand current accuracies like test/train accuracies</field></doc>
<doc><field name="id">1300</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">The Best is taken for_best train_</field></doc>
<doc><field name="id">1301</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">We perform model selection at the training set</field></doc>
<doc><field name="id">1302</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">In other words, weselect model parameters at peak train accuracy</field></doc>
<doc><field name="id">1303</field><field name="title">google-asymproj_edge_dnn</field><field name="session">Run Trainer Code</field><field name="sentence">Please view the flags of deep_edge_trainer.py  ./deep_edge_trainer.py  to customize model</field></doc>
<doc><field name="id">1304</field><field name="title">google-audio-sync-kit</field><field name="session">Recording hardware</field><field name="sentence">The instructions apply to any ALSA-compatible multi-channel audio recorder.The examples below use the Behringer U-Phono UFO202, a USB device withtwo input ports.The U-Phono is connected to a Linux system from where the recording commandswill be issued.</field></doc>
<doc><field name="id">1305</field><field name="title">google-audio-sync-kit</field><field name="session">Determining the ALSA device name</field><field name="sentence">The first step is determining the name of the ALSA device corresponding tothe multi-channel recorder</field></doc>
<doc><field name="id">1306</field><field name="title">google-audio-sync-kit</field><field name="session">Determining the ALSA device name</field><field name="sentence">Many systems have an embedded recording port e.g., the mic in most PCs , so it's important to determine the right device.The most straightforward way to identify the name is by running arecord -L; the additional entries will correspond to the card in question.For the U-Phono, the entries are those with CARD=CODEC,DEV=0:it provides the most direct path to the hardware and reduces the chancesof breaking the simultaneity of the recording.</field></doc>
<doc><field name="id">1307</field><field name="title">google-audio-sync-kit</field><field name="session">Recording command</field><field name="sentence">Once the proper device name has been identified, the next step is actuallyrecording the audio</field></doc>
<doc><field name="id">1308</field><field name="title">google-audio-sync-kit</field><field name="session">Recording command</field><field name="sentence">The following command line does it for the U-Phono:Since we're using the direct hardware device, it's mandatory to specifyparameters that are supported natively by the card</field></doc>
<doc><field name="id">1309</field><field name="title">google-audio-sync-kit</field><field name="session">Recording command</field><field name="sentence">In contrast, if--dump-hw-params switch:parameters in the audio file correspond to the arguments passed to arecord:Input FileSample RateDurationFile SizeBit RateSample Encoding: 16-bit Signed Integer PCM</field></doc>
<doc><field name="id">1310</field><field name="title">google-audio-sync-kit</field><field name="session">Splitting into mono files</field><field name="sentence">Since the sync analyzer requires the audio signals to be in separatefiles, the following commands can be used to split the multichannelMeasuring sync from your programThe following steps were tested in Goobuntu 14.04, but should beapplicable to any Debian-based distribution.Create and start a virtualenv for the project.import audio_sync</field></doc>
<doc><field name="id">1311</field><field name="title">google-audio-sync-kit</field><field name="session">are given in audio_sync.DEFAULT_TEST_AUDIO_PROPERTIES.</field><field name="sentence">latencies, dropouts  = audio_sync.AnalyzeAudios ref_wav_path, act_wav_path</field></doc>
<doc><field name="id">1312</field><field name="title">google-audio-sync-kit</field><field name="session">Verify there are no dropouts and the latency is below the threshold.</field><field name="sentence">assert    ==  x for x in latencies if x 1  >= LATENCY_THRESHOLD assert    == dropoutslatencies has the form   t0, latency0 ,  t1, latency1 , ..</field></doc>
<doc><field name="id">1313</field><field name="title">google-audio-sync-kit</field><field name="session">Verify there are no dropouts and the latency is below the threshold.</field><field name="sentence">,where tx is the time, in seconds, from the start of the audioto a cliff in the reference audio and latencyx is the latency,in seconds, of the corresponding cliff in the actual signal.dropouts is a list of the form   s0, e0 ,  s1, e1 , ..</field></doc>
<doc><field name="id">1314</field><field name="title">google-audio-sync-kit</field><field name="session">Verify there are no dropouts and the latency is below the threshold.</field><field name="sentence">with the start and the end of each dropout in the actual signal.How is latency measuredLatency measurements depend on the audio signals being made of pulsedsine waves of the following form:_simultaneously_, for example, using a multichannel audio card</field></doc>
<doc><field name="id">1315</field><field name="title">google-audio-sync-kit</field><field name="session">Verify there are no dropouts and the latency is below the threshold.</field><field name="sentence">Notice that the requirement of simultaneity is a fundamental one;otherwise it's impossible to ensure that two corresponding datasamples had occurred at the same time</field></doc>
<doc><field name="id">1316</field><field name="title">google-audio-sync-kit</field><field name="session">Verify there are no dropouts and the latency is below the threshold.</field><field name="sentence">By knowing the sampling frequency of the recordings the latencybetween the signals can be calculated by comparing the distancebetween two corresponding peaks in each audio signal using the formulaarbitrary media like a song:The first is that it allows to determine the sync of the audios asThe second is that since the audio is well characterized, it's</field></doc>
<doc><field name="id">1317</field><field name="title">google-audio-sync-kit</field><field name="session">Limitations</field><field name="sentence">The algorithm can detect latencies in the rangeThe algorithm doesn't detect dropouts in the reference signal.Command line interfaceThe library also provides a command line interface  CLI  to analyzethe audios</field></doc>
<doc><field name="id">1318</field><field name="title">google-audio-sync-kit</field><field name="session">Limitations</field><field name="sentence">This is useful for exploratory testing and experimentation.</field></doc>
<doc><field name="id">1319</field><field name="title">google-audio-sync-kit</field><field name="session">Requirements</field><field name="sentence">The CLI depends on numpy  tested with 1.10.2, but other versions mayalso work .Running the program without parameters shows the available options.The most relevant ones are:  {  }      10:17:35 34:13 > +0839 ........</field></doc>
<doc><field name="id">1320</field><field name="title">google-audio-sync-kit</field><field name="session">Requirements</field><field name="sentence">|  10:17:36 34:14 > +0929 ..........|  10:17:36 34:14 > +1111 ..........|*  10:17:37 34:15 > +0907 ..........|  10:17:37 34:15 > +1043 ..........|  10:17:37 34:15 > +0884 ........</field></doc>
<doc><field name="id">1321</field><field name="title">google-audio-sync-kit</field><field name="session">Requirements</field><field name="sentence">|    specific latencies to occurances in the device log.Percentiles  secs :0%: 0.00000050%: 0.00000075%: 0.00000090%: 0.00400095%: 0.00700099%: 0.009400100%: 0.010000The latencies printed are the max absolute value of the delay, so a delayof -0.1 seconds would be displayed as 0.python ref.wav act.wav --print_percentilesPercentiles  secs :0%: 0.00000050%: 0.00000075%: 0.00000090%: 0.00000095%: 0.00000099%: 0.000000100%: 0.000000</field></doc>
<doc><field name="id">1322</field><field name="title">google-audio-sync-kit</field><field name="session">Example 2</field><field name="sentence">For latencies, the first element on each sub-list is the time in secondsfrom the start of the recording and the second element is the latency measured.For dropouts, the first element on each sub-list is the start time of thedropout  in seconds from the start of the recording  and the second elementend time of the dropout.</field></doc>
<doc><field name="id">1323</field><field name="title">google-audio-sync-kit</field><field name="session">Example 3</field><field name="sentence">.......</field></doc>
<doc><field name="id">1324</field><field name="title">google-audio-sync-kit</field><field name="session">Example 3</field><field name="sentence">= Act more than 0.020 secs ahead of refo = Dropout</field></doc>
<doc><field name="id">1325</field><field name="title">google-audio-sync-kit</field><field name="session">Example 3</field><field name="sentence">= 0.036 secsThe output shows a comparison over the time of the two audios:In the above example, the actual audio was behind at severalpoints</field></doc>
<doc><field name="id">1326</field><field name="title">google-audio-sync-kit</field><field name="session">Example 3</field><field name="sentence">If the files are inverted = Act more than 0.020 secs ahead of refo = Dropout</field></doc>
<doc><field name="id">1327</field><field name="title">google-audio-sync-kit</field><field name="session">Example 3</field><field name="sentence">= 0.035 secswe can see an expected reversal of the latencies.---------Unittests for all the modules can be run via the audio_sync/run_unittests</field></doc>
<doc><field name="id">1328</field><field name="title">google-audion</field><field name="session">Web Audio Inspector</field><field name="sentence">Web Audio Inspector is a Chrome extension that adds a "Web Audio" panel to Developer Tools</field></doc>
<doc><field name="id">1329</field><field name="title">google-audion</field><field name="session">Web Audio Inspector</field><field name="sentence">This panel visualizes the AudioNode graph generated by Web Audio API JavaScript</field></doc>
<doc><field name="id">1330</field><field name="title">google-audion</field><field name="session">Web Audio Inspector</field><field name="sentence">Install the extension from its  Chrome Web Store page ! Web Audio Inspector The wiki details  how to use Web Audio Inspector</field></doc>
<doc><field name="id">1331</field><field name="title">google-audion</field><field name="session">No Support for ES6 Classes at the Moment</field><field name="sentence">This extension breaks ES6 classes that extend subclasses of AudioNode</field></doc>
<doc><field name="id">1332</field><field name="title">google-audion</field><field name="session">No Support for ES6 Classes at the Moment</field><field name="sentence">See issue  #73  Web Audio Inspector's logic for overriding AudioNode constructors disallows classes from extending those constructors</field></doc>
<doc><field name="id">1333</field><field name="title">google-audion</field><field name="session">No Support for ES6 Classes at the Moment</field><field name="sentence">We are trying to resolve this issue.</field></doc>
<doc><field name="id">1334</field><field name="title">google-audion</field><field name="session">Build Dependencies</field><field name="sentence">We welcome contributions</field></doc>
<doc><field name="id">1335</field><field name="title">google-audion</field><field name="session">Build Dependencies</field><field name="sentence">See the issues list, or suggest ideas</field></doc>
<doc><field name="id">1336</field><field name="title">google-audion</field><field name="session">Build Dependencies</field><field name="sentence">For starters, we currently have some usability and visualization issues that need owners.Review CONTRIBUTING.md</field></doc>
<doc><field name="id">1337</field><field name="title">google-audion</field><field name="session">Build Dependencies</field><field name="sentence">Note that Google requires contributors to sign a  Contributors License Agreement Set up  2-factor authentication for Github   as Google requires .Clone the repository with the git@ address</field></doc>
<doc><field name="id">1338</field><field name="title">google-audion</field><field name="session">Build Dependencies</field><field name="sentence">The https address does not work with 2-factor authentication.</field></doc>
<doc><field name="id">1339</field><field name="title">google-audion</field><field name="session">Build and run</field><field name="sentence">Run the following commands in the project root directory.</field></doc>
<doc><field name="id">1340</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">This project uses the  Google Closure JavaScript library  and  Google's JavaScript style guide The extension comprises of several scripts</field></doc>
<doc><field name="id">1341</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">Each script corresponds to a Closure entry point  JS file  within js/entry-points.Tests reside in the tests directory and use Closure's jsunit library</field></doc>
<doc><field name="id">1342</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">Tests run in a web browser</field></doc>
<doc><field name="id">1343</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">Each test has a _test.html file  which sets up DOM elements required by the test  and a _test.js file  which contains the bulk testing logic</field></doc>
<doc><field name="id">1344</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">To run all tests at once,Run npm install to update dependencies if you have not done so.Run gulp test to start a static server</field></doc>
<doc><field name="id">1345</field><field name="title">google-audion</field><field name="session">Code Layout</field><field name="sentence">This command also uses your default browser  preferably  Google Chrome  to open a web page  pictured below  for running all tests at once.! Web Audio Inspector To run tests individually, you can use that UI as well, or you could visit the path to that test's _test.html file.</field></doc>
<doc><field name="id">1346</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">Normal mapping is a technique to simulate surfaces with bumps of dents in 3Dcomputer graphics</field></doc>
<doc><field name="id">1347</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">It works by storing additional per-pixel information formaterial textures: a single vector, indicating a normal protrudingperpendicularly from the surface.This information then can be used from a shader script using an equation like:from the light source</field></doc>
<doc><field name="id">1348</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">Note: typically, normalmaps will be encoded in tangentspace, so for above formula, lightdirection needs to be computed in tangentspace first too</field></doc>
<doc><field name="id">1349</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">As the normalmap contains information about surface steepness at each pixel,some consistency expectations can be made a normalmap corresponds to some heightmap, which essentially means thatintegrating the gradient  which is implied from the normal vectors  across anyclosed path must yield zero.Furthermore, commonly normalmaps contain height information in the alphachannel; this also should usually be consistent with the normal vectors.This tool verifies these consistency properties of normalmaps to aid withquality control of gaming artwork</field></doc>
<doc><field name="id">1350</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">It supports both the common Direct3D andOpenGL Y axis conventions  a.k.a</field></doc>
<doc><field name="id">1351</field><field name="title">google-audit-normalmap</field><field name="session">Normalmaps</field><field name="sentence">green channel inversion .</field></doc>
<doc><field name="id">1352</field><field name="title">google-audit-normalmap</field><field name="session">Usage</field><field name="sentence">this is also known as green channel inversion</field></doc>
<doc><field name="id">1353</field><field name="title">google-audit-normalmap</field><field name="session">Usage</field><field name="sentence">This matches most OpenGL based  game engines</field></doc>
<doc><field name="id">1354</field><field name="title">google-audit-normalmap</field><field name="session">Usage</field><field name="sentence">By default, the y coordinate is interpreted according to the  usual convention of Direct3D based game engines</field></doc>
<doc><field name="id">1355</field><field name="title">google-audit-normalmap</field><field name="session">Usage</field><field name="sentence">engines.</field></doc>
<doc><field name="id">1356</field><field name="title">google-audit-normalmap</field><field name="session">Copyright</field><field name="sentence">See the LICENSE file.</field></doc>
<doc><field name="id">1357</field><field name="title">google-audit-normalmap</field><field name="session">Contributing</field><field name="sentence">See the CONTRIBUTING.md file.</field></doc>
<doc><field name="id">1358</field><field name="title">google-audit-normalmap</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">1359</field><field name="title">google-auth-library-swift</field><field name="session">Auth Library for Swift</field><field name="sentence">This project contains Swift packages that can be used to write command-linetools and cloud services that use OAuth to authenticate and authorize accessto remote services.Currently these packages support OAuth1 and OAuthThey are designed to work on OS X systems and on Linux systems that arerunning in the  Google Cloud browser and a local web server that is automatically run in thecommand-line client</field></doc>
<doc><field name="id">1360</field><field name="title">google-auth-library-swift</field><field name="session">Auth Library for Swift</field><field name="sentence">Google Cloud Service Accounts</field></doc>
<doc><field name="id">1361</field><field name="title">google-auth-library-swift</field><field name="session">Usage and Examples</field><field name="sentence">Sources/Examples  Sources/Examples  contains examples that illustrate OAuth1 and OAuth2 signin forvarious services</field></doc>
<doc><field name="id">1362</field><field name="title">google-auth-library-swift</field><field name="session">Usage and Examples</field><field name="sentence">Each requires valid application credentials to run.See the various service providers for details.Services look for OAuth configuration information in "credentials" YAML filesthat are expected to be in $HOME/.credentials</field></doc>
<doc><field name="id">1363</field><field name="title">google-auth-library-swift</field><field name="session">Usage and Examples</field><field name="sentence">Sample credentialsfiles are in  credentials  credentials and include client IDs, client secrets, and OAuth service URLs.When OAuth services require registered callback URLs, these should beset to  where SERVICE is specified in the corresponding credentials YAML file</field></doc>
<doc><field name="id">1364</field><field name="title">google-auth-library-swift</field><field name="session">Usage and Examples</field><field name="sentence">The temporary web server runs locally on port</field></doc>
<doc><field name="id">1365</field><field name="title">google-auth-library-swift</field><field name="session">Credits</field><field name="sentence">This is work in progress toward great server-side Swift software</field></doc>
<doc><field name="id">1366</field><field name="title">google-auth-library-swift</field><field name="session">Credits</field><field name="sentence">Please take carewhen using this in production projects: always refer to a tagged version and be aware that interfaces may change in future releases.</field></doc>
<doc><field name="id">1367</field><field name="title">google-auth-library-swift</field><field name="session">Contributing</field><field name="sentence">We'd love to collaborate on this</field></doc>
<doc><field name="id">1368</field><field name="title">google-auth-library-swift</field><field name="session">Contributing</field><field name="sentence">See  CONTRIBUTING.md  CONTRIBUTING.md  for details.</field></doc>
<doc><field name="id">1369</field><field name="title">google-auth-library-swift</field><field name="session">Copyright</field><field name="sentence">Copyright 2017, Google Inc.</field></doc>
<doc><field name="id">1370</field><field name="title">google-auth-library-swift</field><field name="session">License</field><field name="sentence">Released under the Apache 2.0 license.</field></doc>
<doc><field name="id">1371</field><field name="title">google-auto</field><field name="session">Auto</field><field name="sentence">A collection of source code generators for  Java  java .</field></doc>
<doc><field name="id">1372</field><field name="title">google-auto</field><field name="session">Auto‽</field><field name="sentence">Java  java  is full of code that is mechanical, repetitive, typically untestedand sometimes the source of subtle bugs</field></doc>
<doc><field name="id">1373</field><field name="title">google-auto</field><field name="session">Auto‽</field><field name="sentence">_Sounds like a job for robots!_The Auto subprojects are a collection of code generators that automate thosetypes of tasks</field></doc>
<doc><field name="id">1374</field><field name="title">google-auto</field><field name="session">Auto‽</field><field name="sentence">They create the code you would have written, but withoutthe bugs.Save time</field></doc>
<doc><field name="id">1375</field><field name="title">google-auto</field><field name="session">Auto‽</field><field name="sentence">Save code</field></doc>
<doc><field name="id">1376</field><field name="title">google-auto</field><field name="session">Auto‽</field><field name="sentence">Save sanity.</field></doc>
<doc><field name="id">1377</field><field name="title">google-auto</field><field name="session">License</field><field name="sentence">AutoFactory :  AutoService :  AutoValue :  Common :  java :  value-type :  ServiceLoader :</field></doc>
<doc><field name="id">1378</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">EVENT is refering to BR_INST_RETIRED:TAKEN if available</field></doc>
<doc><field name="id">1379</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">For somearchitectures, BR_INST_EXEC:TAKEN also works.--binary: BINARY with debug info</field></doc>
<doc><field name="id">1380</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">You need to make sure the binary name isthe same as the binary you run during profiling</field></doc>
<doc><field name="id">1381</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">Additionally, you will needto have debug info  i.e</field></doc>
<doc><field name="id">1382</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">line table  availabe in the binary</field></doc>
<doc><field name="id">1383</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">This means thatyou need to compile the binary with "-gmlt" or "-g1"</field></doc>
<doc><field name="id">1384</field><field name="title">google-autofdo</field><field name="session">perf record -c PERIOD -e EVENT -b -o perf.data -</field><field name="sentence">For LLVM, you alse needto have -fdebug-info-for-profiling.For create_gcov:For create_llvm_prof:</field></doc>
<doc><field name="id">1385</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">An inspection tool for Chrome Automation APIThe  Chrome Automation API is an experimental accessibility API that allows developers to access theautomation tree and events for the browser</field></doc>
<doc><field name="id">1386</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">The tree resembles the DOM tree,but only exposes the semantic structure of a page</field></doc>
<doc><field name="id">1387</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">It can be used toprogrammatically interact with a page by examining names, roles, and states,listening for events, and performing actions on nodes.One of Chrome Automation's main purposes is to enable the development ofassistive technologies written in JavaScript, for Chrome OS</field></doc>
<doc><field name="id">1388</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">This is similar tohow MSAA, IA2 and  UIA are used on Windows, and AX Accessibility is used forOS X</field></doc>
<doc><field name="id">1389</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">It can also be used by extensions, but because it is experimental, itis currently available only on the dev channel and to internal assistivetechnologies such as ChromeVox.Automation Inspector is used to exercise the Automation API, to inspect theentire Chrome OS desktop, or to inspect a specific browser tab.This tool is mainly useful for the following types of people:Chrome OS to the Dev Channel and then install Automation Inspector as an app  insert link here</field></doc>
<doc><field name="id">1390</field><field name="title">google-automation-inspector</field><field name="session">Automation Inspector</field><field name="sentence">install Google Chrome Canary  andthen install Automation Inspector as an extension  insert link here .</field></doc>
<doc><field name="id">1391</field><field name="title">google-automation-inspector</field><field name="session">Building</field><field name="sentence">The first time you build, do an npm installThis will automatically run bower install for you.If you want to update the dependencies, use npm update && bower updateNext, type the following from the command line in the automation-inspector folder:grunt default watchto keep the build updated as source files change.</field></doc>
<doc><field name="id">1392</field><field name="title">google-automation-inspector</field><field name="session">Running from the local file system</field><field name="sentence">Using developer mode from the Chrome extensions page at build/extension folder.</field></doc>
<doc><field name="id">1393</field><field name="title">google-automation-inspector</field><field name="session">Releasing</field><field name="sentence">Update the version number via:grunt default compress to create app.zip and extension.zip for uploading to the Chrome web store in the build/package folder.</field></doc>
<doc><field name="id">1394</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">The find field is very powerful, and can be used in a number of ways:This can be slow on complex pages, it it will cause the entire page to beloaded a bit at a time.Slow on complex pages  similiar to plain text search .to find a node matching a given selector</field></doc>
<doc><field name="id">1395</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">This will currently return only thefirst item</field></doc>
<doc><field name="id">1396</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">This method uses the Automation API's domQuerySelector method</field></doc>
<doc><field name="id">1397</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">Forexample, use $ '#my-special-element'  to find the nearest automation node tothat element.similar to  FindParams However, this method accepts valid JSON syntax only</field></doc>
<doc><field name="id">1398</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">You must provide stringsrather than constants</field></doc>
<doc><field name="id">1399</field><field name="title">google-automation-inspector</field><field name="session">Finding a node</field><field name="sentence">For example, use { "state" : {"disabled": true }}rather than { state: { StateType.disabled: true }}.</field></doc>
<doc><field name="id">1400</field><field name="title">google-autoparse</field><field name="session">AutoParse</field><field name="sentence">Homepage  AuthorBob Aman  CopyrightCopyright © 2010 Google, Inc</field></doc>
<doc><field name="id">1401</field><field name="title">google-autoparse</field><field name="session">AutoParse</field><field name="sentence">LicenseApache 2.0</field></doc>
<doc><field name="id">1402</field><field name="title">google-autoparse</field><field name="session">Description</field><field name="sentence">An implementation of the JSON Schema specification</field></doc>
<doc><field name="id">1403</field><field name="title">google-autoparse</field><field name="session">Description</field><field name="sentence">Provides automatic parsingfor a given JSON Schema.</field></doc>
<doc><field name="id">1404</field><field name="title">google-badwolf-drivers</field><field name="session">BadWolf Drivers</field><field name="sentence">! Go Report Card    ! GoDoc  by the Resource Description Framework  RDF  It presents a flexible storage abstraction, efficient query language, anddata-interchange model for representing a directed graph that accommodates thestorage and linking of arbitrary objects without the need for a rigid schema</field></doc>
<doc><field name="id">1405</field><field name="title">google-badwolf-drivers</field><field name="session">BadWolf Drivers</field><field name="sentence">BadWolf  main repository contains theimplementation, but no persistent drivers</field></doc>
<doc><field name="id">1406</field><field name="title">google-badwolf-drivers</field><field name="session">BadWolf Drivers</field><field name="sentence">This repository contains a collectionof driver implementations aim to provide, mainly, persistent storage</field></doc>
<doc><field name="id">1407</field><field name="title">google-badwolf-drivers</field><field name="session">Bulding the command line tool</field><field name="sentence">Assumming you have a fully working installation of GO, you just need to get the required packages and build the tool</field></doc>
<doc><field name="id">1408</field><field name="title">google-badwolf-drivers</field><field name="session">Bulding the command line tool</field><field name="sentence">You can achieve this by typing the following commands:check that the new VOLATILEplease see the  original documentation</field></doc>
<doc><field name="id">1409</field><field name="title">google-badwolf-drivers</field><field name="session">Testing the command line tool</field><field name="sentence">You may always want to run all the test for both repos badwolf-drivers to make sure eveything is A-Ok</field></doc>
<doc><field name="id">1410</field><field name="title">google-badwolf-drivers</field><field name="session">Testing the command line tool</field><field name="sentence">If the tests fail, you should consider not using the build tool since it may be tainted.</field></doc>
<doc><field name="id">1411</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">! Go Report Card    ! GoDoc   BadWolf is a temporal graph store loosely modeled after the concepts introducedby the Resource Description Framework  RDF  It presents a flexible storage abstraction, efficient query language, anddata-interchange model for representing a directed graph that accommodates thestorage and linking of arbitrary objects without the need for a rigid schema.BadWolf began as a  triplestore but triples have been expanded to quads to allow simpler and flexible temporalreasoning</field></doc>
<doc><field name="id">1412</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">Because BadWolf is designed for generalized relationship storage,most of the web-related idiosyncrasies of RDF are not used and have been toneddown or directly removed and focuses on its time reasoning aspects.In case you are curious about the name, BadWolf is named after the BadWolf entity    as it appearedin Dr</field></doc>
<doc><field name="id">1413</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">Who series episode _"The Parting Of Ways"_ after Rose Tyler looked intothe Time Vortex itself</field></doc>
<doc><field name="id">1414</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">The BadWolf entity scattered events in time as selfencode messages, creating a looped ontological paradox</field></doc>
<doc><field name="id">1415</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">Hence, naming a temporalgraph store after the entity seemed appropriate.You can find more detail information on each of the components of BadWolf below:will be no guarantees on API stability till the first stable 1.0 release.You can reach us here or via @badwolf_project  on Twitter</field></doc>
<doc><field name="id">1416</field><field name="title">google-badwolf</field><field name="session">BadWolf</field><field name="sentence">For more information, presentation, or to find other related projects that using BadWolf check the project website</field></doc>
<doc><field name="id">1417</field><field name="title">google-bamboo-soy</field><field name="session">Bamboo Soy for IntelliJ 🏮🍣🏮</field><field name="sentence">! GitHub license  The smartest Intellij plugin for the  Soy templating language ! output Adds syntax highlighting, autocompletion and static analysis for your closure template files.</field></doc>
<doc><field name="id">1418</field><field name="title">google-bamboo-soy</field><field name="session">Installation</field><field name="sentence">Install the plugin directly from your IDE or the Jetbrains plugin repository</field></doc>
<doc><field name="id">1419</field><field name="title">google-bamboo-soy</field><field name="session">Feature Summary</field><field name="sentence">Bamboo Soy aims to provide super-fast, no-compromise language support for Soy in IntelliJ.unbalanced tags  things don’t break when you type .</field></doc>
<doc><field name="id">1420</field><field name="title">google-bamboo-soy</field><field name="session">Release notes</field><field name="sentence">See the  release notes page  releasenotes.md .</field></doc>
<doc><field name="id">1421</field><field name="title">google-bamboo-soy</field><field name="session">Contributing</field><field name="sentence">Small and large contributions welcome! For new features or substantial changes, please open an issuebeforehand so that it can be discussed.For all the details, see the  contributing page  CONTRIBUTING.md .</field></doc>
<doc><field name="id">1422</field><field name="title">google-battery-historian</field><field name="session">Battery Historian</field><field name="sentence">Battery Historian is a tool to inspect battery related information and events on an Android device running Android 5.0 Lollipop  API level 21  and later, while the device was not plugged in</field></doc>
<doc><field name="id">1423</field><field name="title">google-battery-historian</field><field name="session">Battery Historian</field><field name="sentence">It allows application developers to visualize system and application level events on a timeline with panning and zooming functionality, easily see various aggregated statistics since the device was last fully charged, and select an application and inspect the metrics that impact battery specific to the chosen application</field></doc>
<doc><field name="id">1424</field><field name="title">google-battery-historian</field><field name="session">Battery Historian</field><field name="sentence">It also allows an A/B comparison of two bugreports, highlighting differences in key battery related metrics.</field></doc>
<doc><field name="id">1425</field><field name="title">google-battery-historian</field><field name="session">Using Docker</field><field name="sentence">Install  Docker  <> .Run the Battery Historian image</field></doc>
<doc><field name="id">1426</field><field name="title">google-battery-historian</field><field name="session">Using Docker</field><field name="sentence">Choose a port number and replace  withthat number in the commands below:For Windows:using</field></doc>
<doc><field name="id">1427</field><field name="title">google-battery-historian</field><field name="session">Using Docker</field><field name="sentence">If, for example, the IP address is 123.456.78.90, Historian will beavailable at .For more information about the port forwarding, see the  Dockerdocumentation  <> .</field></doc>
<doc><field name="id">1428</field><field name="title">google-battery-historian</field><field name="session">Building from source code</field><field name="sentence">Make sure you have at least Golang version 1.8.1:  through the "Advanced System Settings" option inside the "System" control panel.Next, install Git from <> if it's not already installed.Next, make sure Python 2.7  NOT Python 3!  is installed</field></doc>
<doc><field name="id">1429</field><field name="title">google-battery-historian</field><field name="session">Building from source code</field><field name="sentence">See <>if it isn't, and ensure that python is added to your $PATH environment variable.Next, install Java from <>.Next, download the Battery Historian code and its dependencies:</field></doc>
<doc><field name="id">1430</field><field name="title">google-battery-historian</field><field name="session">Run Historian on your machine  make sure $PATH contains $GOBIN</field><field name="sentence">Remember, you must always run battery-historian from inside the $GOPATH/src/github.com/google/battery-historian directory:To take a bug report from your Android device, you will need to enable USB debugging under Settings > System > Developer Options</field></doc>
<doc><field name="id">1431</field><field name="title">google-battery-historian</field><field name="session">Run Historian on your machine  make sure $PATH contains $GOBIN</field><field name="sentence">On Android 4.2 and higher, the Developer options screen is hidden by default</field></doc>
<doc><field name="id">1432</field><field name="title">google-battery-historian</field><field name="session">Run Historian on your machine  make sure $PATH contains $GOBIN</field><field name="sentence">You can enable this by following the instructions  here  <> .To obtain a bug report from your development device running Android 7.0 andYou are all set now</field></doc>
<doc><field name="id">1433</field><field name="title">google-battery-historian</field><field name="session">Run Historian on your machine  make sure $PATH contains $GOBIN</field><field name="sentence">Run historian and visit <> andupload the bugreport.txt file to start analyzing.</field></doc>
<doc><field name="id">1434</field><field name="title">google-battery-historian</field><field name="session">Timeline:</field><field name="sentence">! Timeline  /screenshots/timeline.png "Timeline Visualization"</field></doc>
<doc><field name="id">1435</field><field name="title">google-battery-historian</field><field name="session">System stats:</field><field name="sentence">! System  /screenshots/system.png "Aggregated System statistics since the device was last fully charged"</field></doc>
<doc><field name="id">1436</field><field name="title">google-battery-historian</field><field name="session">App stats:</field><field name="sentence">! App  /screenshots/app.png "Application specific statistics"</field></doc>
<doc><field name="id">1437</field><field name="title">google-battery-historian</field><field name="session">Advanced</field><field name="sentence">To reset aggregated battery stats and history:By default, Android does not record timestamps for application-specificuserspace wakelock transitions even though aggregate statistics are maintainedon a running basis</field></doc>
<doc><field name="id">1438</field><field name="title">google-battery-historian</field><field name="session">Advanced</field><field name="sentence">If you want Historian to display detailed information abouteach individual wakelock on the timeline, you should enable full wakelockreporting using the following command before starting your experiment:in a few hours</field></doc>
<doc><field name="id">1439</field><field name="title">google-battery-historian</field><field name="session">Advanced</field><field name="sentence">Use this option for short test runs  3-4 hrs .</field></doc>
<doc><field name="id">1440</field><field name="title">google-battery-historian</field><field name="session">Kernel trace analysis</field><field name="sentence">To generate a trace file which logs kernel wakeup source and kernel wakelockFirst, connect the device to the desktop/laptop and enable kernel trace logging:</field></doc>
<doc><field name="id">1441</field><field name="title">google-battery-historian</field><field name="session">8MB to 10MB should be a decent size for 5-6 hours of logging.</field><field name="sentence">Then, use the device for intended test case.Finally, extract the logs:</field></doc>
<doc><field name="id">1442</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">Historian plots and relates events in real time  PST or UTC , whereas kerneltrace files logs events in jiffies  seconds since boot time</field></doc>
<doc><field name="id">1443</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">In order to relatethese events there is a script which approximates the jiffies to utc time</field></doc>
<doc><field name="id">1444</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">Thescript reads the UTC times logged in the dmesg when the system suspends andresumes</field></doc>
<doc><field name="id">1445</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">The scope of the script is limited to the amount of timestamps presentin the dmesg</field></doc>
<doc><field name="id">1446</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">Since the script uses the dmesg log when the system suspends,there are different scripts for each device, with the only difference beingthe device-specific dmesg log it tries to find</field></doc>
<doc><field name="id">1447</field><field name="title">google-battery-historian</field><field name="session">Take a bug report at this time.</field><field name="sentence">These scripts have beenintegrated into the Battery Historian tool itself.</field></doc>
<doc><field name="id">1448</field><field name="title">google-battery-historian</field><field name="session">Power monitor analysis</field><field name="sentence">Lines in power monitor files should have one of the following formats, and theformat should be consistent throughout the entire file:To ensure the power monitor and bug report timelines are somewhat aligned,please reset the batterystats before running any power monitor logging:If using a Monsoon:Download the AOSP Monsoon Python script from <></field></doc>
<doc><field name="id">1449</field><field name="title">google-battery-historian</field><field name="session">Modifying the proto files</field><field name="sentence">If you want to modify the proto files  pb/\*/\*.proto , first download theadditional tools necessary:Install the standard C++ implementation of protocol buffers from <>Download the Go proto compiler:in your $PATH for the protocol compiler, protoc, to find it.Make your changes to the proto files.Finally, regenerate the compiled Go proto output files using regen_proto.sh.</field></doc>
<doc><field name="id">1450</field><field name="title">google-battery-historian</field><field name="session">License</field><field name="sentence">Copyright 2016 Google, Inc.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atUnless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS, WITHOUTWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied</field></doc>
<doc><field name="id">1451</field><field name="title">google-battery-historian</field><field name="session">License</field><field name="sentence">See theLicense for the specific language governing permissions and limitations underthe License.</field></doc>
<doc><field name="id">1452</field><field name="title">google-bazel-common</field><field name="session">Bazel Common Libraries</field><field name="sentence">This repository contains assorted common functionality for Google's open-sourcelibraries that are built with  bazel</field></doc>
<doc><field name="id">1453</field><field name="title">google-bazel-common</field><field name="session">Bazel Common Libraries</field><field name="sentence">It is an experimental project and noneof the APIs/target names are fixed/guaranteed to remain</field></doc>
<doc><field name="id">1454</field><field name="title">google-bazel-common</field><field name="session">Bazel Common Libraries</field><field name="sentence">You are welcome to useit and offer feedback at your own risk.This is not an official Google product</field></doc>
<doc><field name="id">1455</field><field name="title">google-bazel-common</field><field name="session">Bazel Common Libraries</field><field name="sentence">bazel :</field></doc>
<doc><field name="id">1456</field><field name="title">google-bbcpu</field><field name="session">BBSoftCPU</field><field name="sentence">A Verilog HDL implementation of a breadboard TTL CPU design</field></doc>
<doc><field name="id">1457</field><field name="title">google-bbcpu</field><field name="session">BBSoftCPU</field><field name="sentence">The design itself is based on theseries of educational  videos  1  by Ben Eater.Testing can be done on the Lattice iCE40 family of FPGAs</field></doc>
<doc><field name="id">1458</field><field name="title">google-bbcpu</field><field name="session">BBSoftCPU</field><field name="sentence">The specific board used during development is:For anyone interested further information is available at:are used as a replacement.</field></doc>
<doc><field name="id">1459</field><field name="title">google-bbcpu</field><field name="session">Build environment</field><field name="sentence">Ubuntu 16.04 or newer</field></doc>
<doc><field name="id">1460</field><field name="title">google-bbcpu</field><field name="session">Build environment</field><field name="sentence">The toolchain and verilog simulator can be installed via:The simulator can be invoked via:Before flashing the FPGA board, the USB access permissions need a minor adjustment that will allow the tools towrite a bitstream on the device</field></doc>
<doc><field name="id">1461</field><field name="title">google-bbcpu</field><field name="session">Build environment</field><field name="sentence">Create a new file at:Add this line inside:Make sure that the icestick board is connected to the host PC.Flashing the bitstream on the FPGA can be done by invoking:The default program will currently calculate the fibonacci sequence of numbers.As mentioned before the 'OUT' instruction will transmit the register 'A' contents on the second UART port.The serial device will usually appear on the host as '/dev/ttyUSB1'</field></doc>
<doc><field name="id">1462</field><field name="title">google-bbcpu</field><field name="session">Build environment</field><field name="sentence">The configuration used right now is: 1 :  2 :  3 :  4 :  5 :</field></doc>
<doc><field name="id">1463</field><field name="title">google-beacon-platform</field><field name="session">Beacon Platform</field><field name="sentence">This repository contains sample apps that demonstrate how to use the Proximity Beacon API the  Proximity Beacon API  and Eddystone  an open beacon format from Google.</field></doc>
<doc><field name="id">1464</field><field name="title">google-beautiful-audio-editor</field><field name="session">Overview</field><field name="sentence">This audio editor runs in a web browser and uses the Web Audio API</field></doc>
<doc><field name="id">1465</field><field name="title">google-beautiful-audio-editor</field><field name="session">Overview</field><field name="sentence">Chimade some efforts to embed it within a web view and make it an Androidapp, but halted after facing memory issues.This project uses Google Closure, which encompasses a javascript compiler,library, Google Stylesheets  GSS  for structuring pieces of HTML</field></doc>
<doc><field name="id">1466</field><field name="title">google-beautiful-audio-editor</field><field name="session">Overview</field><field name="sentence">Closure standardizes javascript</field></doc>
<doc><field name="id">1467</field><field name="title">google-beautiful-audio-editor</field><field name="session">Overview</field><field name="sentence">For instance,it introduces private/protected variables, normal  non-prototypical inheritance like java, and compile-time error checking.This is not an official Google product</field></doc>
<doc><field name="id">1468</field><field name="title">google-beautiful-audio-editor</field><field name="session">Overview</field><field name="sentence">Chi just thought that the Chrome WebStore needed a nimble audio editing tool, both before and after Android apps canrun on Chromebooks.</field></doc>
<doc><field name="id">1469</field><field name="title">google-beautiful-audio-editor</field><field name="session">Setup</field><field name="sentence">Install java Give Google Closure build tools relevant execute permissions:The project uses a python script  do.py  for building, which is kind of simple.We're open to using more robust build systems such as bazel or gulp.Some uses:Compile the javascript  including soy templates  and CSS, which is outputted into the build directory:To run the editor, start up a web server in the home repository directory.For example, in the repository directory, runYou can then view the compiled editor at You can view the uncompiled editor at While developing, you don't have to recompile to view changes in the uncompiled version.However, you have to recompile to see changes if you made changes to the dependency graph  altered calls to goog.require ,made any stylesheet changes  changes to GSS files , or altered soy templates  which generate javascript files upon template compilation .</field></doc>
<doc><field name="id">1470</field><field name="title">google-beautiful-audio-editor</field><field name="session">Coding Guidelines</field><field name="sentence">This project currently uses  Google's javascript style guide To help check for style throughout the project, run python do.py lint in the home audio-cat directory.</field></doc>
<doc><field name="id">1471</field><field name="title">google-beautiful-audio-editor</field><field name="session">Location</field><field name="sentence">Source code is located in the src folder.Soon, each folder will have a README describing its contents</field></doc>
<doc><field name="id">1472</field><field name="title">google-beautiful-audio-editor</field><field name="session">Location</field><field name="sentence">Each javascript file also contains a block comment describing it.TODO chihuahua : uh..</field></doc>
<doc><field name="id">1473</field><field name="title">google-beautiful-audio-editor</field><field name="session">Location</field><field name="sentence">do that</field></doc>
<doc><field name="id">1474</field><field name="title">google-beautiful-audio-editor</field><field name="session">Location</field><field name="sentence">write those readmes.</field></doc>
<doc><field name="id">1475</field><field name="title">google-beautiful-audio-editor</field><field name="session">Organization of JavaScript Classes</field><field name="sentence">In broad strokes, this project's javascript classes fall into 5 categories:</field></doc>
<doc><field name="id">1476</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/state</field><field name="sentence">This folder contains files that maintain the state of individual audio projects.For instance, audioCat.state.Clip encapsulates information about an individual clip within a section.Classes in this folder typically dispatch events when their states change, notifyingother entities such as audio-play-related and UI entities of changes in state.For instance, when a new track is added, the audioCat.state.TrackManager fires an eventnotifying the audio graph to play the track as well as the UI  audioCat.ui.TrackListingManager to visualize the track.</field></doc>
<doc><field name="id">1477</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/audio</field><field name="sentence">This folder contains classes related to playing audio and hooking up with theWeb Audio API</field></doc>
<doc><field name="id">1478</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/audio</field><field name="sentence">For instance, audioCat.audio.play.PlayManager maintains thecurrent play status</field></doc>
<doc><field name="id">1479</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/audio</field><field name="sentence">audioCat.audio.AudioGraph maintains the connectionsbetween junctions in the audio graph.Files in this directory heed events dispatched by entities within src/js/original/stateas well as fires its own events for the UI to listen to</field></doc>
<doc><field name="id">1480</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/audio</field><field name="sentence">For instance, whenplaying starts, the UI responds by switching the play icon to a pause icon.</field></doc>
<doc><field name="id">1481</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/ui</field><field name="sentence">This folder contains files that updates the UI</field></doc>
<doc><field name="id">1482</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/ui</field><field name="sentence">Classes in this folder typicallyencapsulate state and audio play</field></doc>
<doc><field name="id">1483</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/ui</field><field name="sentence">When the user interacts with the UI, classes inthis folder directly modify the state objects</field></doc>
<doc><field name="id">1484</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/ui</field><field name="sentence">The state then fires events that updatethe UI.</field></doc>
<doc><field name="id">1485</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/app</field><field name="sentence">The files in this directory hook up the whole app together</field></doc>
<doc><field name="id">1486</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/app</field><field name="sentence">app.js for instanceis a megamoth file that instantiates the whole app.</field></doc>
<doc><field name="id">1487</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/action</field><field name="sentence">This folder contains Action objects that perform a certain action</field></doc>
<doc><field name="id">1488</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/action</field><field name="sentence">Each action object can be retreived from the ActionManager by a specific key</field></doc>
<doc><field name="id">1489</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/action</field><field name="sentence">We can invoke actions based on various interactions.</field></doc>
<doc><field name="id">1490</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/utility</field><field name="sentence">This folder is a collection of convenience classes that are used throughout theproject</field></doc>
<doc><field name="id">1491</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/utility</field><field name="sentence">For instance, audioCat.utility.IdGenerator generates IDs uniquethroughout the application used by many types of objects.</field></doc>
<doc><field name="id">1492</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/android</field><field name="sentence">This folder contains code that allows the editor to be embedded within an Android web view</field></doc>
<doc><field name="id">1493</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/android</field><field name="sentence">Efforts towards making a mobile app were abandoned after the decision to keep the editor a web app</field></doc>
<doc><field name="id">1494</field><field name="title">google-beautiful-audio-editor</field><field name="session">src/js/original/android</field><field name="sentence">This folder is basically a noop.</field></doc>
<doc><field name="id">1495</field><field name="title">google-beautiful-audio-editor</field><field name="session">Testing</field><field name="sentence">Unit tests currently use Google Closure's junit library</field></doc>
<doc><field name="id">1496</field><field name="title">google-beautiful-audio-editor</field><field name="session">Testing</field><field name="sentence">To add a unit test,Code up a _test.js and _test.html file</field></doc>
<doc><field name="id">1497</field><field name="title">google-beautiful-audio-editor</field><field name="session">Testing</field><field name="sentence">See id-generator_test for an example.Run python do.py to aggregate all tests into auto_generated/all_tests.js.Unit tests for certain javascript classes can be run by starting a web serverin the home repository directory, again with sayClick Start to run tests.We currently lack integration tests with say web driver, Selenium, or Google</field></doc>
<doc><field name="id">1498</field><field name="title">google-benchmark</field><field name="session">benchmark</field><field name="sentence">! Build status     ! slackin  A library to support the benchmarking of functions, similar to unit-tests</field></doc>
<doc><field name="id">1499</field><field name="title">google-benchmark</field><field name="session">benchmark</field><field name="sentence">Discussion group IRC channel:  freenode  #googlebenchmark Additional Tooling Documentation  docs/tools.md  Assembly Testing Documentation  docs/AssemblyTests.md</field></doc>
<doc><field name="id">1500</field><field name="title">google-benchmark</field><field name="session">Building</field><field name="sentence">The basic steps for configuring and building the library look like this:dependency can be provided two ways:  dependencies.If you do not wish to build and run the tests, add -DBENCHMARK_ENABLE_GTEST_TESTS=OFFto CMAKE_ARGS.</field></doc>
<doc><field name="id">1501</field><field name="title">google-benchmark</field><field name="session">Installation Guide</field><field name="sentence">For Ubuntu and Debian Based SystemFirst make sure you have git and cmake installed  If not please install them The main branch contains the latest stable version of the benchmarking library;the API of which can be considered largely stable, with source breaking changesbeing made only upon the release of a new major version.Newer, experimental, features are implemented and tested on the v2 branch  Users who wishto use, test, and provide feedback on the new features are encouraged to trythis branch</field></doc>
<doc><field name="id">1502</field><field name="title">google-benchmark</field><field name="session">Installation Guide</field><field name="sentence">However, this branch provides no stability guarantees and reservesthe right to change and break the API at any time.</field></doc>
<doc><field name="id">1503</field><field name="title">google-benchmark</field><field name="session">Further knowledge</field><field name="sentence">It may help to read the  Google Test documentation as some of the structural aspects of the APIs are similar.</field></doc>
<doc><field name="id">1504</field><field name="title">google-benchmark</field><field name="session">Basic usage</field><field name="sentence">Define a function that executes the code to be measured, register it as abenchmark function using the BENCHMARK macro, and ensure an appropriate mainfunction is available:</field></doc>
<doc><field name="id">1505</field><field name="title">google-benchmark</field><field name="session">#include</field><field name="sentence">static void BM_StringCreation benchmark::State& state  {  for  auto _ : state // Register the function as a benchmarkBENCHMARK BM_StringCreation ;// Define another benchmarkstatic void BM_StringCopy benchmark::State& state  {  std::string x = "hello";  for  auto _ : state BENCHMARK BM_StringCopy ;BENCHMARK_MAIN  ;Don't forget to inform your linker to add benchmark library e.g</field></doc>
<doc><field name="id">1506</field><field name="title">google-benchmark</field><field name="session">#include</field><field name="sentence">through -lbenchmark_main to get the same default behavior.The benchmark library will measure and report the timing for code within thefor ..</field></doc>
<doc><field name="id">1507</field><field name="title">google-benchmark</field><field name="session">#include</field><field name="sentence">loop.</field></doc>
<doc><field name="id">1508</field><field name="title">google-benchmark</field><field name="session">Platform-specific libraries</field><field name="sentence">When the library is built using GCC it is necessary to link with the pthreadlibrary due to how GCC implements std::thread</field></doc>
<doc><field name="id">1509</field><field name="title">google-benchmark</field><field name="session">Platform-specific libraries</field><field name="sentence">Failing to link to pthread willlead to runtime exceptions  unless you're using libc++ , not linker errors</field></doc>
<doc><field name="id">1510</field><field name="title">google-benchmark</field><field name="session">Platform-specific libraries</field><field name="sentence">See issue #67  for more details</field></doc>
<doc><field name="id">1511</field><field name="title">google-benchmark</field><field name="session">Platform-specific libraries</field><field name="sentence">Youcan link to pthread by adding -pthread to your linker command</field></doc>
<doc><field name="id">1512</field><field name="title">google-benchmark</field><field name="session">Platform-specific libraries</field><field name="sentence">Note, you canalso use -lpthread, but there are potential issues with ordering of commandline parameters if you use that.If you're running benchmarks on Windows, the shlwapi library  -lshlwapi  isalso required.If you're running benchmarks on solaris, you'll want the kstat library linked intoo  -lkstat .</field></doc>
<doc><field name="id">1513</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">Sometimes a family of benchmarks can be implemented with just one routine thattakes an extra argument to specify which one of the family of benchmarks torun</field></doc>
<doc><field name="id">1514</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">For example, the following code defines a family of benchmarks formeasuring the speed of memcpy   calls of different lengths:short-hand</field></doc>
<doc><field name="id">1515</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">The following invocation will pick a few appropriate arguments inthe specified range and will generate a benchmark for each such argument.the command above selects   8, 64, 512, 4k, 8k</field></doc>
<doc><field name="id">1516</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">In the following code therange multiplier is changed to multiples of two.Now arguments generated are   8, 16, 32, 64, 128, 256, 512, 1024, 2k, 4k, 8k  .You might have a benchmark that depends on two or more inputs</field></doc>
<doc><field name="id">1517</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">For example, thefollowing code defines a family of benchmarks for measuring the speed of setshort-hand</field></doc>
<doc><field name="id">1518</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">The following macro will pick a few appropriate arguments in theproduct of the two specified ranges and will generate a benchmark for each suchprogrammatic specification of an arbitrary set of arguments on which to run thebenchmark</field></doc>
<doc><field name="id">1519</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">The following example enumerates a dense range on one parameter,and a sparse range on the second.Asymptotic complexity might be calculated for a family of benchmarks</field></doc>
<doc><field name="id">1520</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">Thefollowing code will calculate the coefficient for the high-order term in therunning time and the normalized root-mean square error of string comparison.calculated automatically.that might be used to customize high-order term calculation.Templated benchmarks work the same way: This example produces and consumesmessages of size sizeof v  range_x times</field></doc>
<doc><field name="id">1521</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">It also outputs throughput in theabsence of multiprogramming.In C++11 mode, a ranged-based for loop should be used in preference tothe KeepRunning loop for running the benchmarks</field></doc>
<doc><field name="id">1522</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">For example:because KeepRunning requires a memory load and store of the iteration countever iteration, whereas the ranged-for variant is able to keep the iteration countin a register.For example, an empty inner loop of using the ranged-based for method looks like:the benchmark loop should be preferred.In C++11 it is possible to define a benchmark that takes an arbitrary numberof extra arguments</field></doc>
<doc><field name="id">1523</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">The BENCHMARK_CAPTURE func, test_case_name, ...args macro creates a benchmark that invokes func  with the benchmark::State asthe first argument followed by the specified args....The test_case_name is appended to the name of the benchmark andshould describe the values passed.Note that elements of ...args may refer to global variables</field></doc>
<doc><field name="id">1524</field><field name="title">google-benchmark</field><field name="session">Passing arguments</field><field name="sentence">Users shouldavoid modifying global state inside of a benchmark.</field></doc>
<doc><field name="id">1525</field><field name="title">google-benchmark</field><field name="session">Using RegisterBenchmark name, fn, args...</field><field name="sentence">The func st, args..</field></doc>
<doc><field name="id">1526</field><field name="title">google-benchmark</field><field name="session">Using RegisterBenchmark name, fn, args...</field><field name="sentence">where st is a benchmark::State object.Unlike the BENCHMARK registration macros, which can only be used at the globalscope, the RegisterBenchmark can be called anywhere</field></doc>
<doc><field name="id">1527</field><field name="title">google-benchmark</field><field name="session">Using RegisterBenchmark name, fn, args...</field><field name="sentence">This allows forbenchmark tests to be registered programmatically.Additionally RegisterBenchmark allows any callable object to be registeredas a benchmark</field></doc>
<doc><field name="id">1528</field><field name="title">google-benchmark</field><field name="session">Using RegisterBenchmark name, fn, args...</field><field name="sentence">Including capturing lambdas and function objects.For Example:auto BM_test =    benchmark::State& st, auto Inputs  { /int main int argc, char*  for  auto& test_input : { /  benchmark::Initialize &argc, argv ;  benchmark::RunSpecifiedBenchmarks  ;</field></doc>
<doc><field name="id">1529</field><field name="title">google-benchmark</field><field name="session">Multithreaded benchmarks</field><field name="sentence">In a multithreaded test  benchmark invoked by multiple threads simultaneously ,it is guaranteed that none of the threads will start until all have reachedthe start of the benchmark loop, and all will have finished before any threadexits the benchmark loop</field></doc>
<doc><field name="id">1530</field><field name="title">google-benchmark</field><field name="session">Multithreaded benchmarks</field><field name="sentence">This behavior is also provided by the KeepRunning  API  As such, any global setup or teardown can be wrapped in a check against the threadsingle-threaded code, you may want to use real-time  "wallclock"  measurementsfor latency comparisons:</field></doc>
<doc><field name="id">1531</field><field name="title">google-benchmark</field><field name="session">Manual timing</field><field name="sentence">For benchmarking something for which neither CPU time nor real-time arecorrect or accurate enough, completely manual timing is supported usingthe UseManualTime function.When SetIterationTime once per iteration of the benchmark loop toreport the manually measured time.An example use case for this is benchmarking GPU execution  e.g</field></doc>
<doc><field name="id">1532</field><field name="title">google-benchmark</field><field name="session">Manual timing</field><field name="sentence">OpenCLor CUDA kernels, OpenGL or Vulkan or Direct3D draw calls , which cannotbe accurately measured using CPU time or real-time</field></doc>
<doc><field name="id">1533</field><field name="title">google-benchmark</field><field name="session">Manual timing</field><field name="sentence">Instead, they can bemeasured accurately using a dedicated API, and these measurement resultscan be reported back with SetIterationTime.static void BM_ManualTiming benchmark::State& state  {  int microseconds = state.range 0 ;  std::chrono::duration sleep_duration {  };  }BENCHMARK BM_ManualTiming ->Range 1, 1UseManualTime  ;</field></doc>
<doc><field name="id">1534</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">To prevent a value or expression from being optimized away by the compilerthe benchmark::DoNotOptimize ..</field></doc>
<doc><field name="id">1535</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">and benchmark::ClobberMemory  functions can be used.memory or a register</field></doc>
<doc><field name="id">1536</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">For GNU based compilers it acts as read/write barrierfor global memory</field></doc>
<doc><field name="id">1537</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">More specifically it forces the compiler to flush pendingwrites to memory and reload any other values as necessary.Note that DoNotOptimize   does not prevent optimizations on in any way</field></doc>
<doc><field name="id">1538</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">may even be removed entirely when the result is alreadyknown</field></doc>
<doc><field name="id">1539</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">For example:  /  int foo int x  { return x + 42; }  while  ..</field></doc>
<doc><field name="id">1540</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">DoNotOptimize foo 0  ; // Optimized to DoNotOptimize 42 ;  int bar int  __attribute__  const  ;  while  ..</field></doc>
<doc><field name="id">1541</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">DoNotOptimize bar 0  ; // Optimized to:  // int __result__ = bar 0 ;  // while  ..</field></doc>
<doc><field name="id">1542</field><field name="title">google-benchmark</field><field name="session">Preventing optimisation</field><field name="sentence">DoNotOptimize __result__ ;The second tool for preventing optimizations is ClobberMemory   prevents the call to v.push_back 42  from being optimized</field></doc>
<doc><field name="id">1543</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">If a benchmark runs a few milliseconds it may be hard to visually compare themeasured times, since the output data is given in nanoseconds per default</field></doc>
<doc><field name="id">1544</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">Inorder to manually set the time unit, you can specify it manually:By default each benchmark is run once and that single result is reported.However benchmarks are often noisy and a single result may not be representativeof the overall behavior</field></doc>
<doc><field name="id">1545</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">For this reason it's possible to repeatedly rerun theThe number of runs of each benchmark is specified globally by theRepetitions on the registered benchmark object</field></doc>
<doc><field name="id">1546</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">When a benchmark is run morethan once the mean, median and standard deviation of the runs will be reported.Additionally the ReportAggregatesOnly bool  function can be used to change how repeated testsare reported</field></doc>
<doc><field name="id">1547</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">By default the result of each repeated run is reported</field></doc>
<doc><field name="id">1548</field><field name="title">google-benchmark</field><field name="session">Set time unit manually</field><field name="sentence">When thisoption is true only the mean, median and standard deviation of the runs is reported.Calling ReportAggregatesOnly bool  on a registered benchmark object overridesthe value of the flag for that benchmark.</field></doc>
<doc><field name="id">1549</field><field name="title">google-benchmark</field><field name="session">User-defined statistics for repeated benchmarks</field><field name="sentence">While having mean, median and standard deviation is nice, this may not beenough for everyone</field></doc>
<doc><field name="id">1550</field><field name="title">google-benchmark</field><field name="session">User-defined statistics for repeated benchmarks</field><field name="sentence">For example you may want to know what is the largestobservation, e.g</field></doc>
<doc><field name="id">1551</field><field name="title">google-benchmark</field><field name="session">User-defined statistics for repeated benchmarks</field><field name="sentence">because you have some real-time constraints</field></doc>
<doc><field name="id">1552</field><field name="title">google-benchmark</field><field name="session">User-defined statistics for repeated benchmarks</field><field name="sentence">This is easy.The following code will specify a custom statistic to be calculated, definedby a lambda function.void BM_spin_empty benchmark::State& state  {  for  auto _ : state  {  }BENCHMARK BM_spin_empty   ->ComputeStatistics "max",    const std::vector& v  -> double {  }   ->Arg 512 ;</field></doc>
<doc><field name="id">1553</field><field name="title">google-benchmark</field><field name="session">Fixtures</field><field name="sentence">Fixture tests are created byfirst defining a type that derives from ::benchmark::Fixture and thencreating/registering the tests using the following macros:class MyFixture : public benchmark::Fixture {};BENCHMARK_F MyFixture, FooTest  benchmark::State& st  {  }BENCHMARK_DEFINE_F MyFixture, BarTest  benchmark::State& st  {  }/BENCHMARK_REGISTER_F MyFixture, BarTest ->Threads 2 ;</field></doc>
<doc><field name="id">1554</field><field name="title">google-benchmark</field><field name="session">Templated fixtures</field><field name="sentence">Also you can create templated fixture by using the following macros:templateclass MyFixture : public benchmark::Fixture {};BENCHMARK_TEMPLATE_F MyFixture, IntTest, int  benchmark::State& st  {  }BENCHMARK_TEMPLATE_DEFINE_F MyFixture, DoubleTest, double  benchmark::State& st  {  }BENCHMARK_REGISTER_F MyFixture, DoubleTest ->Threads 2 ;</field></doc>
<doc><field name="id">1555</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">You can add your own counters with user-defined names</field></doc>
<doc><field name="id">1556</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">The example belowwill add columns "Foo", "Bar" and "Baz" in its output:and Counter values</field></doc>
<doc><field name="id">1557</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">The latter is a double-like class, via an implicitconversion to double&</field></doc>
<doc><field name="id">1558</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">Thus you can use all of the standard arithmeticassignment operators  =,+=,-=,*=,/=  to change the value of each counter.In multithreaded benchmarks, each counter is set on the calling thread only.When the benchmark finishes, the counters from each thread will be summed;the resulting sum is the value which will be shown for the benchmark.The Counter constructor accepts two parameters: the value as a doubleand a bit flag which allows you to show counters as rates and/or asper-thread averages:  // sets a simple counter  state.counters "Foo"  = numFoos;  // by the duration of the benchmark</field></doc>
<doc><field name="id">1559</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">state.counters "FooRate"  = Counter numFoos, benchmark::Counter::kIsRate ;  // be presented divided by the number of threads</field></doc>
<doc><field name="id">1560</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">state.counters "FooAvg"  = Counter numFoos, benchmark::Counter::kAvgThreads ;  state.counters "FooAvgRate"  = Counter numFoos,benchmark::Counter::kAvgThreadsRate ;When you're compiling in C++11 mode or later you can use std::initializer_list:When using the console reporter, by default, user counters are are printed atthe end after the table, the same way as items_processed</field></doc>
<doc><field name="id">1561</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">This is best for cases in which there are few counters,or where there are only a couple of lines per benchmark</field></doc>
<doc><field name="id">1562</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">Here's an example ofthe default output:passing the flag --benchmark_counters_tabular=true is passed:BM_UserCounter to BM_Factorial</field></doc>
<doc><field name="id">1563</field><field name="title">google-benchmark</field><field name="session">User-defined counters</field><field name="sentence">This is because BM_Factorial doesnot have the same counter set as BM_UserCounter.</field></doc>
<doc><field name="id">1564</field><field name="title">google-benchmark</field><field name="session">Exiting Benchmarks in Error</field><field name="sentence">When errors caused by external influences, such as file I/O and networkcommunication, occur within a benchmark theKeepRunning   are skipped</field></doc>
<doc><field name="id">1565</field><field name="title">google-benchmark</field><field name="session">Exiting Benchmarks in Error</field><field name="sentence">For the ranged-for version of the benchmark loopUsers must explicitly exit the loop, otherwise all iterations will be performed.Users may explicitly return to exit the benchmark immediately.The SkipWithError ..</field></doc>
<doc><field name="id">1566</field><field name="title">google-benchmark</field><field name="session">Exiting Benchmarks in Error</field><field name="sentence">function may be used at any point within the benchmark,including before and after the benchmark loop.For example:static void BM_test benchmark::State& state  {  auto resource = GetResource  ;  if  !resource.good    {  }  for  state.KeepRunning    {  }static void BM_test_ranged_fo benchmark::State & state  {  state.SkipWithError "test will not be entered" ;  for  auto _ : state  {  }</field></doc>
<doc><field name="id">1567</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">The --benchmark_filter= option can be used to only run the benchmarkswhich match the specified</field></doc>
<doc><field name="id">1568</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">For example:When the benchmark binary is executed, each benchmark function is run serially.The number of iterations to run is determined dynamically by running thebenchmark a few times and measuring the time taken and ensuring that theultimate result will be statistically stable</field></doc>
<doc><field name="id">1569</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">As such, faster benchmarkfunctions will be run for more iterations than slower benchmark functions, andthe number of iterations is thus reported.In all cases, the number of iterations for which the benchmark is run isgoverned by the amount of time the benchmark takes</field></doc>
<doc><field name="id">1570</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">Concretely, the number ofiterations is at least one, not more than 1e9, until CPU time is greater thanthe minimum time, or the wallclock time is 5x minimum time</field></doc>
<doc><field name="id">1571</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">The minimum time isset per benchmark by calling MinTime on the registered benchmark object.Average timings are then reported over the iterations run</field></doc>
<doc><field name="id">1572</field><field name="title">google-benchmark</field><field name="session">Running a subset of the benchmarks</field><field name="sentence">If multiplerepetitions are requested using the --benchmark_repetitions command-lineoption, or at registration time, the benchmark function will be run severaltimes and statistical results across these repetitions will also be reported.As well as the per-benchmark entries, a preamble in the report will includeinformation about the machine on which the benchmarks are run.</field></doc>
<doc><field name="id">1573</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">The library supports multiple output formats</field></doc>
<doc><field name="id">1574</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">Use the--benchmark_format= flag to set the format type</field></doc>
<doc><field name="id">1575</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">consoleis the default format.The Console format is intended to be a human readable format</field></doc>
<doc><field name="id">1576</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">By defaultthe format generates color output</field></doc>
<doc><field name="id">1577</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">Context is output on stderr and thetabular data on stdout</field></doc>
<doc><field name="id">1578</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">Example tabular output looks like:The JSON format outputs human readable json split into two top level attributes.The The CSV format outputs comma-separated values</field></doc>
<doc><field name="id">1579</field><field name="title">google-benchmark</field><field name="session">Output Formats</field><field name="sentence">The</field></doc>
<doc><field name="id">1580</field><field name="title">google-benchmark</field><field name="session">Output Files</field><field name="sentence">The library supports writing the output of the benchmark to a file specifiedby --benchmark_out does not suppress the console output.</field></doc>
<doc><field name="id">1581</field><field name="title">google-benchmark</field><field name="session">Result comparison</field><field name="sentence">It is possible to compare the benchmarking results</field></doc>
<doc><field name="id">1582</field><field name="title">google-benchmark</field><field name="session">Result comparison</field><field name="sentence">See  Additional Tooling Documentation  docs/tools.md</field></doc>
<doc><field name="id">1583</field><field name="title">google-benchmark</field><field name="session">Debug vs Release</field><field name="sentence">By default, benchmark builds as a debug library</field></doc>
<doc><field name="id">1584</field><field name="title">google-benchmark</field><field name="session">Debug vs Release</field><field name="sentence">You will see a warning in theoutput when this is the case</field></doc>
<doc><field name="id">1585</field><field name="title">google-benchmark</field><field name="session">Debug vs Release</field><field name="sentence">To build it as a release library instead, use:cache variables, if autodetection fails.If you are using clang, you may need to set LLVMNM_EXECUTABLE and LLVMRANLIB_EXECUTABLE cmake cache variables.</field></doc>
<doc><field name="id">1586</field><field name="title">google-benchmark</field><field name="session">Compiler Support</field><field name="sentence">Google Benchmark uses C++11 when building the library</field></doc>
<doc><field name="id">1587</field><field name="title">google-benchmark</field><field name="session">Compiler Support</field><field name="sentence">As such we requirea modern C++ toolchain, both compiler and standard library.The following minimum versions are strongly recommended build the library:Note: Using the library and its headers in C++03 is supported</field></doc>
<doc><field name="id">1588</field><field name="title">google-benchmark</field><field name="session">Compiler Support</field><field name="sentence">C++11 is onlyrequired to build the library.</field></doc>
<doc><field name="id">1589</field><field name="title">google-benchmark</field><field name="session">Disable CPU frequency scaling</field><field name="sentence">If you see this error:</field></doc>
<doc><field name="id">1590</field><field name="title">google-berrydb</field><field name="session">BerryDB</field><field name="sentence">**This is not an official Google product.*widely used at Google.This is an experimental implementation of a key-value store.</field></doc>
<doc><field name="id">1591</field><field name="title">google-berrydb</field><field name="session">Prerequisites</field><field name="sentence">This project uses  CMake  for building and testing</field></doc>
<doc><field name="id">1592</field><field name="title">google-berrydb</field><field name="session">Prerequisites</field><field name="sentence">CMake isavailable in all popular Linux distributions, as well as in Homebrew This project uses submodules for dependency management.autocomplete-clang and linter-clang with you-complete-me</field></doc>
<doc><field name="id">1593</field><field name="title">google-berrydb</field><field name="session">Prerequisites</field><field name="sentence">This requires setting up ycmd The following commands build the project.The following command  when executed from build/   re builds the project andruns the tests.The following command builds the project against the Android NDK, which isuseful for benchmarking against ARM processors.components</field></doc>
<doc><field name="id">1594</field><field name="title">google-berrydb</field><field name="session">Prerequisites</field><field name="sentence">CMakeLists.txt enforces these constraints, and third_party/README.md  ./third_party/README.md  describes the motivationsbehind them.</field></doc>
<doc><field name="id">1595</field><field name="title">google-berrydb</field><field name="session">Static Analysis</field><field name="sentence">This project is experimenting with Facebook Infer  for static analysis</field></doc>
<doc><field name="id">1596</field><field name="title">google-berrydb</field><field name="session">Static Analysis</field><field name="sentence">Thefollowing command collects diagnostics.</field></doc>
<doc><field name="id">1597</field><field name="title">google-bgu</field><field name="session">Bilateral Guided Upsampling</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">1598</field><field name="title">google-bgu</field><field name="session">Overview</field><field name="sentence">This is an implementation of **Bilateral Guided Upsampling*</field></doc>
<doc><field name="id">1599</field><field name="title">google-bgu</field><field name="session">Code structure</field><field name="sentence">We include a MATLAB implementation of the slow global optimization algorithm and a  Halide  implementation of the fast approximation algorithm</field></doc>
<doc><field name="id">1600</field><field name="title">google-bgu</field><field name="session">Code structure</field><field name="sentence">We also provide a trivial GLSL shader for the performing slicing on the GPU</field></doc>
<doc><field name="id">1601</field><field name="title">google-bgu</field><field name="session">Code structure</field><field name="sentence">A full OpenGL demo application in on our roadmap.We thank Elena Adams for the Parrot photo.</field></doc>
<doc><field name="id">1602</field><field name="title">google-bgu</field><field name="session">Build instructions  MATLAB</field><field name="sentence">Run MATLAB.</field></doc>
<doc><field name="id">1603</field><field name="title">google-bgu</field><field name="session">Build instructions  Halide, Linux and MacOS</field><field name="sentence">Our code should build and run on Windows but we have not tested it.Look at high_res_out.png and high_res_out_gray.png.</field></doc>
<doc><field name="id">1604</field><field name="title">google-bgu</field><field name="session">License</field><field name="sentence">Apache 2.0.</field></doc>
<doc><field name="id">1605</field><field name="title">google-binexport</field><field name="session">BinExport</field><field name="sentence">Copyright 2011-2017 Google Inc.Disclaimer: This is not an official Google product  experimental or otherwise ,it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">1606</field><field name="title">google-binexport</field><field name="session">Table of Contents</field><field name="sentence">BinExport is the exporter component of the  BinNaviproject  as well as BinDiff  It is a plugin for thecommercial IDA Pro disassembler and exports disassemblies into the PostgreSQLdatabase format that BinNavi requires.This repository contains the complete source code necessary to build the IDA Proplugin for Linux, macOS and Windows.</field></doc>
<doc><field name="id">1607</field><field name="title">google-binexport</field><field name="session">Installation</field><field name="sentence">Download the binaries from the release page and copy them into the IDA Proplugins directory</field></doc>
<doc><field name="id">1608</field><field name="title">google-binexport</field><field name="session">Installation</field><field name="sentence">These are the default paths:| OS| ------| Linux   | /opt/ida-7.0/plugins| macOS   | /Applications/IDA Pro 7.0/idabin/plugins  || Windows | %ProgramFiles x86 %\IDA 7.0\pluginsTo install just for the current user, copy the files into one of thesedirectories instead:| OS| ----------| Linux/macOS | ~/.idapro/plugins| Windows</field></doc>
<doc><field name="id">1609</field><field name="title">google-binexport</field><field name="session">Usage</field><field name="sentence">The main use case is via  BinNavi  However,BinExport can also be used to export IDA Pro disassembly to files of various In IDA, select Help|About programm..</field></doc>
<doc><field name="id">1610</field><field name="title">google-binexport</field><field name="session">Usage</field><field name="sentence">Click Addons..</field></doc>
<doc><field name="id">1611</field><field name="title">google-binexport</field><field name="session">Usage</field><field name="sentence">If installed correctly, the following dialog box appears:</field></doc>
<doc><field name="id">1612</field><field name="title">google-binexport</field><field name="session">Via the UI</field><field name="sentence">Open an IDB Select Edit|Plugins|BinExport 10 The following dialog box appears: Select the type of the file to be exportedNote: There is no UI for the database export.</field></doc>
<doc><field name="id">1613</field><field name="title">google-binexport</field><field name="session">IDC Scripting</field><field name="sentence">The BinExport plugin registers the IDC functions below</field></doc>
<doc><field name="id">1614</field><field name="title">google-binexport</field><field name="session">IDC Scripting</field><field name="sentence">The function names areversioned in order to support side-by-side installation of different versions i.e</field></doc>
<doc><field name="id">1615</field><field name="title">google-binexport</field><field name="session">IDC Scripting</field><field name="sentence">BinDiff's BinExport 8 .| IDC Function name| ---------------------| BinExport2Sql10| BinExport2Diff10| BinExport2Text10| BinExport2Statistics10 | Statistics text file | filenameBinExport also supports exporting to a database via the RunPlugin   IDCcase</field></doc>
<doc><field name="id">1616</field><field name="title">google-binexport</field><field name="session">IDC Scripting</field><field name="sentence">See also the CBinExportImporter class in BinNavi.</field></doc>
<doc><field name="id">1617</field><field name="title">google-binexport</field><field name="session">IDAPython</field><field name="sentence">The option flags are the same as IDC  listed above .BinExport defines the following plugin options, that can be specified on IDA'scommand line:| Option| -------------------------------| -OExporterHost:| -OExporterPort:| -OExporterUser:| -OExporterPassword:| -OExporterDatabase:| -OExporterSchema:| -OExporterLogFile:| -OExporterAlsoLogToStdErr:TRUE | If specified, also log to standard errorNote that these options must come before any files.</field></doc>
<doc><field name="id">1618</field><field name="title">google-binexport</field><field name="session">Preparing the build environment</field><field name="sentence">As we support exporting into PostgreSQL databases as well as a Protocol Bufferbased format, there are quite a few dependencies to satisfy:</field></doc>
<doc><field name="id">1619</field><field name="title">google-binexport</field><field name="session">Prerequisites</field><field name="sentence">The preferred build environment is Mac OS X 10.12 "Sierra"  64-bit Intel  usingXcode 8.Using macOS 10.13 "High Sierra" should also work.After installing the Developer Tools, make sure to install the command-linerequired by the PostgreSQL dependency</field></doc>
<doc><field name="id">1620</field><field name="title">google-binexport</field><field name="session">Prerequisites</field><field name="sentence">You can install Autotools via Homebrew   recommended  or via MacPorts  Follow the installationinstructions on the respective websites.For Homebrew:of the cloned repository.</field></doc>
<doc><field name="id">1621</field><field name="title">google-binexport</field><field name="session">IDA SDK</field><field name="sentence">Unzip the contents of the IDA SDK into third_party/idasdk</field></doc>
<doc><field name="id">1622</field><field name="title">google-binexport</field><field name="session">IDA SDK</field><field name="sentence">Shown commands arefor IDA 7.0:With all prerequisites in place, configure and build BinExport:libraries</field></doc>
<doc><field name="id">1623</field><field name="title">google-binexport</field><field name="session">IDA SDK</field><field name="sentence">If all went well, the build_mac/binexport-prefix directory shouldcontain two IDA plugin binaries binexport10.dylib and binexport1064.dylibfor use with ida and ida64, respectively.</field></doc>
<doc><field name="id">1624</field><field name="title">google-binexport</field><field name="session">CMake</field><field name="sentence">Download and install CMake from its  downloadpage  Make sure to select "Add CMake to the systemPATH for all users".</field></doc>
<doc><field name="id">1625</field><field name="title">google-binexport</field><field name="session">Windows</field><field name="sentence">The preferred build environment is Windows 10  64-bit Intel  using the VisualStudio 2017 compiler and the  Windows SDK for Windows10  The previous VisualStudio 2015 and earlier versions of Windows also work.</field></doc>
<doc><field name="id">1626</field><field name="title">google-binexport</field><field name="session">Git</field><field name="sentence">Download and install Git from its  downloadpage  Make sure to select the followingoptions: %ProgramFiles%\Git\bin\git.exe have the setup utility add Git to your system path</field></doc>
<doc><field name="id">1627</field><field name="title">google-binexport</field><field name="session">Git</field><field name="sentence">console window"</field></doc>
<doc><field name="id">1628</field><field name="title">google-binexport</field><field name="session">Perl</field><field name="sentence">Download and install ActiveState Perl from its  downloadpage  This should add Perl tothe system path.</field></doc>
<doc><field name="id">1629</field><field name="title">google-binexport</field><field name="session">Prepare</field><field name="sentence">The following sections assume an open command prompt with the current workingdirectory located at the root of the cloned BinExport repository:Unzip the contents of the IDA SDK into third_party/idasdk</field></doc>
<doc><field name="id">1630</field><field name="title">google-binexport</field><field name="session">Prepare</field><field name="sentence">Shown commands arefor IDA 7.0, assuming that Git was installed into the default directory first:With all prerequisites in place, configure and build BinExport:This will download and build OpenSSL, Protocol Buffers and the PostgreSQL clientlibraries</field></doc>
<doc><field name="id">1631</field><field name="title">google-binexport</field><field name="session">Prepare</field><field name="sentence">If all went well, the build_msvc\binexport-prefix directory shouldcontain two IDA plugin binaries binexport10.dll and binexport1064.dll for usewith ida.exe and ida64.exe, respectively.</field></doc>
<doc><field name="id">1632</field><field name="title">google-binnavi</field><field name="session">BinNavi</field><field name="sentence">Copyright 2011-2016 Google Inc.</field></doc>
<doc><field name="id">1633</field><field name="title">google-binnavi</field><field name="session">Introduction</field><field name="sentence">BinNavi is a binary analysis IDE navigate, edit, and annotate control-flow-graphs of disassembled code, do thesame for the callgraph of the executable, collect and combine execution traces,and generally keep track of analysis results among a group of analysts.</field></doc>
<doc><field name="id">1634</field><field name="title">google-binnavi</field><field name="session">Complications from a third-party dependency</field><field name="sentence">BinNavi uses a commercial third-party graph visualisation library  yFiles  fordisplaying and laying out graphs</field></doc>
<doc><field name="id">1635</field><field name="title">google-binnavi</field><field name="session">Complications from a third-party dependency</field><field name="sentence">This library is immensely powerful, and noteasily replaceable.In order to perform direct development using yFiles, you need a developerlicense for it</field></doc>
<doc><field name="id">1636</field><field name="title">google-binnavi</field><field name="session">Complications from a third-party dependency</field><field name="sentence">At the same time, we want the community to be able to contribute toBinNavi without needing a commercial yFiles license</field></doc>
<doc><field name="id">1637</field><field name="title">google-binnavi</field><field name="session">Complications from a third-party dependency</field><field name="sentence">In order to do this andconform to the yFiles license, all interfaces to yFiles need to be properlyIn order to achieve this, we did the following:1  BinNavi and all the libraries have been split into two: The parts of theproject that directly depend on yFiles were split into subpackages calledsubpackages or add code in BinNavi and do not have a yFiles license, you can freely do pretty much  whatever you want in the non-yfileswrap packages put the lib/yfileswrap-obfuscated.jar into your classpath to test and seethe results.If you wish to make changes to the yfileswrap subdirectories, please be awarethat you will need a valid yFiles license to the BinNavi project has to honor their license agreement</field></doc>
<doc><field name="id">1638</field><field name="title">google-binnavi</field><field name="session">Complications from a third-party dependency</field><field name="sentence">This means thatyou can't simply expose their inner APIs under different names etc.We will enforce this BinNavi with the yFiles dependency, and we will make sure that any code we pullin respects the yFiles license.</field></doc>
<doc><field name="id">1639</field><field name="title">google-binnavi</field><field name="session">Note for maintainers/yFiles license holders</field><field name="sentence">To rebuild the yFiles wrapper library, first copy third_party/java/yfiles</field></doc>
<doc><field name="id">1640</field><field name="title">google-binnavi</field><field name="session">Note for maintainers/yFiles license holders</field><field name="sentence">Then rebuild with:</field></doc>
<doc><field name="id">1641</field><field name="title">google-binnavi</field><field name="session">Building BinNavi from scratch</field><field name="sentence">BinNavi uses Maven for its dependency management, but not for the actual buildyet</field></doc>
<doc><field name="id">1642</field><field name="title">google-binnavi</field><field name="session">Building BinNavi from scratch</field><field name="sentence">To build from scratch use these commands:</field></doc>
<doc><field name="id">1643</field><field name="title">google-binnavi</field><field name="session">Running BinNavi for the first time</field><field name="sentence">Please be aware that BinNavi makes use of a central PostgreSQL database forstoring disassemblies/comments/traces running somewhere accessible to you</field></doc>
<doc><field name="id">1644</field><field name="title">google-binnavi</field><field name="session">Running BinNavi for the first time</field><field name="sentence">You can launch BinNavi as follows:*Note: HiDPI displays may not scale properly with Java Use Java 9 if this is an issue for you.*</field></doc>
<doc><field name="id">1645</field><field name="title">google-binnavi</field><field name="session">Importing the project into Eclipse</field><field name="sentence">Loading the code into Eclipse for further development requires a little bit ofInstall the dependencies  as described above  and make sure you have aCreate a new "Java Project From Existing Ant Buildfile" and use the file build.xmlSelect the "javac" task found in target "build-binnavi-jar"Open the "Project Properties" dialog and choose "Java build Path" showing the "Source" tab.Remove all but one source folder and edit it to have the following properties:Go to "Run->Run As", select "Java Application" and then search for CMain.You should be ready to go from here.</field></doc>
<doc><field name="id">1646</field><field name="title">google-binnavi</field><field name="session">Exporting disassemblies from IDA</field><field name="sentence">As part of this project, we are distributing an IDA Pro plugin that exportsdisassemblies from IDA into the PostgreSQL database format that BinNavirequires</field></doc>
<doc><field name="id">1647</field><field name="title">google-binnavi</field><field name="session">Exporting disassemblies from IDA</field><field name="sentence">When running BinNavi, simply configure the right path for IDA,click on the "install plugin" button if necessary -import disassemblies.</field></doc>
<doc><field name="id">1648</field><field name="title">google-binnavi</field><field name="session">Using other disassemblers than IDA</field><field name="sentence">Right now, we only have the IDA export plugin that someone will help us build export functionality for other disassemblersin the near future.</field></doc>
<doc><field name="id">1649</field><field name="title">google-binnavi</field><field name="session">Building BinNavi with Gradle</field><field name="sentence">*Please note that at current the Maven build is the authorative build system for BinNavi</field></doc>
<doc><field name="id">1650</field><field name="title">google-binnavi</field><field name="session">Building BinNavi with Gradle</field><field name="sentence">Gradle is purely experimental and is likely to change.*You can build BinNavi with gradle by running the following:On Linux / OS X:  On Windows:  ./gradlew.bat clean jarThis will produce the jar in the project route under build/libs/</field></doc>
<doc><field name="id">1651</field><field name="title">google-binnavi</field><field name="session">Loading the project into Eclipse with Gradle</field><field name="sentence">On Linux / OS X:  On Windows:  ./gradlew.bat eclipseAs part of the project creation process it will download the dependencies</field></doc>
<doc><field name="id">1652</field><field name="title">google-binnavi</field><field name="session">Loading the project into Eclipse with Gradle</field><field name="sentence">Once completedo the following to load into Eclipse:Open Eclipse.File > Import..</field></doc>
<doc><field name="id">1653</field><field name="title">google-binnavi</field><field name="session">Loading the project into Eclipse with Gradle</field><field name="sentence">from menu bar.From the window that appears select General > Existing Projects into Workspace.Ensure the "Select root directory" radio button is selected.Click Browse..</field></doc>
<doc><field name="id">1654</field><field name="title">google-binnavi</field><field name="session">Loading the project into Eclipse with Gradle</field><field name="sentence">and navigate to the project directory</field></doc>
<doc><field name="id">1655</field><field name="title">google-binnavi</field><field name="session">Loading the project into Eclipse with Gradle</field><field name="sentence">The projects area should now have "binnavi" and a tick next to it.Press Finish.You Eclipse workspace is now setup and complete for BinNavi</field></doc>
<doc><field name="id">1656</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">On Linux / OS X:  On Windows:  ./gradlew.bat ideaAs part of the project creation process it will download the dependencies</field></doc>
<doc><field name="id">1657</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">Once completedo the following to load into IntelliJ:Open IntelliJ.Select "Open" from main window.Navigate to the project folder and should see the IntelliJ icon</field></doc>
<doc><field name="id">1658</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">This signifies its a project.Press Ok and wait for it to import and load</field></doc>
<doc><field name="id">1659</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">IntelliJ might not recognise it as a gradle project</field></doc>
<doc><field name="id">1660</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">Select enable from the popup window and use local gradle</field></doc>
<doc><field name="id">1661</field><field name="title">google-binnavi</field><field name="session">Loading the project into IntelliJ with Gradle</field><field name="sentence">Your IntelliJ environment is now setup and complete for IntelliJ.</field></doc>
<doc><field name="id">1662</field><field name="title">google-bitutils</field><field name="session">bitutils</field><field name="sentence">This is a collection of scripts which make working with binary numbers a bit</field></doc>
<doc><field name="id">1663</field><field name="title">google-bloaty</field><field name="session">Bloaty McBloatface: a size profiler for binaries</field><field name="sentence">Ever wondered what's making your binary big?  BloatyMcBloatface will show you a size profile of the binary soyou can understand what's taking up space inside.Bloaty works on binaries, shared objects, object files, andstatic libraries  .a files</field></doc>
<doc><field name="id">1664</field><field name="title">google-bloaty</field><field name="session">Bloaty McBloatface: a size profiler for binaries</field><field name="sentence">The following file formatsare supported:in adding support for them  I may implement these myself butwould also be happy to get contributions!</field></doc>
<doc><field name="id">1665</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">Bloaty uses CMake to build</field></doc>
<doc><field name="id">1666</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">All dependencies are included as Git submodules.To build, simply run:Run it directly on a binary target</field></doc>
<doc><field name="id">1667</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">For example, run it on itself.will take when it is loaded into memory</field></doc>
<doc><field name="id">1668</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">The "FILE SIZE"column tells you about how much space the binary is takingon disk</field></doc>
<doc><field name="id">1669</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">These two can be very different from each other:   zero-initialized data .The default breakdown in Bloaty is by sections, but manyother ways of slicing the binary are supported such assymbols and segments</field></doc>
<doc><field name="id">1670</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">If you compiled with debug info, youcan even break down by compile units and inlines!Bloaty McBloatface: a size profiler for binaries.USAGE: bloaty  OPTION ..</field></doc>
<doc><field name="id">1671</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">FILE..</field></doc>
<doc><field name="id">1672</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">-  --tsv  -c FILE  -d SOURCE,SOURCE   Comma-separated list of sources to scan</field></doc>
<doc><field name="id">1673</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">--debug-file=FILE  Use this file for debug symbols and/or symbol table</field></doc>
<doc><field name="id">1674</field><field name="title">google-bloaty</field><field name="session">Building Bloaty</field><field name="sentence">-C MODE  --demangle=MODE  --disassemble=FUNCTION  -n NUM  -w  --help  --list-sourcesOptions for debugging Bloaty:  --debug-fileoff=OFF  -v</field></doc>
<doc><field name="id">1675</field><field name="title">google-bloaty</field><field name="session">Size Diffs</field><field name="sentence">You can use Bloaty to see how the size of a binary changed.On the command-line, pass -- followed by the files youwant to use as the diff base.For example, here is a size diff between a couple different versionsof Bloaty, showing how it grew when I added some features.its previous size</field></doc>
<doc><field name="id">1676</field><field name="title">google-bloaty</field><field name="session">Size Diffs</field><field name="sentence">Most sections grew, but one section atthe bottom  .debug_str  shrank</field></doc>
<doc><field name="id">1677</field><field name="title">google-bloaty</field><field name="session">Size Diffs</field><field name="sentence">The "TOTAL" line showshow much the size changed overall.</field></doc>
<doc><field name="id">1678</field><field name="title">google-bloaty</field><field name="session">Hierarchical Profiles</field><field name="sentence">Bloaty supports breaking the binary down in lots ofdifferent ways</field></doc>
<doc><field name="id">1679</field><field name="title">google-bloaty</field><field name="session">Hierarchical Profiles</field><field name="sentence">You can combine multiple data sources intoa single hierarchical profile</field></doc>
<doc><field name="id">1680</field><field name="title">google-bloaty</field><field name="session">Hierarchical Profiles</field><field name="sentence">For example, we can use thesegments and sections data sources in a single report:values are grouped into an  Other  bin</field></doc>
<doc><field name="id">1681</field><field name="title">google-bloaty</field><field name="session">Hierarchical Profiles</field><field name="sentence">Use -n to override this setting</field></doc>
<doc><field name="id">1682</field><field name="title">google-bloaty</field><field name="session">Hierarchical Profiles</field><field name="sentence">If you pass -n 0, all datawill be output without collapsing anything into  Other .</field></doc>
<doc><field name="id">1683</field><field name="title">google-bloaty</field><field name="session">Debugging Stripped Binaries</field><field name="sentence">Bloaty supports reading debuginfo/symbols from separatebinaries</field></doc>
<doc><field name="id">1684</field><field name="title">google-bloaty</field><field name="session">Debugging Stripped Binaries</field><field name="sentence">This lets you profile a stripped binary, even fordata sources like "compileunits" or "symbols" that requirethis extra information.Bloaty uses build IDs to verify that the binary and thedebug file match</field></doc>
<doc><field name="id">1685</field><field name="title">google-bloaty</field><field name="session">Debugging Stripped Binaries</field><field name="sentence">Otherwise the results would be nonsense this kind of mismatch might sound unlikely but it's a veryeasy mistake to make, and one that I made several times evenas Bloaty's author! .If your binary has a build ID, then using separate debugfiles is as simple as:</field></doc>
<doc><field name="id">1686</field><field name="title">google-bloaty</field><field name="session">ELF</field><field name="sentence">For ELF, make sure you are compiling with build IDs enabled.With gcc this happens automatically, but  Clang decided notto make this the default, since it makes the linkslower For Clang add -Wl,--build-id to your link line</field></doc>
<doc><field name="id">1687</field><field name="title">google-bloaty</field><field name="session">ELF</field><field name="sentence">If youwant a slightly faster link and don't care aboutreproducibility, you can use -Wl,--build-id=uuid instead .Bloaty does not currently support the GNU debuglink orlooking up debug files by build ID,  which are the methodsGDB uses to find debugfiles If there are use cases where Bloaty's --debug-file optionwon't work, we can reconsider implementing these.</field></doc>
<doc><field name="id">1688</field><field name="title">google-bloaty</field><field name="session">Mach-O</field><field name="sentence">Mach-O files always have build IDs  as far as I can tell ,so no special configuration is needed to make sure you getMach-O puts debug information in separate files which youcan create with dsymutil:Any options that you can specify on the command-line, youcan put into a configuration file instead</field></doc>
<doc><field name="id">1689</field><field name="title">google-bloaty</field><field name="session">Mach-O</field><field name="sentence">Then use can use-c FILE to load those options from the config file</field></doc>
<doc><field name="id">1690</field><field name="title">google-bloaty</field><field name="session">Mach-O</field><field name="sentence">Also,a few features are only available with configuration filesand cannot be specify on the command-line.The configuration file is a in Protocol Buffers text format.The schema is the Options message in src/bloaty.proto  src/bloaty.proto .The two most useful cases for configuration files are:You have too many input files to put on the command-line.For custom data sources, it can be very useful to put</field></doc>
<doc><field name="id">1691</field><field name="title">google-bloaty</field><field name="session">Data Sources</field><field name="sentence">Bloaty has many data sources built in</field></doc>
<doc><field name="id">1692</field><field name="title">google-bloaty</field><field name="session">Data Sources</field><field name="sentence">These all providedifferent ways of looking at the binary</field></doc>
<doc><field name="id">1693</field><field name="title">google-bloaty</field><field name="session">Data Sources</field><field name="sentence">You can alsocreate your own data sources by applying regexes to thebuilt-in data sources  see "Custom Data Sources" below .While Bloaty works on binaries, shared objects, objectfiles, and static libraries  .a files , some of the datasources don't work on object files</field></doc>
<doc><field name="id">1694</field><field name="title">google-bloaty</field><field name="session">Data Sources</field><field name="sentence">This applies especiallyto data sources that read debug info.</field></doc>
<doc><field name="id">1695</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">Segments are what the run-time loader uses to determine whatparts of the binary need to be loaded/mapped into memory.There are usually just a few segments: one for each set ofmmap   permissions required:Object files and static libraries don't have segments.However we fake it by grouping sections by their flags.This gives us a break-down sort of like real segments.Sections give us a bit more granular look into the binary.If we want to find the symbol table, the unwind information,or the debug information, each kind of information lives inits own section</field></doc>
<doc><field name="id">1696</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">Bloaty's default output is sections.Symbols come from the symbol table, and represent individualfunctions or variables.or --demangle=MODE flag</field></doc>
<doc><field name="id">1697</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">You can also specify thedemangling mode explicitly in the -d switch</field></doc>
<doc><field name="id">1698</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">We havethree different demangling modes:  are omitted</field></doc>
<doc><field name="id">1699</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">For example:  bloaty::dwarf::FormReader<>::GetFunctionForForm<></field></doc>
<doc><field name="id">1700</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">This is the default.One very handy thing about -C short  the default  is thatit groups all template instantiations together, regardlessof their parameters</field></doc>
<doc><field name="id">1701</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">You can use this to determine how muchcode size you are paying by doing multiple instantiations oftemplates</field></doc>
<doc><field name="id">1702</field><field name="title">google-bloaty</field><field name="session">Segments</field><field name="sentence">Try bloaty -d shortsymbols,fullsymbols.</field></doc>
<doc><field name="id">1703</field><field name="title">google-bloaty</field><field name="session">Input Files</field><field name="sentence">When you pass multiple files to Bloaty, the inputfilessource will let you break it down by input file:When you are running Bloaty on a .a file, the armemberssource will let you break it down by .o file inside thefiles, but it won't be very useful since it will always justresolve to the input file  the .a file .</field></doc>
<doc><field name="id">1704</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">Using debug information, we can tell what compile unit  andcorresponding source file  each bit of the binary came from.There are a couple different places in DWARF we can look forthis information; currently we mainly use the.debug_aranges section</field></doc>
<doc><field name="id">1705</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">It's not perfect and sometimesyou'll see some of the binary show up as  None  if it'snot mentioned in aranges  improving this is a TODO</field></doc>
<doc><field name="id">1706</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">But itcan tell us a lot.The DWARF debugging information also contains "line info"information that understands inlining</field></doc>
<doc><field name="id">1707</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">So within afunction, it will know which instructions came from aninlined function from a header file</field></doc>
<doc><field name="id">1708</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">This is theinformation the debugger uses to point at a specific sourceline as you're tracing through a program.Sometimes you want to munge the labels from an existing datasource</field></doc>
<doc><field name="id">1709</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">For example, when we use "compileunits" on Bloatyitself, we see files from all our dependencies mixedfrom, we can write a custom data source</field></doc>
<doc><field name="id">1710</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">It specifies thebase data source and a set of regexes to apply to it</field></doc>
<doc><field name="id">1711</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">Theregexes are tried in order, and the first matching regexwill cause the entire label to be rewritten to thereplacement text</field></doc>
<doc><field name="id">1712</field><field name="title">google-bloaty</field><field name="session">Compile Units</field><field name="sentence">Regexes follow  RE2syntax  and thereplacement can refer to capture groups.custom_data_source: {  name: "bloaty_package"  base_data_source: "compileunits"  }  rewrite: {  }Then use the data source like so:bloaty_package source with the original compileunitsHere are some tentative plans for future features.</field></doc>
<doc><field name="id">1713</field><field name="title">google-bloaty</field><field name="session">Understanding Symbol References</field><field name="sentence">If we can analyze references between symbols, this wouldenable a lot of features:  -fdata-sections -Wl,-gc-sections</field></doc>
<doc><field name="id">1714</field><field name="title">google-bloaty</field><field name="session">Understanding Symbol References</field><field name="sentence">binary in this way.</field></doc>
<doc><field name="id">1715</field><field name="title">google-blockly-devtools</field><field name="session">Blockly Developer Tools</field><field name="sentence">This is the home of Google's Blockly Developer Tools.Find out more at the develop page  on GitHub  or on the developer forum Production version is stored here   source Want to contribute? Great! First, read our guidelines for contributors</field></doc>
<doc><field name="id">1716</field><field name="title">google-blockly-devtools</field><field name="session">Install node and NW.js</field><field name="sentence">In order to properly run and test Blockly's devtools, install node.js  and NW.js  on your computer.Instructions for installation can be found on the linked sites.</field></doc>
<doc><field name="id">1717</field><field name="title">google-blockly-devtools</field><field name="session">Install Devtools</field><field name="sentence">In your devtools directory runFind the relative path to nwjs/nw that you installed onto your computer.Run the following command from the devtools repo's directory.</field></doc>
<doc><field name="id">1718</field><field name="title">google-blockly-devtools</field><field name="session">Closure dependency error</field><field name="sentence">If you get an error about "closure" upon loading the app, it probably means theblockly-devtools/closure-library/ directory has not been set up.Try running:Alternatively, install the  closure-library into that directory</field></doc>
<doc><field name="id">1719</field><field name="title">google-blockly-devtools</field><field name="session">Closure dependency error</field><field name="sentence">If you are working with the web library, you may prefer to share a localcopy via a  symlink   i.e., ln -s path/to/closure-library .We are currently working on removing this dependency, but this will fix the issue until then.</field></doc>
<doc><field name="id">1720</field><field name="title">google-blockly-ios</field><field name="session">Blockly for iOS</field><field name="sentence">Blockly  1  is a library for building drag-and-drop visual editors forJavaScript, Python, Lua, and several other programming languages.Blockly for iOS is similar to its web counterpart in terms of API, but is:Here is a demo of using Blockly for iOS to program a "turtle":</field></doc>
<doc><field name="id">1721</field><field name="title">google-blockly-ios</field><field name="session">Features</field><field name="sentence">Blockly for iOS includes:all three platforms to support cross-platform development.</field></doc>
<doc><field name="id">1722</field><field name="title">google-blockly-ios</field><field name="session">Requirements</field><field name="sentence">Supports devices running **iOS 8.0 or above**.</field></doc>
<doc><field name="id">1723</field><field name="title">google-blockly-ios</field><field name="session">Get Started</field><field name="sentence">To get started using Blockly for iOS, follow  this guide  4 .To run through an exercise in creating an iOS app with Blockly, see our  codelab  10 .</field></doc>
<doc><field name="id">1724</field><field name="title">google-blockly-ios</field><field name="session">API Reference</field><field name="sentence">For complete API documentation, visit our  API Reference Page  5 .</field></doc>
<doc><field name="id">1725</field><field name="title">google-blockly-ios</field><field name="session">License</field><field name="sentence">Google is proud to offer Blockly for iOS for free and open sourceunder the  Apache License, version 2.0  6 .</field></doc>
<doc><field name="id">1726</field><field name="title">google-blockly-ios</field><field name="session">Community</field><field name="sentence">Blockly has an active  developer forum  7</field></doc>
<doc><field name="id">1727</field><field name="title">google-blockly-ios</field><field name="session">Community</field><field name="sentence">Please drop by and say hello</field></doc>
<doc><field name="id">1728</field><field name="title">google-blockly-ios</field><field name="session">Community</field><field name="sentence">Show usyour prototypes early; collectively we have a lot of experience and can offerhints which will save you time.</field></doc>
<doc><field name="id">1729</field><field name="title">google-blockly-ios</field><field name="session">Registration</field><field name="sentence">Help us focus our development efforts by telling us  what you are doing withBlockly  8</field></doc>
<doc><field name="id">1730</field><field name="title">google-blockly-ios</field><field name="session">Registration</field><field name="sentence">The questionnaire only takes a few minutes and will help us bettersupport the Blockly community.</field></doc>
<doc><field name="id">1731</field><field name="title">google-blockly-ios</field><field name="session">Contributing</field><field name="sentence">Want to contribute? Great! First, read  our guidelines for contributors  9</field></doc>
<doc><field name="id">1732</field><field name="title">google-blockly-ios</field><field name="session">Contributing</field><field name="sentence">1 :  "Blockly documentation" 2 :  "Blockly for Web repo on GitHub" 3 :  "Blockly for Android repo on GitHub" 4 :  "Blockly for iOS developer tutorial" 5 :  "Blockly for iOS API Reference Documentation" 6 :  "Apache open source license, version 2.0" 7 :  "Blockly developer forum" 8 :  "Blockly developer registration form" 9 :  "Contributor guidelines" 10 :</field></doc>
<doc><field name="id">1733</field><field name="title">google-blockly</field><field name="session">Blockly</field><field name="sentence">Google's Blockly is a web-based, visual programming editor</field></doc>
<doc><field name="id">1734</field><field name="title">google-blockly</field><field name="session">Blockly</field><field name="sentence">Users can dragblocks together to build programs</field></doc>
<doc><field name="id">1735</field><field name="title">google-blockly</field><field name="session">Blockly</field><field name="sentence">All code is free and open source.**The project page is !  Blockly has an active  developer forum  Please drop by and say hello</field></doc>
<doc><field name="id">1736</field><field name="title">google-blockly</field><field name="session">Blockly</field><field name="sentence">Show us your prototypes early; collectively we have a lot of experience and can offer hints which will save you time.Help us focus our development efforts by telling us  what you are doing withBlockly  The questionnaire only takesa few minutes and will help us better support the Blockly community.Want to contribute? Great! First, read  our guidelines for contributors</field></doc>
<doc><field name="id">1737</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Blue-Green Deployment controller</field><field name="sentence">**This is not an official Google product**This repository implements a simple blue-green deployment controller based on  kubebuilder  framework.The controller maintains 2 ReplicaSets  blue and green  all the time, alternating between the colors for new rollouts.</field></doc>
<doc><field name="id">1738</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Running Locally</field><field name="sentence">3 terminals are needed to run the controller locally  one for running local cluster, another for running the controller, and last one for interacting with the controller .Following step-by-step commands assume downloaded release files have been extracted to a directory named bgd</field></doc>
<doc><field name="id">1739</field><field name="title">google-blue-green-deployment-controller</field><field name="session">navigate to "bgd" directory</field><field name="sentence">cd //bgd</field></doc>
<doc><field name="id">1740</field><field name="title">google-blue-green-deployment-controller</field><field name="session">compile the codes</field><field name="sentence">GOBIN=$ pwd /bin go install //bgd/cmd/controller-manager</field></doc>
<doc><field name="id">1741</field><field name="title">google-blue-green-deployment-controller</field><field name="session">run the controller</field><field name="sentence">bin/controller-manager --kubeconfig /var/run/kubernetes/admin.kubeconfig</field></doc>
<doc><field name="id">1742</field><field name="title">google-blue-green-deployment-controller</field><field name="session">third terminal ###</field><field name="sentence">kubectl edit bluegreendeployment blue-green-deployment</field></doc>
<doc><field name="id">1743</field><field name="title">google-blue-green-deployment-controller</field><field name="session">export kubeconfig</field><field name="sentence">export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig</field></doc>
<doc><field name="id">1744</field><field name="title">google-blue-green-deployment-controller</field><field name="session">create BlueGreenDeployment object</field><field name="sentence">kubectl create -f hack/sample/bluegreendeployment.yaml</field></doc>
<doc><field name="id">1745</field><field name="title">google-blue-green-deployment-controller</field><field name="session">check ReplicaSets, pods, and service created through the custom resource</field><field name="sentence">kubectl get allWhen the BlueGreenDeployment  BGD  object is created, the controller creates 2 ReplicaSets based on pod spec of the BGD object</field></doc>
<doc><field name="id">1746</field><field name="title">google-blue-green-deployment-controller</field><field name="session">check ReplicaSets, pods, and service created through the custom resource</field><field name="sentence">Blue RS is active  has specified number of available pods  while green RS is inactive  0 available pods</field></doc>
<doc><field name="id">1747</field><field name="title">google-blue-green-deployment-controller</field><field name="session">check ReplicaSets, pods, and service created through the custom resource</field><field name="sentence">The controller also creates a service pointing to the active blue RS.</field></doc>
<doc><field name="id">1748</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Details</field><field name="sentence">The controller runs an infinite loop to check pod spec difference between the active RS and BGD object.If there is a discrepancy, the controller checks whether inactive RS has matching pod spec.If it is a match, the controller changes service to point to the inactive RS and makes the active RS inactive.If it is not a match, the controller deletes the inactive RS, creates a new RS, and waits for all pods of the new RS to become available.After the new RS becomes available, the controller points the service to the new RS and makes the active RS inactive.You can edit the BGD object to roll out new deployment versions:</field></doc>
<doc><field name="id">1749</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Cleanup</field><field name="sentence">When the controller is terminated, all created resources will stay intact</field></doc>
<doc><field name="id">1750</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Cleanup</field><field name="sentence">When the controller is rebooted, it will pick up the resources</field></doc>
<doc><field name="id">1751</field><field name="title">google-blue-green-deployment-controller</field><field name="session">Cleanup</field><field name="sentence">If you want the resources to be cleaned up after terminating the controller, you have to delete them manually.You can clean up the CRD with:CRD deletion cleans up the CRD, bluegreendeployment custom resource, and ReplicaSets.You can also clean up the bluegreendeployment custom resource with:Custom resource deletion cleans up the custom resource and ReplicaSets.For now, you have to manually delete the bgd-svc service.</field></doc>
<doc><field name="id">1752</field><field name="title">google-bluesky-watchface</field><field name="session">Blue Sky</field><field name="sentence">! Screenshot  screenshot.png Blue Sky is a watchface that shows the Sun as an hour hand against the bluesky</field></doc>
<doc><field name="id">1753</field><field name="title">google-bluesky-watchface</field><field name="session">Blue Sky</field><field name="sentence">Calendar events are displayed as buildings in a city's skyline around a12 or 24 hour face</field></doc>
<doc><field name="id">1754</field><field name="title">google-bluesky-watchface</field><field name="session">Blue Sky</field><field name="sentence">Shorter events resemble tall towers while longer eventslook more like wide warehouses</field></doc>
<doc><field name="id">1755</field><field name="title">google-bluesky-watchface</field><field name="session">Blue Sky</field><field name="sentence">While Pebble's built in timeline feature makesit easy to find out more about these events, a companion app is required to getthe same information into the watch face itself</field></doc>
<doc><field name="id">1756</field><field name="title">google-bluesky-watchface</field><field name="session">Blue Sky</field><field name="sentence">Only Android is supported.Before submitting a pull request, please review CONTRIBUTING.md  CONTRIBUTING.md .Licensed under Apache 2.0, see  LICENSE  LICENSE .This is not an official Google product.</field></doc>
<doc><field name="id">1757</field><field name="title">google-bluesky-watchface</field><field name="session">Installation</field><field name="sentence">Since this app is not yet available in the  Pebble Appstore   , it can only beinstalled using developer tools.Install the watchface:Install the  Pebble SDK   .Learn how to tell the command line tools where your watch is:  Pebblepebble install Pebble Appstore :  Pebble SDK :  Pebble Tools : Install the Android companion app:Install the  Android SDK   .Set the ./gradlew installDebugLaunch the companion app</field></doc>
<doc><field name="id">1758</field><field name="title">google-bluesky-watchface</field><field name="session">Installation</field><field name="sentence">Until a newly installed app is launched for the Android SDK :  Android Pebble App :</field></doc>
<doc><field name="id">1759</field><field name="title">google-bluesky-watchface</field><field name="session">To Do</field><field name="sentence">The main task right now is to fix the flow of communication</field></doc>
<doc><field name="id">1760</field><field name="title">google-bluesky-watchface</field><field name="session">To Do</field><field name="sentence">It's been drivenby Pebble-side logic, but should be driven by the device with the largerSee  doc/faults.md  doc/faults.md  for more details.Once the above is complete, it'll be time to fix up the user interface</field></doc>
<doc><field name="id">1761</field><field name="title">google-bluesky-watchface</field><field name="session">To Do</field><field name="sentence">date.Finally, a bit more work can be done to polish things up and publish this foranyone to use.</field></doc>
<doc><field name="id">1762</field><field name="title">google-boardgame.io</field><field name="session">Installation</field><field name="sentence">See  changelog  docs/CHANGELOG.md .</field></doc>
<doc><field name="id">1763</field><field name="title">google-boardgame.io</field><field name="session">Contributing</field><field name="sentence">See the contributing  guidelines  CONTRIBUTING.md</field></doc>
<doc><field name="id">1764</field><field name="title">google-boardgame.io</field><field name="session">Contributing</field><field name="sentence">Also take a look at the  roadmap  docs/roadmap.md to find things that you could contribute to.</field></doc>
<doc><field name="id">1765</field><field name="title">google-boardgame.io</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">1766</field><field name="title">google-boardgame.io</field><field name="session">Disclaimer</field><field name="sentence">It's a Googler'shobby project that's supported by contributions from the</field></doc>
<doc><field name="id">1767</field><field name="title">google-bochspwn-reloaded</field><field name="session">Bochspwn Reloaded</field><field name="sentence">Bochspwn Reloaded is an instrumentation module for the  Bochs IA-32 emulator  similar to the original  Bochspwn  project from It performs taint tracking of the kernel address space of the guest operating systems, to detect the disclosure of uninitialized kernel stack/heap memory to user-mode and other data sinks</field></doc>
<doc><field name="id">1768</field><field name="title">google-bochspwn-reloaded</field><field name="session">Bochspwn Reloaded</field><field name="sentence">It helped us identify over  70  bugs in the Windows kernel, and more than  10  lesser bugs in Linux in 2017 and early The tool was discussed at the  REcon Montreal   Black Hat USA  and  INFILTRATE  conferences, as well as in the    Detecting Kernel Memory Disclosure with x86 Emulation and Taint Tracking  white paper</field></doc>
<doc><field name="id">1769</field><field name="title">google-bochspwn-reloaded</field><field name="session">Bochspwn Reloaded</field><field name="sentence">The paper includes a comprehensive description of the general kernel infoleak bug class, as well as an in-depth study of Bochspwn Reloaded and its inner workings</field></doc>
<doc><field name="id">1770</field><field name="title">google-bochspwn-reloaded</field><field name="session">Bochspwn Reloaded</field><field name="sentence">We highly recommend the read before diving right into the source code, as it may answer many potential questions that may arise while experimenting with the tool</field></doc>
<doc><field name="id">1771</field><field name="title">google-bochspwn-reloaded</field><field name="session">Bochspwn Reloaded</field><field name="sentence">Specifically, Chapter 3 covers the fundamental ideas behind it and the implementation details of the software.</field></doc>
<doc><field name="id">1772</field><field name="title">google-bochspwn-reloaded</field><field name="session">Instrumentation types</field><field name="sentence">The repository contains four directories, each comprising a separate Bochs instrumentation module:</field></doc>
<doc><field name="id">1773</field><field name="title">google-bochspwn-reloaded</field><field name="session">Building</field><field name="sentence">The steps required to cross-compile Bochspwn Reloaded on Linux to run on Windows are enumerated below</field></doc>
<doc><field name="id">1774</field><field name="title">google-bochspwn-reloaded</field><field name="session">Building</field><field name="sentence">For additional reference, you may find the  Bochspwn documentation  useful.Install the This should result in the creation of a 64-bit PE file named bochs, which can be then copied to a Windows host and run from there:In order to use the newly compiled Bochs emulator on your Windows host, perform the following steps:Download and install Bochs for Windows, which will supply parts of the executive environment such as ROM code not being built into the main executable.Create a bochsrc.txt Bochs configuration file, or modify an existing one.Create a raw disk image with the tested guest operating system, preferably by first installing the OS in a normal virtual machine such as VirtualBox, and then converting a .vdi or other file into the raw format.Extract all kernel drivers from the guest system, and save them on the host machine</field></doc>
<doc><field name="id">1775</field><field name="title">google-bochspwn-reloaded</field><field name="session">Building</field><field name="sentence">In case of Windows, download the corresponding .pdb files for each of them from the  Microsoft Symbol Server  This is needed to symbolize stack traces in the output log, and to correctly traverse call stacks on 64-bit builds of Windows.Create a Bochspwn configuration INI file, or adjust an existing one to your needs</field></doc>
<doc><field name="id">1776</field><field name="title">google-bochspwn-reloaded</field><field name="session">Building</field><field name="sentence">For each of the four instrumentation modules, an example configuration file is provided in this repository.If you are testing Windows and intend to attach a kernel debugger to the emulated system, install  WinDbg  on your host, configure the guest to boot in debug mode, and redirect a serial port  COM  to a Windows named pipe in the bochsrc.txt configuration file.Create a Bochs start up batch script  e.g</field></doc>
<doc><field name="id">1777</field><field name="title">google-bochspwn-reloaded</field><field name="session">Building</field><field name="sentence">start.bat , for example:</field></doc>
<doc><field name="id">1778</field><field name="title">google-bochspwn-reloaded</field><field name="session">Example reports</field><field name="sentence">_Report of the  CVE-2017-8473  bug detected on Windows 7 32-bit:_----------------------------- pid/tid: 000006f0/00000740  { Pool allocation not recognized Allocation origin: 0x90334988  win32k.sys!__SEH_prolog4+00000018 Destination address: 1b9d380Shadow bytes: 00 ff ff ff Guest bytes: 00 bb bb bb Stack trace: #0  0x902df30f  win32k.sys!NtGdiGetRealizationInfo+0000005e  #1  0x8288cdb6  ntoskrnl.exe!KiSystemServicePostCall+00000000 _Report of the  CVE-2018-0894  bug detected on Windows 7 64-bit:_----------------------------- pid/tid: 000001a0/000001a4  {Allocation origin: 0xfffff80002a1110100000000: 00 00 00 00 ff ff ff ff 00 00 00 00 00 00 00 00 ................00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................00000000: 2e 00 30 00 aa aa aa aa 20 30 a6 00 a0 f8 ff ff ..00000010: 5c 00 44 00 65 00 76 00 69 00 63 00 65 00 5c 00 \.D.e.v.i.c.e.\.00000020: 48 00 61 00 72 00 64 00 64 00 69 00 73 00 6b 00 H.a.r.d.d.i.s.k.00000030: 56 00 6f 00 6c 00 75 00 6d 00 65 00 32 00 00 00 V.o.l.u.m.e.-- #0  0xfffff80002698600  ntoskrnl.exe!memmove+00000000  #1  0xfffff80002a11319  ntoskrnl.exe!IopQueryNameInternal+00000289  #2  0xfffff800028d4426  ntoskrnl.exe!IopQueryName+00000026  #3  0xfffff800028e8fa8  ntoskrnl.exe!ObpQueryNameString+000000b0  #4  0xfffff8000291313b  ntoskrnl.exe!NtQueryVirtualMemory+000005fb  #5  0xfffff800026b9283  ntoskrnl.exe!KiSystemServiceCopyEnd+00000013 _Report of  a bug  in</field></doc>
<doc><field name="id">1779</field><field name="title">google-bochspwn-reloaded</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">1780</field><field name="title">google-bochspwn</field><field name="session">Bochspwn</field><field name="sentence">Bochspwn is a system-wide instrumentation project designed to log memory accesses performed by operating system kernels and examine them in search of patterns indicating the presence of certain bugs, such as "double fetches"</field></doc>
<doc><field name="id">1781</field><field name="title">google-bochspwn</field><field name="session">Bochspwn</field><field name="sentence">Information about memory references is obtained by running the guest operating systems within the  Bochs IA-32 emulator  with the custom instrumentation component compiled in</field></doc>
<doc><field name="id">1782</field><field name="title">google-bochspwn</field><field name="session">Bochspwn</field><field name="sentence">It was written in 2013, and was used to discover over 50 race conditions in the Windows kernel, fixed across numerous security bulletins   MS13-016   MS13-017   MS13-031   MS13-036  For further information, see  Read more  #read-more .</field></doc>
<doc><field name="id">1783</field><field name="title">google-bochspwn</field><field name="session">Support status</field><field name="sentence">The toolset is not actively maintained, and its source code is released "as is", mostly for reference purposes</field></doc>
<doc><field name="id">1784</field><field name="title">google-bochspwn</field><field name="session">Support status</field><field name="sentence">It was originally released as *kfetch-toolkitInformation about the address space layout of kernel drivers is stored in a separate file  modules.bin by default , and each driver is referenced by its index in the main log file</field></doc>
<doc><field name="id">1785</field><field name="title">google-bochspwn</field><field name="session">Support status</field><field name="sentence">This was done to save disk space, by preventing the reduntant information  image names and base addresses  from being needlessly saved for every stack trace item in the log.Information about the presence of an active exception handler in each stack frame was added to the access log protocol buffer, allowing us to detect a number of local Windows DoS vulnerabilities  see examples  1   2   3   4 Information about the value of  PreviousMode  at the time of the memory access in Windows was added to the protocol buffer.The "online" double-fetch detection mode was removed from the code, as it was deemed too slow to be practically useful.Some symbolization-related and other minor bugs were fixed in the code.The instrumentation was also ported to Bochs version 2.6.9, the latest one at the time of this writing.</field></doc>
<doc><field name="id">1786</field><field name="title">google-bochspwn</field><field name="session">Building and usage</field><field name="sentence">For general instructions, see  DOCUMENTATION.old.md  DOCUMENTATION.old.md .You may wish to use more recent versions of the referenced software  e.g</field></doc>
<doc><field name="id">1787</field><field name="title">google-bochspwn</field><field name="session">Building and usage</field><field name="sentence">Bochs 2.6.9, libprotobuf 3.4.1 etc</field></doc>
<doc><field name="id">1788</field><field name="title">google-bochspwn</field><field name="session">Building and usage</field><field name="sentence">, and update the Bochspwn configuration file to account for the 2017 changes</field></doc>
<doc><field name="id">1789</field><field name="title">google-bochspwn</field><field name="session">Building and usage</field><field name="sentence">When in doubt, please refer to the source code or  contact us  mailto:mjurczyk@google.com  with any questions.</field></doc>
<doc><field name="id">1790</field><field name="title">google-bochspwn</field><field name="session">Example report</field><field name="sentence">-----------------------------Read no</field></doc>
<doc><field name="id">1791</field><field name="title">google-bochspwn</field><field name="session">Example report</field><field name="sentence">1: pid/tid/ct: 000000fc/00000100/01d27c3a91e567e6  { previous mode: 1</field></doc>
<doc><field name="id">1792</field><field name="title">google-bochspwn</field><field name="session">Read more</field><field name="sentence">In 2017, we implemented a new type of full-system instrumentation on top of the Bochs emulator, named *Bochspwn Reloaded*</field></doc>
<doc><field name="id">1793</field><field name="title">google-bochspwn</field><field name="session">Read more</field><field name="sentence">The instrumentation performs taint tracking of the guest kernel address space, and detects the disclosure of uninitialized kernel stack/heap memory to user-mode</field></doc>
<doc><field name="id">1794</field><field name="title">google-bochspwn</field><field name="session">Read more</field><field name="sentence">It helped us identify over  70  bugs in the Windows kernel, and more than  10  lesser bugs in Linux in 2017 and early The tool was discussed at the  REcon Montreal   Black Hat USA  and  INFILTRATE  conferences, as well as in the    Detecting Kernel Memory Disclosure with x86 Emulation and Taint Tracking  whitepaper</field></doc>
<doc><field name="id">1795</field><field name="title">google-bochspwn</field><field name="session">Read more</field><field name="sentence">It is also an open-source project, and its source code can be found in the  bochspwn-reloaded  repository.</field></doc>
<doc><field name="id">1796</field><field name="title">google-bochspwn</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">1797</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">BoringSSL is a fork of OpenSSL that is designed to meet Google's needs.Although BoringSSL is an open source project, it is not intended for generaluse, as OpenSSL is</field></doc>
<doc><field name="id">1798</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">We don't recommend that third parties depend upon it</field></doc>
<doc><field name="id">1799</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">Doingso is likely to be frustrating because there are no guarantees of API or ABIPrograms ship their own copies of BoringSSL when they use it and we updateeverything as needed when deciding to make API changes</field></doc>
<doc><field name="id">1800</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">This allows us tomostly avoid compromises in the name of compatibility</field></doc>
<doc><field name="id">1801</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">It works for us, but itmay not work for you.BoringSSL arose because Google used OpenSSL for many years in various ways and,over time, built up a large number of patches that were maintained whiletracking upstream OpenSSL</field></doc>
<doc><field name="id">1802</field><field name="title">google-boringssl</field><field name="session">BoringSSL</field><field name="sentence">As Google's product portfolio became more complex,more copies of OpenSSL sprung up and the effort involved in maintaining allthese patches in multiple places was growing steadily.Currently BoringSSL is the SSL library in Chrome/Chromium, Android  but it'snot part of the NDK  and a number of other apps/programs.There are other files in this directory which might be helpful:</field></doc>
<doc><field name="id">1803</field><field name="title">google-bottery</field><field name="session">A conversational agent prototyping platform by  Kate Compton</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">1804</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">Bottery is a syntax, editor, and simulator for prototyping **generative contextual conversations*Bottery takes inspiration from the ** Tracery  open-source project for generative text  also by katecompton@ in a non-google capacity  and the  Cheap Bots, Done Quick!  bot-hosting platform, as well as open FSM-based storytelling tools like Twine.The goal of Bottery is to help *everyone*, from designers to writers to coders, be able to write simple and engaging  contextual conversational agents, and to test them out in a realistic interactive simulation, mimicking how they'd work on a "real" platform like DialogFlow.Users in Tracery write **grammars**, JSON objects that recursively define how to generate some text, like  the musings of a lost self-driving car  or  outer-space adventures   Tracery grammars are lists of symbol names  like "animal"  and their expansion rules  like "emu, okapi, pangolin" .In Bottery, users write **maps**</field></doc>
<doc><field name="id">1805</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">Each map is composed of four sub-componentsYou can imagine a Bottery map like a finite state machine or a  boardgame board  there are spaces, and connections between the spaces, and rules for how to move between them</field></doc>
<doc><field name="id">1806</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">The map itself doesn't change or store information during play</field></doc>
<doc><field name="id">1807</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">Instead, you have a **pointer*An RPG map might use the blackboard to store the number of hit points for the main character, their current weapon and its stats, their gold, and quest progress</field></doc>
<doc><field name="id">1808</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">A quiz bot might store all of its categories, questions and answers, the players' current points, and which questions it wants to ask next</field></doc>
<doc><field name="id">1809</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">You can store strings, booleans, numbers, hierarchical objects, and arrays in the blackboard</field></doc>
<doc><field name="id">1810</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">Storing and retrieving information is done with a JavaScript-like syntax: foo.bar 5  gets the value at the 5th index of object bar in object foo</field></doc>
<doc><field name="id">1811</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">foo.baz 10  20  = 10 behaves similarly, though unlike JavaScript, if these parameters don't exist, it will create new objects or arrays and fill them rather than throwing an error</field></doc>
<doc><field name="id">1812</field><field name="title">google-bottery</field><field name="session">What is this?</field><field name="sentence">See parseMapPath in map.js for details.Variables in the blackboard can be accessed from within Tracery with the syntax You have guessed #/guessCount# times.</field></doc>
<doc><field name="id">1813</field><field name="title">google-bottery</field><field name="session">States</field><field name="sentence">Each state is a node in the Bottery map</field></doc>
<doc><field name="id">1814</field><field name="title">google-bottery</field><field name="session">States</field><field name="sentence">A state has</field></doc>
<doc><field name="id">1815</field><field name="title">google-bottery</field><field name="session">Exits</field><field name="sentence">Exits are described by strings in the format: conditions  ->TARGET_NAME  actions to take when taken Syntax for actions and conditions are described below.If all the conditions are true then the exit becomes active</field></doc>
<doc><field name="id">1816</field><field name="title">google-bottery</field><field name="session">Exits</field><field name="sentence">If there are *noThen there is an arrow  ->  and a target</field></doc>
<doc><field name="id">1817</field><field name="title">google-bottery</field><field name="session">Exits</field><field name="sentence">The target is either an **id of a state*The list of actions is in **action syntax*</field></doc>
<doc><field name="id">1818</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">Conditions fall under the following categories:Action syntax is similar to condition syntax:When the pointer enters a state, the following things happen:Any onEnter actions are executed.Any **suggestion chips*All available exits  including the exits specified in the state, as well as global exits  are collected.The pointer then waits for state change</field></doc>
<doc><field name="id">1819</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">At the moment, state change includes user input, and the passage of time</field></doc>
<doc><field name="id">1820</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">If no wait conditions are present, then the bot will wait for user input forever</field></doc>
<doc><field name="id">1821</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">When that state change occurs, the pointer will re-evaluate all the conditions on the currently available exits</field></doc>
<doc><field name="id">1822</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">If all the conditions on an exit evaluate to true, then that exit becomes active.It is often the case that multiple exits are active at the same time</field></doc>
<doc><field name="id">1823</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">For example:If the user types "yes", both exits are active</field></doc>
<doc><field name="id">1824</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">The first exit in in the list of active exits is selected</field></doc>
<doc><field name="id">1825</field><field name="title">google-bottery</field><field name="session">Condition</field><field name="sentence">In this case "yes" ->startGame will be chosen.When the pointer uses an exit, the following occurs:The actions associated with the exit are executed.The pointer moves to the state of that exit and the process begins anew.</field></doc>
<doc><field name="id">1826</field><field name="title">google-bottery</field><field name="session">Interface Overview</field><field name="sentence">! UI overview  doc_images/bottery_ui.png?raw=true</field></doc>
<doc><field name="id">1827</field><field name="title">google-bottery</field><field name="session">Chat</field><field name="sentence">Tab for interacting with the bot</field></doc>
<doc><field name="id">1828</field><field name="title">google-bottery</field><field name="session">Chat</field><field name="sentence">Occasionally, the player may be offered suggestion chips  e.g., "heads" and "tails"  that can allow the player to interact without entering text.</field></doc>
<doc><field name="id">1829</field><field name="title">google-bottery</field><field name="session">Controls</field><field name="sentence">Switches between text and speech, and also commands for working with state.If there are errors in the bot’s underlying script, then they will appear here.</field></doc>
<doc><field name="id">1830</field><field name="title">google-bottery</field><field name="session">Editor</field><field name="sentence">An inline editor for the underlying bot script</field></doc>
<doc><field name="id">1831</field><field name="title">google-bottery</field><field name="session">Editor</field><field name="sentence">A user can edit the script and see changes without having to edit the underlying .js files</field></doc>
<doc><field name="id">1832</field><field name="title">google-bottery</field><field name="session">Editor</field><field name="sentence">Changes here will be saved in local storage, so they will only be accessible to the current user.</field></doc>
<doc><field name="id">1833</field><field name="title">google-bottery</field><field name="session">Blackboard</field><field name="sentence">Displays the current state of the variables known by the bot</field></doc>
<doc><field name="id">1834</field><field name="title">google-bottery</field><field name="session">Blackboard</field><field name="sentence">These variables can be used to affect conditional behavior  e.g., the mood of the bot , some tracked information  e.g., the number of correct guesses in a quiz , the name of something  e.g., something the player is allowed to name , and much more.This information is typically invisible to an end user interacting with the bot.</field></doc>
<doc><field name="id">1835</field><field name="title">google-bottery</field><field name="session">Inspector</field><field name="sentence">Presents a view of the bot’s state machine</field></doc>
<doc><field name="id">1836</field><field name="title">google-bottery</field><field name="session">Inspector</field><field name="sentence">This shows all the states that the bot can traverse through, and within them indicates the commands that are executed by the bot, and the ways to traverse to the next state s</field></doc>
<doc><field name="id">1837</field><field name="title">google-bottery</field><field name="session">Inspector</field><field name="sentence">The initial state is always "origin"</field></doc>
<doc><field name="id">1838</field><field name="title">google-bottery</field><field name="session">Inspector</field><field name="sentence">This view is not interactive, but is a visual representation of the underlying script.</field></doc>
<doc><field name="id">1839</field><field name="title">google-bottery</field><field name="session">State view</field><field name="sentence">This is a representation of the current state of the bot, and the potential next states, as well as the conditions for enabling these particular transitions.</field></doc>
<doc><field name="id">1840</field><field name="title">google-bottery</field><field name="session">Viz</field><field name="sentence">Displays the directed connectivity graph of states and exits</field></doc>
<doc><field name="id">1841</field><field name="title">google-bottery</field><field name="session">Viz</field><field name="sentence">Highlights the current state and any active exit transitions.</field></doc>
<doc><field name="id">1842</field><field name="title">google-bottery</field><field name="session">Example bot  kitten simulator!</field><field name="sentence">Now that we have reviewed the underlying concepts and the interface, it is time to build a bot!When you have checked out the git repository, create a new file kittens.js in the bots directory, and add kittens to the list of bots in bots.js.We can start with the following in kittens.js:A note on syntax: The format of this is valid javascript, and is very similar to JSON, but is not valid JSON because of two key differences: trailing commas are permitted, and object keys do not require quotes.</field></doc>
<doc><field name="id">1843</field><field name="title">google-bottery</field><field name="session">Interactive kitten</field><field name="sentence">A bot isn't very interesting until you can interact with it, so let's add some interactivity:Interacting with this bot, you can see that the **viz*!   doc_images/kittens1.png?raw=true</field></doc>
<doc><field name="id">1844</field><field name="title">google-bottery</field><field name="session">Suggestion chips</field><field name="sentence">User interactions can be expedited though the use of suggestion chips</field></doc>
<doc><field name="id">1845</field><field name="title">google-bottery</field><field name="session">Suggestion chips</field><field name="sentence">These are prompts that are shown to the user when interacting through text.A little more flavor can be added using a Tracery grammar:</field></doc>
<doc><field name="id">1846</field><field name="title">google-bottery</field><field name="session">Petting the kitten</field><field name="sentence">What are some of the things that a user might want to do with a kitten bot? A natural thing to do would be to pet the kitten</field></doc>
<doc><field name="id">1847</field><field name="title">google-bottery</field><field name="session">Petting the kitten</field><field name="sentence">Real life kittens are temperamental creatures, and can behave unpredictably</field></doc>
<doc><field name="id">1848</field><field name="title">google-bottery</field><field name="session">Petting the kitten</field><field name="sentence">We can use the blackboard to store a variable indicating the number of times the kitten wants to be petted, and anything beyond that will cause the kitten to bite the user.!   doc_images/kittens3.png?raw=true</field></doc>
<doc><field name="id">1849</field><field name="title">google-bottery</field><field name="session">State flow</field><field name="sentence">Finally, we should add some idle behavior for the kitten when it is not being petted.!   doc_images/kittens4.png?raw=true</field></doc>
<doc><field name="id">1850</field><field name="title">google-bottery</field><field name="session">Additional resources.</field><field name="sentence">This concludes the tutorial</field></doc>
<doc><field name="id">1851</field><field name="title">google-bottery</field><field name="session">Additional resources.</field><field name="sentence">For more examples of types of bots, check out:</field></doc>
<doc><field name="id">1852</field><field name="title">google-bottlerocket</field><field name="session">BottleRocket RV32IMC Core</field><field name="sentence">This is not an officially supported Google product.</field></doc>
<doc><field name="id">1853</field><field name="title">google-bottlerocket</field><field name="session">Overview</field><field name="sentence">BottleRocket is a 32-bit, RISC-V microcontroller-class processor core that isbuilt as a customized microarchitecture from components of the Free ChipsProject Rocket core</field></doc>
<doc><field name="id">1854</field><field name="title">google-bottlerocket</field><field name="session">Overview</field><field name="sentence">It is implemented in the Chisel HDL, and it consists of abasic, 3-stage pipeline with separate instruction and data ARM AMBA AXI4Litebuses</field></doc>
<doc><field name="id">1855</field><field name="title">google-bottlerocket</field><field name="session">Overview</field><field name="sentence">It has an assortment of features that are designed to support typical useas a control processor for memory-mapped devices.</field></doc>
<doc><field name="id">1856</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">The BottleRocket core is designed to be as simple as possible to allow for easy,application-specific changes</field></doc>
<doc><field name="id">1857</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">It uses several key components from Rocket Chip,an open-source RISC-V chip generator framework, including the instructiondecoder and control & status register  CSR  finite state machine</field></doc>
<doc><field name="id">1858</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">These twocomponents are responsible for implementing the majority of the nuanced featuresof the user ISA and the privileged architecture, respectively</field></doc>
<doc><field name="id">1859</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">This approach hasseveral key advantages</field></doc>
<doc><field name="id">1860</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">the most spec-compliant hardware implementation</field></doc>
<doc><field name="id">1861</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">prediction   coherent caches</field></doc>
<doc><field name="id">1862</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">In order to use the core in a simpler context, creating a  simpler top-level module would be desirable for readability purposes</field></doc>
<doc><field name="id">1863</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">have been used in multiple projects to create different core microarchitectures  or pipelines with relatively low effort  BOOM, ZScale   within a single stage</field></doc>
<doc><field name="id">1864</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">It is well-verified and supports all of the RISC-V  standard extensions in their latest incarnations</field></doc>
<doc><field name="id">1865</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">encoding, this universal expander handles all of the RVC extension, aside from  the extra complication of designing fetch logic to handle 16-bit aligned  program counters</field></doc>
<doc><field name="id">1866</field><field name="title">google-bottlerocket</field><field name="session">Features</field><field name="sentence">hundred lines of total new Chisel code.</field></doc>
<doc><field name="id">1867</field><field name="title">google-bottlerocket</field><field name="session">Building and Running</field><field name="sentence">The first step to using BottleRocket is making sure that the work environment isready to support RISC-V development</field></doc>
<doc><field name="id">1868</field><field name="title">google-bottlerocket</field><field name="session">Building and Running</field><field name="sentence">It is helpful to follow the convention thatthe RISCV environment variable points to the RISC-V toolchain installation.Add the following to your environment using configuration files and/or aClone and install the RV32IMC toolchain</field></doc>
<doc><field name="id">1869</field><field name="title">google-bottlerocket</field><field name="session">Building and Running</field><field name="sentence">Note, this requires changing theEnter the BottleRocket directory and run the standalone tests</field></doc>
<doc><field name="id">1870</field><field name="title">google-bottlerocket</field><field name="session">Building and Running</field><field name="sentence">NOTE: you mayThe generated Verilog is in generated-src/BottleRocketCore.v -Try running sbt  “Simple Build Tool,” the most popular build tool for Scala</field></doc>
<doc><field name="id">1871</field><field name="title">google-box2d.dart</field><field name="session">A Dart 2D physics engine</field><field name="sentence">*This is a Dart port of Java's Box2D libraries.**The Java Box2D library was originally written by Daniel Murphy  statusFebruary 2015 .*done by Dominic Hamon</field></doc>
<doc><field name="id">1872</field><field name="title">google-box2d.dart</field><field name="session">A Dart 2D physics engine</field><field name="sentence">We are grateful for his work.__*Not an official Google project*__</field></doc>
<doc><field name="id">1873</field><field name="title">google-breadboard</field><field name="session">Overview</field><field name="sentence">The Breadboard scripting library is a graph based scripting system designed withgames in mind</field></doc>
<doc><field name="id">1874</field><field name="title">google-breadboard</field><field name="session">Overview</field><field name="sentence">Complex behvaiors for game entities can be organized byinterlinking nodes representing game actions.</field></doc>
<doc><field name="id">1875</field><field name="title">google-breadboard</field><field name="session">Dependencies</field><field name="sentence">Breadboard depends on the following library:fplutil::intrusive_list internally to build lists to track various structureswithout doing unnecessary allocations.Additionally, Breadboard ships with some example Modules</field></doc>
<doc><field name="id">1876</field><field name="title">google-breadboard</field><field name="session">Dependencies</field><field name="sentence">These additionalmodules in the module_library folder depend on the following libraries:your needs</field></doc>
<doc><field name="id">1877</field><field name="title">google-breadboard</field><field name="session">Dependencies</field><field name="sentence">See the options at the top of the root level CMakeLists.txt to seehow to configure the module library to include just what you need.</field></doc>
<doc><field name="id">1878</field><field name="title">google-breadboard</field><field name="session">Notes</field><field name="sentence">For applications on Google Play that integrate this tool, usage is tracked.This tracking is done automatically using the embedded version string  seesrc/breadboard/version.cpp , and helps us continue to optimize it</field></doc>
<doc><field name="id">1879</field><field name="title">google-breadboard</field><field name="session">Notes</field><field name="sentence">Aside fromconsuming a few extra bytes in your application binary, it shouldn't affect yourapplication at all</field></doc>
<doc><field name="id">1880</field><field name="title">google-breadboard</field><field name="session">Notes</field><field name="sentence">We use this information to let us know if Pindrop is usefuland if we should continue to invest in it</field></doc>
<doc><field name="id">1881</field><field name="title">google-breadboard</field><field name="session">Notes</field><field name="sentence">Since this is open source, you arefree to remove the version string but we would appreciate if you would leave it   CORGI :   FlatBuffers :   Pindrop :</field></doc>
<doc><field name="id">1882</field><field name="title">google-breakpad</field><field name="session">Breakpad</field><field name="sentence">Breakpad is a set of client and server components which implement acrash-reporting system</field></doc>
<doc><field name="id">1883</field><field name="title">google-breakpad</field><field name="session">Breakpad</field><field name="sentence">First,  download depot_tools  Create a new directory for checking out the source code  it must be named Run the fetch tool from depot_tools to download all the source repos</field></doc>
<doc><field name="id">1884</field><field name="title">google-breakpad</field><field name="session">Breakpad</field><field name="sentence">Build the source</field></doc>
<doc><field name="id">1885</field><field name="title">google-breakpad</field><field name="session">Breakpad</field><field name="sentence">Optionally, run tests</field></doc>
<doc><field name="id">1886</field><field name="title">google-breakpad</field><field name="session">Breakpad</field><field name="sentence">Optionally, install the built librariesIf you need to reconfigure your build be sure to run make distclean first.To update an existing checkout to a newer revision, you cangit pull as usual, but then you should run gclient sync to ensure that thedependent repos are up-to-date.</field></doc>
<doc><field name="id">1887</field><field name="title">google-breakpad</field><field name="session">To request change review</field><field name="sentence">Follow the steps above to get the source and build it</field></doc>
<doc><field name="id">1888</field><field name="title">google-breakpad</field><field name="session">To request change review</field><field name="sentence">Make changes</field></doc>
<doc><field name="id">1889</field><field name="title">google-breakpad</field><field name="session">To request change review</field><field name="sentence">Build and test your changes</field></doc>
<doc><field name="id">1890</field><field name="title">google-breakpad</field><field name="session">To request change review</field><field name="sentence">Commit your changes to your local repo and upload them to the server</field></doc>
<doc><field name="id">1891</field><field name="title">google-breakpad</field><field name="session">To request change review</field><field name="sentence">At  you'll find your issue listed;</field></doc>
<doc><field name="id">1892</field><field name="title">google-brotli-wheels</field><field name="session">Brotli wheels</field><field name="sentence">This repository is used to build and publish brotli " wheels " package</field></doc>
<doc><field name="id">1893</field><field name="title">google-brotli-wheels</field><field name="session">Brotli wheels</field><field name="sentence"></field></doc>
<doc><field name="id">1894</field><field name="title">google-brotli-wheels</field><field name="session">What are wheels?</field><field name="sentence">Wheels are the new standard of Python distribution and are intended to replace eggs</field></doc>
<doc><field name="id">1895</field><field name="title">google-brotli</field><field name="session">Introduction</field><field name="sentence">Brotli is a generic-purpose lossless compression algorithm that compresses datausing a combination of a modern variant of the LZ77 algorithm, Huffman codingand 2nd order context modeling, with a compression ratio comparable to the bestcurrently available general-purpose compression methods</field></doc>
<doc><field name="id">1896</field><field name="title">google-brotli</field><field name="session">Introduction</field><field name="sentence">It is similar in speedwith deflate but offers more dense compression.The specification of the Brotli Compressed Data Format is defined in  RFC 7932 Brotli is open-sourced under the MIT License, see the LICENSE file.Brotli mailing list:</field></doc>
<doc><field name="id">1897</field><field name="title">google-brotli</field><field name="session">Autotools-style CMake</field><field name="sentence">configure-cmake  is anautotools-style configure script for CMake-based projects  not supported on Windows .The basic commands to build, test and install brotli are:</field></doc>
<doc><field name="id">1898</field><field name="title">google-brotli</field><field name="session">Bazel</field><field name="sentence">See  Bazel</field></doc>
<doc><field name="id">1899</field><field name="title">google-brotli</field><field name="session">CMake</field><field name="sentence">The basic commands to build and install brotli are:You can use other  CMake  configuration.</field></doc>
<doc><field name="id">1900</field><field name="title">google-brotli</field><field name="session">Premake5</field><field name="sentence">See  Premake5</field></doc>
<doc><field name="id">1901</field><field name="title">google-brotli</field><field name="session">Python</field><field name="sentence">To install the latest release of the Python module, run the following:To install the tip-of-the-tree version, run:See the  Python readme  python/README.md  for more details on installingfrom source, development, and testing.</field></doc>
<doc><field name="id">1902</field><field name="title">google-brotli</field><field name="session">Benchmarks</field><field name="sentence">> **Disclaimer:*Independent  decoder  implementation by Mark Adler, based entirely on format specification.JavaScript port of brotli  decoder  Could be used directly via npm install brotliHand ported  decoder / encoder  in haxe by Dominik Homberger</field></doc>
<doc><field name="id">1903</field><field name="title">google-brotli</field><field name="session">Benchmarks</field><field name="sentence">Output source code: JavaScript, PHP, Python, Java and C#7Zip  plugin Dart  native bindings</field></doc>
<doc><field name="id">1904</field><field name="title">google-btls</field><field name="session">btls</field><field name="sentence">btls is a TLS and cryptography library for Haskell</field></doc>
<doc><field name="id">1905</field><field name="title">google-btls</field><field name="session">btls</field><field name="sentence">It’s built on top of BoringSSL  Google’s audited forkof OpenSSL.Although BoringSSL does not have a stable API or ABI, we expect that btls willconverge to a stable API before we release btls version In the meantime, theAPI remains unstable, we do not follow the  Package VersioningPolicy  and we will not post btls on Hackage.**btls is not production ready yet.*undergone review or auditing.</field></doc>
<doc><field name="id">1906</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">btls includes a copy of BoringSSL as a Git submodule</field></doc>
<doc><field name="id">1907</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">Ensure you’ve checked outthat submodule before building</field></doc>
<doc><field name="id">1908</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">If you’ve just cloned btls, git submoduleupdate --init should do it</field></doc>
<doc><field name="id">1909</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">You’ll also need all of BoringSSL’s builddependencies</field></doc>
<doc><field name="id">1910</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">On Debian, runto install them</field></doc>
<doc><field name="id">1911</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">You do not need to build BoringSSL itself; btls’s Setup.hs willtake care of that for you.btls needs GHC, c2hs and a few Haskell libraries to build</field></doc>
<doc><field name="id">1912</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">On Debian,should get you everything you need; you can also runif you want to install everything you can through APT instead of Cabal</field></doc>
<doc><field name="id">1913</field><field name="title">google-btls</field><field name="session">Building</field><field name="sentence">Onceyou’ve done so, you can build and run the test suite.This is not an official Google product.This product includes cryptographic software written by  EricYoung  mailto:eay@cryptsoft.com .This product includes software written by  TimHudson  mailto:tjh@cryptsoft.com .This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit</field></doc>
<doc><field name="id">1914</field><field name="title">google-btree</field><field name="session">BTree implementation for Go</field><field name="sentence">This package provides an in-memory B-Tree implementation for Go, useful asan ordered, mutable data structure.The API is based off of the wonderful and is meant to allow btree toact as a drop-in replacement for gollrb trees.See  for documentation.</field></doc>
<doc><field name="id">1915</field><field name="title">google-budou</field><field name="session">Budou</field><field name="sentence">! PyPI version    English uses spacing and hyphenation as cues to allow for beautiful and legible line breaks.Certain CJK languages have none of these, and are notoriously more difficult.Breaks occur randomly, usually in the middle of a word.This is a long standing issue in typography on web, and results in degradation of readability.Budou automatically translates CJK sentences into organized HTML codewith lexical chunks wrapped in non-breaking markup so as to semantically control line breaks.Budou uses  Google Cloud Natural Language API  NL API  to analyze the input sentence, and it concatenates proper words inorder to produce meaningful chunks utilizing part-of-speech  pos  tagging andsyntactic information.Processed chunks are wrapped with inline-block in CSS.</field></doc>
<doc><field name="id">1916</field><field name="title">google-budou</field><field name="session">Install</field><field name="sentence">Install the library by running pip install budou.Also, a credential json file is needed for authorization to NL API.</field></doc>
<doc><field name="id">1917</field><field name="title">google-budou</field><field name="session">How to use</field><field name="sentence">Get the parser by completing authentication with a credential file for NL API,which can be downloaded from  Google Cloud Platform by navigating through "API Manager" > "Credentials" > "Create credentials" >"Service account key" > "JSON".import budou</field></doc>
<doc><field name="id">1918</field><field name="title">google-budou</field><field name="session">Login to Cloud Natural Language API with credentials</field><field name="sentence">parser = budou.authenticate '/path/to/credentials.json' result = parser.parse u'今日も元気です', attributes={'class': 'wordwrap'}, language='ja' print result 'html_code'    # => "今日も元気です"print result 'chunks'  0  'word'    # => "今日も"print result 'chunks'  1  'word'    # => "元気です"Semantic units in the output HTML will not be split at the end of line byconditioning each SPAN tag with display: inline-block in CSS.! Nexus Example Image</field></doc>
<doc><field name="id">1919</field><field name="title">google-budou</field><field name="session">Supported Language</field><field name="sentence">Thai, will be added as Cloud Natural Language API adds support.</field></doc>
<doc><field name="id">1920</field><field name="title">google-budou</field><field name="session">Korean support?</field><field name="sentence">Korean has spaces between chunks, so you can organize line breaking simply byputting word-break: keep-all in your CSS</field></doc>
<doc><field name="id">1921</field><field name="title">google-budou</field><field name="session">Korean support?</field><field name="sentence">No need for Budou :</field></doc>
<doc><field name="id">1922</field><field name="title">google-budou</field><field name="session">Where to use</field><field name="sentence">Budou is designed to be used mostly in eye-catching sentences such as titles andheadings assuming split chunks would be more stood out negatively in larger typography.</field></doc>
<doc><field name="id">1923</field><field name="title">google-budou</field><field name="session">Caching</field><field name="sentence">Budou supports caching by default in order to save unnecessary requests to NLAPI and make the processing faster</field></doc>
<doc><field name="id">1924</field><field name="title">google-budou</field><field name="session">Caching</field><field name="sentence">If you want to force refresh the cache,put use_cache=False.In a standard environment, Budou will create a cache file with python pickle  format.In  Google App Engine Python Standard Environment Budou will use  memcache to make the cache available across instances.</field></doc>
<doc><field name="id">1925</field><field name="title">google-budou</field><field name="session">Entity mode</field><field name="sentence">Default parser only uses results from Syntactic Analysis for parsing, but youcan also utilize Entity Analysis by specifying use_entity=True.Entity Analysis will improve the accuracy of parsing for some phrases,especially proper nouns, so it is recommended to use if your target sentencesinclude a name of an individual person, place, organization etc.Please note that Entity Analysis will results in additional pricing because itrequires additional requests to NL API</field></doc>
<doc><field name="id">1926</field><field name="title">google-budou</field><field name="session">Entity mode</field><field name="sentence">For more detail about API pricing, pleaserefer to  Pricing | Google Cloud Natural Language API Documentation import budou</field></doc>
<doc><field name="id">1927</field><field name="title">google-budou</field><field name="session">Login to Google Cloud Natural Language API with credentials</field><field name="sentence">parser = budou.authenticate '/path/to/credentials.json'</field></doc>
<doc><field name="id">1928</field><field name="title">google-budou</field><field name="session">Without Entity mode  default</field><field name="sentence">result = parser.parse u'六本木ヒルズでご飯を食べます。', use_cache=False, language='ja' print result 'html_code'    # => "六本木ヒルズにいます。"</field></doc>
<doc><field name="id">1929</field><field name="title">google-budou</field><field name="session">With Entity mode</field><field name="sentence">result = parser.parse u'六本木ヒルズでご飯を食べます。', use_cache=False, language='ja', use_entity=True print result 'html_code'    # => "六本木ヒルズにいます。"</field></doc>
<doc><field name="id">1930</field><field name="title">google-budou</field><field name="session">Maximum chunk length</field><field name="sentence">Some words  マルチスクリーン, インフルエンザ, etc  may stand out in certain formats due to their length</field></doc>
<doc><field name="id">1931</field><field name="title">google-budou</field><field name="session">Maximum chunk length</field><field name="sentence">For example:</field></doc>
<doc><field name="id">1932</field><field name="title">google-budou</field><field name="session">Accessibility</field><field name="sentence">Some screen reader software read wrapped chunks one by one when Budou isapplied, which may degrades user experience for those who need audio support.You can attach any attribute to the output chunks to enhance accessibility.For example, you can make screen readers to read undivided sentences bycombining aria-describedby and aria-label attribute in the output.**Input  your-script.py *input_text = u'やりたいことのそばにいる'element_id = 'description'result = parser.parse input_text, {'aria-describedby': element_id}, language='ja' **Template  your-template.tpl ***HTML Output  your-output.html *  やりたい  ことの  そばに  いる</field></doc>
<doc><field name="id">1933</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">parser.parse   method accepts options below in addition to the input text.| Option | Type | Default | Description || --| attributes | dictionary | {'class': 'ww'} | A key-value mapping for attributes of output SPAN tags</field></doc>
<doc><field name="id">1934</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">|| use_cache | boolean | True | Whether to use caching</field></doc>
<doc><field name="id">1935</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">|| language | str | None | Language of the text</field></doc>
<doc><field name="id">1936</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">If None is provided, NL API tries to detect from the input text</field></doc>
<doc><field name="id">1937</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">|| use_entity | boolean | False | Whether to use Entity mode</field></doc>
<doc><field name="id">1938</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">|| max_length | int | None | Maximum chunk length</field></doc>
<doc><field name="id">1939</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">If a chunk is longer than this it will not be wrapped in a SPAN tag</field></doc>
<doc><field name="id">1940</field><field name="title">google-budou</field><field name="session">Options</field><field name="sentence">|</field></doc>
<doc><field name="id">1941</field><field name="title">google-budou</field><field name="session">Pricing</field><field name="sentence">Budou is backed up by Google Natural Language API, so cost may be incurred whenusing that API.In other languages including Japanese, the default parser uses *Syntax AnalysisIf you enable Entity mode by specifying use_entity=True, the parser uses bothof *Syntax Analysiswhich will incur additional cost.Google Cloud Natural Language API has free quota to start testing the feature atfree of cost, but please refer to  Google Cloud Natural Language API Pricing Guide for more detailed pricing information.</field></doc>
<doc><field name="id">1942</field><field name="title">google-budou</field><field name="session">Author</field><field name="sentence">Shuhei IitsukaThis library is authored by a Googler and copyrighted by Google, butis not an official Google product.</field></doc>
<doc><field name="id">1943</field><field name="title">google-budou</field><field name="session">License</field><field name="sentence">Copyright 2017 Google Inc</field></doc>
<doc><field name="id">1944</field><field name="title">google-budou</field><field name="session">License</field><field name="sentence">All Rights Reserved.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">1945</field><field name="title">google-build-debian-cloud</field><field name="session">Debian bootstrapping script for Amazon machine images and Google Compute Engine images ##</field><field name="sentence">This script bootstraps a vanilla Debian installation to create eitheran Amazon machine image or a Google Compute Engine image.The image contains no latent logfiles no .bash\_history or even the apt package cache</field></doc>
<doc><field name="id">1946</field><field name="title">google-build-debian-cloud</field><field name="session">Debian bootstrapping script for Amazon machine images and Google Compute Engine images ##</field><field name="sentence">The machine configuration this script creates has been thoroughly tested.*This script has been tested on Debian squeeze and wheezy.</field></doc>
<doc><field name="id">1947</field><field name="title">google-build-debian-cloud</field><field name="session">Official AMIs provided by the Debian community and Amazon ##</field><field name="sentence">The Debian community and Amazon have together created AMIs using this bootstrapperand replicated them across AWS regions</field></doc>
<doc><field name="id">1948</field><field name="title">google-build-debian-cloud</field><field name="session">Official AMIs provided by the Debian community and Amazon ##</field><field name="sentence">The images have been tested for security and bugs.They are available on the  aws marketplace For each new official AMI a commit in this repository will be  tagged marking the version the AMI was bootstrapped with.More information about these images and links to the gzipped volume images can be found on the Debian wiki page  dedicated to those images.</field></doc>
<doc><field name="id">1949</field><field name="title">google-build-debian-cloud</field><field name="session">Usage ##</field><field name="sentence">The script is started with ./build-debian-cloud.You can choose to either bootstrap a Debian AMI  ./build-debian-cloud ec2 or a Google Compute Engine image  ./build-debian-cloud gce .Both modes have sensible defaults and can be configured with options and plugins.To see a list of options use --help.When creating an AMI the script at least needs to know your AWS credentials.There are no interactive prompts, the bootstrapping can run entirely unattendedfrom start till finish.Some plugins are included in the  plugins directory A list of external plugins is also provided there</field></doc>
<doc><field name="id">1950</field><field name="title">google-build-debian-cloud</field><field name="session">Usage ##</field><field name="sentence">If none of those scratchyour itch, you can of course  write your own plugin</field></doc>
<doc><field name="id">1951</field><field name="title">google-build-debian-cloud</field><field name="session">Bootstrapper  AMI  features ###</field><field name="sentence">have been replaced with  euca2ools</field></doc>
<doc><field name="id">1952</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections for Dart</field><field name="sentence"></field></doc>
<doc><field name="id">1953</field><field name="title">google-built_collection.dart</field><field name="session">Introduction</field><field name="sentence">Built Collections are immutable collections using the builder pattern Each of the core SDK collections is split in two: a mutable builder classand an immutable "built" class</field></doc>
<doc><field name="id">1954</field><field name="title">google-built_collection.dart</field><field name="session">Introduction</field><field name="sentence">Builders are for computation,"built" classes are for safely sharing with no need to copy defensively.Immutable collections work particularly well with immutable values</field></doc>
<doc><field name="id">1955</field><field name="title">google-built_collection.dart</field><field name="session">Introduction</field><field name="sentence">See built_value You can read more about built_collection on medium</field></doc>
<doc><field name="id">1956</field><field name="title">google-built_collection.dart</field><field name="session">Design</field><field name="sentence">Built Collections:</field></doc>
<doc><field name="id">1957</field><field name="title">google-built_collection.dart</field><field name="session">A note about strong mode</field><field name="sentence">Please note that from version 1.1.0 built_collection must be used inconjunction with strong mode to get all the type guarantees</field></doc>
<doc><field name="id">1958</field><field name="title">google-built_collection.dart</field><field name="session">A note about strong mode</field><field name="sentence">That is, your project must have no warnings orerrors when analyzed with the strong mode analyzer</field></doc>
<doc><field name="id">1959</field><field name="title">google-built_collection.dart</field><field name="session">A note about strong mode</field><field name="sentence">This allows some runtimechecks to be skipped because the equivalent check can be done statically.</field></doc>
<doc><field name="id">1960</field><field name="title">google-built_collection.dart</field><field name="session">Recommended Style</field><field name="sentence">A project can benefit greatly from using Built Collections throughout.Methods that will not mutate a collection can accept the "built" version,making it clear that no mutation will happen and completely avoidingthe need for defensive copying.For code that is public to other projects or teams not usingBuilt Collections, prefer to accept Iterable where possible</field></doc>
<doc><field name="id">1961</field><field name="title">google-built_collection.dart</field><field name="session">Recommended Style</field><field name="sentence">That wayyour code is compatible with SDK collections, Built Collections and anyother collection implementation that builds on Iterable.It's okay to accept BuiltMap.toMap and BuiltSetMultimap.toMap.</field></doc>
<doc><field name="id">1962</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Immutable</field><field name="sentence">Built Collections do not offer any methods that modify the collection</field></doc>
<doc><field name="id">1963</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Immutable</field><field name="sentence">Inorder to make changes, first call toBuilder to get a mutable builder.In particular, Built Collections do not implement or extend their mutablecounterparts</field></doc>
<doc><field name="id">1964</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Immutable</field><field name="sentence">BuiltSetMultimap share no interface with the SDK collections.Built Collections can contain mutable elements</field></doc>
<doc><field name="id">1965</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Immutable</field><field name="sentence">However, this use is notrecommended, as mutations to the elements will break comparison and</field></doc>
<doc><field name="id">1966</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Comparable</field><field name="sentence">Core SDK collections do not offer equality checks by default.Built Collections do a deep comparison against other Built Collectionsof the same type, only</field></doc>
<doc><field name="id">1967</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Comparable</field><field name="sentence">Hashing is used to make repeated comparisons fast.</field></doc>
<doc><field name="id">1968</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Hashable</field><field name="sentence">Core SDK collections do not compute a deep hashCode.Built Collections do compute, and cache, a deep hashCode</field></doc>
<doc><field name="id">1969</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Hashable</field><field name="sentence">That means theycan be stored inside collections that need hashing, such as hash sets andhash maps</field></doc>
<doc><field name="id">1970</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections are Hashable</field><field name="sentence">They also use the cached hash code to speed up repeated</field></doc>
<doc><field name="id">1971</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Reject Nulls</field><field name="sentence">A null in a collection is usually a bug, so Built Collections and theirbuilders throw if given a null element, key or value.</field></doc>
<doc><field name="id">1972</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Require Generic Type Parameters</field><field name="sentence">A List is error-prone because it can be assigned to a List ofany type without warning</field></doc>
<doc><field name="id">1973</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Require Generic Type Parameters</field><field name="sentence">So, all Built Collections must be created withexplicit element, key or value types.</field></doc>
<doc><field name="id">1974</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Reject Wrong-type Elements, Keys and Values</field><field name="sentence">Collections that happen to contain elements, keys or values that are not ofthe right type can lead to difficult-to-find bugs</field></doc>
<doc><field name="id">1975</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Reject Wrong-type Elements, Keys and Values</field><field name="sentence">So, all BuiltCollections and their builders are aggressive about validating types, evenwith checked mode disabled.</field></doc>
<doc><field name="id">1976</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Avoid Copying Unnecessarily</field><field name="sentence">Built Collections and their builder and helper types collaborate to avoidcopying unless it's necessary.In particular, BuiltSet.toSet, BuiltMap.toMap and BuiltSetMultimap.toMap do not makea copy, but return a copy-on-write wrapper</field></doc>
<doc><field name="id">1977</field><field name="title">google-built_collection.dart</field><field name="session">Built Collections Avoid Copying Unnecessarily</field><field name="sentence">So, Built Collections can beefficiently and easily used with code that needs core SDK collections butdoes not mutate them.When you want to provide a collection that explicitly _throws_ when amutation is attempted, use BuiltListMultimap.asMap, BuiltSet.asSet, BuiltSetMultimap.asMapand BuiltMap.asMap.</field></doc>
<doc><field name="id">1978</field><field name="title">google-built_collection.dart</field><field name="session">Features and bugs</field><field name="sentence">Please file feature requests and bugs at the  issue tracker  tracker</field></doc>
<doc><field name="id">1979</field><field name="title">google-built_collection.dart</field><field name="session">Features and bugs</field><field name="sentence">tracker :</field></doc>
<doc><field name="id">1980</field><field name="title">google-built_json.dart</field><field name="session">Built JSON for Dart</field><field name="sentence">Now available from  built_value</field></doc>
<doc><field name="id">1981</field><field name="title">google-built_value.dart</field><field name="session">Built Values for Dart</field><field name="sentence"></field></doc>
<doc><field name="id">1982</field><field name="title">google-built_value.dart</field><field name="session">Introduction</field><field name="sentence">Built Values provides: built_collection</field></doc>
<doc><field name="id">1983</field><field name="title">google-built_value.dart</field><field name="session">Articles</field><field name="sentence">For an end to end example see the chat example  which was demoed  at the Dart Summit The data model used both client and server side, uses value types, enums and serialization fromSimple examples are here Since v5.2.0 codegen is triggered by running pub run build_runner build todo a one-off build or pub run build_runner watch to continuously watch yoursource and update the generated output when it changes</field></doc>
<doc><field name="id">1984</field><field name="title">google-built_value.dart</field><field name="session">Articles</field><field name="sentence">Note that you need adev dependency on built_value_generator and build_runner</field></doc>
<doc><field name="id">1985</field><field name="title">google-built_value.dart</field><field name="session">Articles</field><field name="sentence">See the example pubspec.yaml If using Flutter, the equivalent command is flutter packages pub run build_runner build.Alternatively, put your built_value classes in a separate Dart package with no dependencyon Flutter</field></doc>
<doc><field name="id">1986</field><field name="title">google-built_value.dart</field><field name="session">Articles</field><field name="sentence">You can then use built_value as normal.If using a version before v5.2.0, codegen is triggered via either a build.dart to do a one-off build or a watch.dart to continuously watch your source and update generated output.</field></doc>
<doc><field name="id">1987</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">Value types are, for our purposes, classes that are consideredinterchangeable if their fields have the same values.Common examples include Date, Money and Url</field></doc>
<doc><field name="id">1988</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">Most code introducesits own value types</field></doc>
<doc><field name="id">1989</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">For example, every web app probably has someversion of Account and User.Value types are very commonly sent by RPC and/or stored for laterThe problems that led to the creation of the Built Value library have discussed at great length in the context of AutoValue for Java.In short: creating and maintaining value types by hand requires a lot ofboilerplate</field></doc>
<doc><field name="id">1990</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">It's boring to write, and if you make a mistake, you verylikely create a bug that's hard to track down.Any solution for value types needs to allow them to participate in objectoriented design</field></doc>
<doc><field name="id">1991</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">Date, for example, is the right place for code thatdoes simple date manipulation</field></doc>
<doc><field name="id">1992</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">AutoValue solves the problem for Java with code generation, and Built Values doesthe same for Dart</field></doc>
<doc><field name="id">1993</field><field name="title">google-built_value.dart</field><field name="session">Value Types</field><field name="sentence">The boilerplate is generated for you, leaving you tospecify which fields you need and to add code for the behaviour of the</field></doc>
<doc><field name="id">1994</field><field name="title">google-built_value.dart</field><field name="session">Generating boilerplate for Value Types</field><field name="sentence">Value types require a bit of boilerplate in order to connect it to generatedcode</field></doc>
<doc><field name="id">1995</field><field name="title">google-built_value.dart</field><field name="session">Generating boilerplate for Value Types</field><field name="sentence">Luckily, even this bit of boilerplate can be got automated using codesnippets support in your favourite text editor</field></doc>
<doc><field name="id">1996</field><field name="title">google-built_value.dart</field><field name="session">Generating boilerplate for Value Types</field><field name="sentence">For example, in IntelliJ youcan use following live template:class name which is something that can't be automated.</field></doc>
<doc><field name="id">1997</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Enum Classes provide classes with enum features.Enums are very helpful in modelling the real world: whenever there are asmall fixed set of options, an enum is a natural choice</field></doc>
<doc><field name="id">1998</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">For an objectoriented design, though, enums need to be classes</field></doc>
<doc><field name="id">1999</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Dart falls short here,so Enum Classes provide what's missing!Built Values comes with JSON serialization support which allows you toserialize a complete data model of Built Values, Enum Classes andBuilt Collections</field></doc>
