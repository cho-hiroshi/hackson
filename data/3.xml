<doc><field name="id">1999</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Dart falls short here,so Enum Classes provide what's missing!Built Values comes with JSON serialization support which allows you toserialize a complete data model of Built Values, Enum Classes andBuilt Collections</field></doc>
<doc><field name="id">2000</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">The chat example  shows how easy this makes building a full application with Dart on the server andHere are the major features of the serialization support:It _fully supports object oriented design_: any object model that you can design can be serialized, including full use of generics and interfaces.Some other libraries require concrete types or do not fully support generics.It _allows different object oriented models over the same data_</field></doc>
<doc><field name="id">2001</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Forexample, in a client server application, it's likely that the client and serverwant different functionality from their data model</field></doc>
<doc><field name="id">2002</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">So, they are allowed to havedifferent classes that map to the same data</field></doc>
<doc><field name="id">2003</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Most other libraries enforce a 1:1mapping between classes and types on the wire.It _requires well behaved types_</field></doc>
<doc><field name="id">2004</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">They must be immutable, can useinterface but not concrete inheritance, must have predictable nullability,hashCode, equals and toString</field></doc>
<doc><field name="id">2005</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">In fact, they must be Enum Classes, BuiltCollections or Built Values</field></doc>
<doc><field name="id">2006</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Some other libraries allow badly behaved types tobe serialized.It _supports changes to the data model_</field></doc>
<doc><field name="id">2007</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Optional fields can be added orremoved, and fields can be switched from optional to required, allowing yourdata model to evolve without breaking compatbility</field></doc>
<doc><field name="id">2008</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Some other libraries breakcompatability on any change to any serializable class.It's _modular_</field></doc>
<doc><field name="id">2009</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Each endpoint can choose which classes to know about;for example, you can have multiple clients that each know about only a subset ofthe classes the server knows</field></doc>
<doc><field name="id">2010</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Most other libraries are monolithic, requiring allendpoints to know all types.It's _multi language_</field></doc>
<doc><field name="id">2011</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Support will be come first for Dart, Java andJava/GWT</field></doc>
<doc><field name="id">2012</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Many other libraries support a single language only.It _has first class support for validation_ via Built Values</field></doc>
<doc><field name="id">2013</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">An important part of a powerful data model is ensuring it's valid, so classes can makeguarantees about what they can do</field></doc>
<doc><field name="id">2014</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Other libraries also support validationbut usually in a less prominent way.It's _pluggable_</field></doc>
<doc><field name="id">2015</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">You can add serializers for your own types, and you can add plugins which run before and after all serializers</field></doc>
<doc><field name="id">2016</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">This could be used tointeroperate with other tools or to add hand coded high performance serializersfor specific classes</field></doc>
<doc><field name="id">2017</field><field name="title">google-built_value.dart</field><field name="session">Enum Class</field><field name="sentence">Some other libraries are not so extensible.</field></doc>
<doc><field name="id">2018</field><field name="title">google-built_value.dart</field><field name="session">Features and bugs</field><field name="sentence">Please file feature requests and bugs at the  issue tracker  tracker</field></doc>
<doc><field name="id">2019</field><field name="title">google-built_value.dart</field><field name="session">Features and bugs</field><field name="sentence">tracker :</field></doc>
<doc><field name="id">2020</field><field name="title">google-bundletool</field><field name="session">bundletool</field><field name="sentence">Bundletool is a tool to manipulate Android App Bundles.The **Android App Bundle*distribution stores such as Google Play.Bundletool has a few different responsibilities: g.co/androidappbundle</field></doc>
<doc><field name="id">2021</field><field name="title">google-bundletool</field><field name="session">Releases</field><field name="sentence">Latest release:  0.5.0</field></doc>
<doc><field name="id">2022</field><field name="title">google-burst-denoising</field><field name="session">Burst Denoising with Kernel Prediction Networks</field><field name="sentence">Ben Mildenhall | Jonathan T</field></doc>
<doc><field name="id">2023</field><field name="title">google-burst-denoising</field><field name="session">Burst Denoising with Kernel Prediction Networks</field><field name="sentence">Barron | Jiawen Chen | Dillon Sharlet | Ren Ng | Robert CarrollThis is not an official Google product</field></doc>
<doc><field name="id">2024</field><field name="title">google-burst-denoising</field><field name="session">Burst Denoising with Kernel Prediction Networks</field><field name="sentence">This repository contains code for training models from the paper  Burst Denoising with Kernel Prediction Networks</field></doc>
<doc><field name="id">2025</field><field name="title">google-burst-denoising</field><field name="session">Dependencies</field><field name="sentence">This code uses the following external packages:Synthetic training data is generated using the OpenImages dataset, which can be manually downloaded following  these instructions Run the following command to train the kernel prediction network  KPN  burst denoising model:python kpn_train.py --dataset_dir $OPEN_IMAGES_DATASET_DIR --data_dir $REAL_BURST_DATA_DIR</field></doc>
<doc><field name="id">2026</field><field name="title">google-butteraugli</field><field name="session">butteraugli</field><field name="sentence">> A tool for measuring perceived differences between images</field></doc>
<doc><field name="id">2027</field><field name="title">google-butteraugli</field><field name="session">Introduction</field><field name="sentence">Butteraugli is a project that estimates the psychovisual similarity of twoimages</field></doc>
<doc><field name="id">2028</field><field name="title">google-butteraugli</field><field name="session">Introduction</field><field name="sentence">It gives a score for the images that is reliable in the domain of barelynoticeable differences</field></doc>
<doc><field name="id">2029</field><field name="title">google-butteraugli</field><field name="session">Introduction</field><field name="sentence">Butteraugli not only gives a scalar score, but alsocomputes a spatial map of the level of differences.One of the main motivations for this project is the statistical differences inlocation and density of different color receptors, particularly the low densityof blue cones in the fovea</field></doc>
<doc><field name="id">2030</field><field name="title">google-butteraugli</field><field name="session">Introduction</field><field name="sentence">Another motivation comes from more accurate modelingof ganglion cells, particularly the frequency space inhibition.</field></doc>
<doc><field name="id">2031</field><field name="title">google-butteraugli</field><field name="session">Use</field><field name="sentence">Butteraugli can work as a quality metric for lossy image and video compression.On our small test corpus butteraugli performs better than our implementations ofthe reference methods, psnrhsv-m, ssim, and our yuv-color-space variant of ssim.One possible use is to define the quality level setting used in a jpegcompressor, or to compare two or more compression methods at the same level ofpsychovisual differences.Butteraugli is intended to be a research tool more than a practical tool forchoosing compression formats</field></doc>
<doc><field name="id">2032</field><field name="title">google-butteraugli</field><field name="session">Use</field><field name="sentence">We don't know how well butteraugli performs withmajor deformations -roughly corresponding to jpeg qualities 90 to</field></doc>
<doc><field name="id">2033</field><field name="title">google-butteraugli</field><field name="session">Interface</field><field name="sentence">Only a C++ interface is provided</field></doc>
<doc><field name="id">2034</field><field name="title">google-butteraugli</field><field name="session">Interface</field><field name="sentence">The interface takes two images and outputs amap together with a scalar value defining the difference</field></doc>
<doc><field name="id">2035</field><field name="title">google-butteraugli</field><field name="session">Interface</field><field name="sentence">The scalar value canbe compared to two reference values that divide the value space into threeexperience classes: 'great', 'acceptable' and 'not acceptable'.</field></doc>
<doc><field name="id">2036</field><field name="title">google-butteraugli</field><field name="session">Build instructions</field><field name="sentence">Install  Bazel  by following the instructions  Run bazel build -c opt//:butteraugli in the directory that contains this README file to build the command-line utility  #cmdline-tool</field></doc>
<doc><field name="id">2037</field><field name="title">google-butteraugli</field><field name="session">Build instructions</field><field name="sentence">If you want to use Butteraugli as alibrary, depend on the //:butteraugli_lib target.Alternatively, you can use the Makefile provided in the butteraugli directory,after ensuring that  libpng  and libjpeg  are installed</field></doc>
<doc><field name="id">2038</field><field name="title">google-butteraugli</field><field name="session">Build instructions</field><field name="sentence">On some systems you might need to alsoinstall corresponding -dev packages.The code is portable and also compiles on Windows after defining_CRT_SECURE_NO_WARNINGS in the project settings.</field></doc>
<doc><field name="id">2039</field><field name="title">google-butteraugli</field><field name="session">Command-line utility {#cmdline-tool}</field><field name="sentence">Butteraugli, apart from the library, comes bundled with a comparison tool</field></doc>
<doc><field name="id">2040</field><field name="title">google-butteraugli</field><field name="session">Command-line utility {#cmdline-tool}</field><field name="sentence">Thecomparison tool supports PNG and JPG images as inputs</field></doc>
<doc><field name="id">2041</field><field name="title">google-butteraugli</field><field name="session">Command-line utility {#cmdline-tool}</field><field name="sentence">To compare images, run:will be output as a PNM image</field></doc>
<doc><field name="id">2042</field><field name="title">google-butteraugli</field><field name="session">Command-line utility {#cmdline-tool}</field><field name="sentence">To produce one, run:</field></doc>
<doc><field name="id">2043</field><field name="title">google-bzip2-rpc</field><field name="session">Serialization</field><field name="sentence">The first core feature for an RPC framework is some kind of serializationmechanism &ndash; a way to convert different kinds of data structures to and fromsequences of bytes, ready for transmission between processes.A serialization mechanism typically includes a number of base types &ndash;integers, characters, booleans, floating point values, strings &ndash; that maponto the base types of the programming language.On top of the base types, various compound types are normally available:The serialization mechanism for an RPC framework may or may not require the useof an explicit **schema**, which describes the valid data structures for aparticular RPC interface</field></doc>
<doc><field name="id">2044</field><field name="title">google-bzip2-rpc</field><field name="session">Serialization</field><field name="sentence">For example, to transmit the data for a 3-dimensionalFrameworks with schemas are more complex and require more set-up  to specifythe schema , but are more robust &ndash; messages that don't match the expectedschema can be automatically detected and rejected.</field></doc>
<doc><field name="id">2045</field><field name="title">google-bzip2-rpc</field><field name="session">Transport</field><field name="sentence">Once a collection of information has been serialized, it needs to betransmittted to the other process involved in the RPC exchange</field></doc>
<doc><field name="id">2046</field><field name="title">google-bzip2-rpc</field><field name="session">Transport</field><field name="sentence">This requires atransport mechanism, but the RPC framework may or may not consider this part oftheir remit:</field></doc>
<doc><field name="id">2047</field><field name="title">google-bzip2-rpc</field><field name="session">RPC Invocation</field><field name="sentence">To be convenient, invoking functionality in a different process needs to be morethan just sending and receiving messages</field></doc>
<doc><field name="id">2048</field><field name="title">google-bzip2-rpc</field><field name="session">RPC Invocation</field><field name="sentence">Ideally, it should take a similarform to invoking functionality in the same process, via a function call</field></doc>
<doc><field name="id">2049</field><field name="title">google-bzip2-rpc</field><field name="session">RPC Invocation</field><field name="sentence">To dothis, the RPC mechanism needs to bundle up all of the input parameters for aremote function into a **request*from the function invocation</field></doc>
<doc><field name="id">2050</field><field name="title">google-bzip2-rpc</field><field name="session">RPC Invocation</field><field name="sentence">As the two processes do not normally share anaddress space, this approach works best with data that is passed by value .</field></doc>
<doc><field name="id">2051</field><field name="title">google-bzip2-rpc</field><field name="session">Event Model and Threading</field><field name="sentence">Sending and receiving messages between processes requires some sort of eventprocessing system that handles receipt notifications and  possibly  inter-threadscheduling</field></doc>
<doc><field name="id">2052</field><field name="title">google-bzip2-rpc</field><field name="session">Event Model and Threading</field><field name="sentence">An RPC framework may include an event processing model, or mayrequire the application to integrate RPC processing into its own existing eventmodel in some way</field></doc>
<doc><field name="id">2053</field><field name="title">google-bzip2-rpc</field><field name="session">Event Model and Threading</field><field name="sentence">An RPC framework may also require the use of multiplethreads, or may be written assuming use in a single-threaded manner  and thusneed external synchronization for use in a multi-threaded application .The event model also affects whether it is possible for invocation of remotefunctionality to look identical to invocation of local functionality i.e</field></doc>
<doc><field name="id">2054</field><field name="title">google-bzip2-rpc</field><field name="session">Event Model and Threading</field><field name="sentence">apparently synchronous .</field></doc>
<doc><field name="id">2055</field><field name="title">google-bzip2-rpc</field><field name="session">File Descriptor Transfer</field><field name="sentence">For sandboxing mechanisms that restrict access to the local environment e.g</field></doc>
<doc><field name="id">2056</field><field name="title">google-bzip2-rpc</field><field name="session">File Descriptor Transfer</field><field name="sentence">Capsicum , it is important to know whether the RPC framework allows thetransfer of file descriptors between processes on the same machine; thisallows a remote process to operate on a kernel resource owned by the invoker,even though the remote process cannot open that resource on its own.Any such mechanism relies on the SCM_RIGHTS feature of an underlying UNIXdomain socket transport.</field></doc>
<doc><field name="id">2057</field><field name="title">google-bzip2-rpc</field><field name="session">Language Support</field><field name="sentence">Some RPC frameworks include support for applications written in differentlanguages, which in turn would allow for different components of a privilegeseparated application to be written in different languages.Note that C and C++ are a special case here; a C-based framework can alwaysbe used by C++ code, and it's often possible to write a C wrapper layer thatallows a C++-based framework to be used</field></doc>
<doc><field name="id">2058</field><field name="title">google-bzip2-rpc</field><field name="session">Language Support</field><field name="sentence">However, this does normally stillinvolve a run-time dependency on the libstdc++ C++ standard library.</field></doc>
<doc><field name="id">2059</field><field name="title">google-bzip2-rpc</field><field name="session">Dependencies</field><field name="sentence">Simpler RPC frameworks are self-contained, and have no additionaldependencies; others impose a requirement that dependent libraries  e.g</field></doc>
<doc><field name="id">2060</field><field name="title">google-bzip2-rpc</field><field name="session">Dependencies</field><field name="sentence">thelibstdc++ for a C++ framework  are available on the system</field></doc>
<doc><field name="id">2061</field><field name="title">google-bzip2-rpc</field><field name="session">Dependencies</field><field name="sentence">The set ofdependencies needed for an application written in C is of particular interest.RPC Framework CandidatesThis section gives an overview of possible candidate RPC frameworks</field></doc>
<doc><field name="id">2062</field><field name="title">google-bzip2-rpc</field><field name="session">Dependencies</field><field name="sentence">It doesnot include technologies that are purely serialization mechanisms  e.g</field></doc>
<doc><field name="id">2063</field><field name="title">google-bzip2-rpc</field><field name="session">Dependencies</field><field name="sentence">ASN.1  withoutany RPC aspects.</field></doc>
<doc><field name="id">2064</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">The least common denominator for performing RPC is not to use any framework, butto individually code the mechanisms required.FreeBSD 11.x includes the libnv library created by Pawel Jakub Dawidek, which deals with building andtransferring lists of name-value pairs.D-Bus is a message bus system intended for use in UNIX desktop systems</field></doc>
<doc><field name="id">2065</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">Bydefault, it assumes that applications will communicate via either asystem-wide or session-wide daemon; however, it is possible to set up aprivate point-to-point connection between two processes</field></doc>
<doc><field name="id">2066</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">gRPC  was released in 2015 by Google, as a general RPCframework</field></doc>
<doc><field name="id">2067</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">gRPC uses an updated  v3  version of protocol buffers for itsserialization mechanism, but also includes communication libraries for RPCclient and server applications.Note that although gRPC claims to support C  and its core internals are writtenin C , there is no C API for serialization or RPC invocation</field></doc>
<doc><field name="id">2068</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">Cap'n Proto  was created for the Sandstorm  project by Kenton Varda  who was one of thecreators of V2 of Google's protocol buffers</field></doc>
<doc><field name="id">2069</field><field name="title">google-bzip2-rpc</field><field name="session">Hand-Rolled Code</field><field name="sentence">bzip2  is the example target used to explore thedifferences between different RPC frameworks; this target is chosen because Ben Laurie  has previously manually converted  it to be privilegedseparated in order to apply the Capsicum security framework It is also of a manageable size, without being too trivial.To make bzip2 more suitable for having a remote implementation, we first makea couple of modifications to the library.</field></doc>
<doc><field name="id">2070</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: FILE</field><field name="sentence">The bzlib API includes a number of entrypoints that take a FILE* argument;however, this is not a good type to be used on an inter-process boundary,because the C library adds buffering and other metadata that cannot be easilymirrored between processes.To cope with this, we add ...OpenFd   entrypoints that are analogous to theexisting ...Open   entrypoints, but which take a file descriptor argumentinstead of a FILE* argument.</field></doc>
<doc><field name="id">2071</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Streaming API Entrypoints</field><field name="sentence">As it stands, the bzip2 codebase includes a BZ2_bz..</field></doc>
<doc><field name="id">2072</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Streaming API Entrypoints</field><field name="sentence">functions in libbz2  and a main command-line utility bzip2that uses that API to do compression and decompression</field></doc>
<doc><field name="id">2073</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Streaming API Entrypoints</field><field name="sentence">However, the API isquite low-level, involving reading and writing chunks of data from thecompressed file; it does not include any entrypoints that process an entirefile at once.The compressStream and decompressStream, which loop around using the bzlibentrypoints; these are the entrypoints that are remoted in the manualremoting example for Capsicum mentioned above.Therefore, in order to compare like with like, we add an additional wrapperlayer to the bzlib API, with the following entrypoints:</field></doc>
<doc><field name="id">2074</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Annotate API</field><field name="sentence">The process of generating serialization and deserialization code that mapsbetween function parameters and message fields is tedious and time-consumingto do manually</field></doc>
<doc><field name="id">2075</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Annotate API</field><field name="sentence">To allow for the future possibility of a tool to automatethis process, we extend the bzlib.h header file with extra annotations.These annotations give a richer semantics than the base C language allows cf</field></doc>
<doc><field name="id">2076</field><field name="title">google-bzip2-rpc</field><field name="session">Modification: Annotate API</field><field name="sentence">Microsoft's Security Annotation Language for example:IDL_GENERATE is defined, so a normal build of the library is unaffected.API Remoting StructureAll of the API remoting examples in this repository share a similar baseThis sequence diagram assumes that the second process is already available;that can be accomplished on first use of the API by forking a sub-process thatin turn invokes a new program containing the API driver program:! RPC Process Setup  rpc-setup.png</field></doc>
<doc><field name="id">2077</field><field name="title">google-bzip2-rpc</field><field name="session">File Descriptor Inheritance</field><field name="sentence">Not all of the RPC frameworks used support the passing of file descriptorsover their transports</field></doc>
<doc><field name="id">2078</field><field name="title">google-bzip2-rpc</field><field name="session">File Descriptor Inheritance</field><field name="sentence">For those that do not  gRPC and Cap'n Proto , wecurrently use a UNIX socket that runs in parallel to the main RPC socket.To send a file descriptor: Note that this mechanism is currently implemented in a naive fashion,with no integration of the parallel socket into the program's event loop</field></doc>
<doc><field name="id">2079</field><field name="title">google-bzip2-rpc</field><field name="session">File Descriptor Inheritance</field><field name="sentence">----------This is not an official Google product.</field></doc>
<doc><field name="id">2080</field><field name="title">google-cabal2bazel</field><field name="session">cabal2bazel</field><field name="sentence">A tool to help with fetching Cabal packages from Hackage and importingthem as packages into cabal2bazel</field></doc>
<doc><field name="id">2081</field><field name="title">google-cabal2bazel</field><field name="session">cabal2bazel</field><field name="sentence">cabal2bazel --fetch   cabal2bazel --fetch binary  cabal2bazel --fetch binary-0.5.0.2  cabal2bazel --recursive --fetch lensThe process for installing third-party Haskell packages is specified at:and is no substitute for code review</field></doc>
<doc><field name="id">2082</field><field name="title">google-cabal2bazel</field><field name="session">cabal2bazel</field><field name="sentence">But it will automate the bulk ofchores, including:cabal2bazel attempts to map the dependencies of a Cabal library orexecutable to the 'deps' attribute of the resulting Bazel target.Things that still need manual attention include:NOTE: You will need an appropriate version of 'cabal' to be availableon your path; cabal2bazel uses it for downloading and unpacking packages.NOTE: Sometimes it is necessary to edit the cabal file and re-runcabal2bazel</field></doc>
<doc><field name="id">2083</field><field name="title">google-cabal2bazel</field><field name="session">cabal2bazel</field><field name="sentence">In such cases rerun cabal2bazel as follows to resume  cabal2bazel --wire-up //third_party/haskell/binary/v0_5_0_2</field></doc>
<doc><field name="id">2084</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">cAdvisor  Container Advisor  provides container users an understanding of the resource usage and performance characteristics of their running containers</field></doc>
<doc><field name="id">2085</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">It is a running daemon that collects, aggregates, processes, and exports information about running containers</field></doc>
<doc><field name="id">2086</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">Specifically, for each container it keeps resource isolation parameters, historical resource usage, histograms of complete historical resource usage and network statistics</field></doc>
<doc><field name="id">2087</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">This data is exported by container and machine-wide.cAdvisor has native support for  Docker  containers and should support just about any other container type out of the box</field></doc>
<doc><field name="id">2088</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">We strive for support across the board so feel free to open an issue if that is not the case</field></doc>
<doc><field name="id">2089</field><field name="title">google-cadvisor</field><field name="session">cAdvisor</field><field name="sentence">cAdvisor's container abstraction is based on  lmctfy  so containers are inherently nested hierarchically.! cAdvisor  logo.png "cAdvisor"</field></doc>
<doc><field name="id">2090</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">To quickly tryout cAdvisor on your machine with Docker, we have a Docker image that includes everything you need to get started</field></doc>
<doc><field name="id">2091</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">You can run a single cAdvisor to monitor the whole machine</field></doc>
<doc><field name="id">2092</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">Simply run:**Note**: If you're running on CentOS, Fedora, or RHEL  or are using LXC , take a look at our  running instructions  docs/running.md .We have detailed  instructions  docs/running.md#standalone  on running cAdvisor standalone outside of Docker</field></doc>
<doc><field name="id">2093</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">cAdvisor  running options  docs/runtime_options.md  may also be interesting for advanced usecases</field></doc>
<doc><field name="id">2094</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">If you want to build your own cAdvisor Docker image, see our  deployment  docs/deploy.md  page.For  Kubernetes  users, cAdvisor can be run as a daemonset</field></doc>
<doc><field name="id">2095</field><field name="title">google-cadvisor</field><field name="session">Quick Start: Running cAdvisor in a Docker Container</field><field name="sentence">See the  instructions  deploy/kubernetes  for how to get started, and for how to  kustomize  it to fit your needs.</field></doc>
<doc><field name="id">2096</field><field name="title">google-cadvisor</field><field name="session">Building and Testing</field><field name="sentence">See the more detailed instructions in the  build page  docs/development/build.md</field></doc>
<doc><field name="id">2097</field><field name="title">google-cadvisor</field><field name="session">Building and Testing</field><field name="sentence">This includes instructions for building and deploying the cAdvisor Docker image.</field></doc>
<doc><field name="id">2098</field><field name="title">google-cadvisor</field><field name="session">Exporting stats</field><field name="sentence">cAdvisor supports exporting stats to various storage plugins</field></doc>
<doc><field name="id">2099</field><field name="title">google-cadvisor</field><field name="session">Exporting stats</field><field name="sentence">See the  documentation  docs/storage/README.md  for more details and examples.</field></doc>
<doc><field name="id">2100</field><field name="title">google-cadvisor</field><field name="session">Web UI</field><field name="sentence">cAdvisor exposes a web UI at its port:See the  documentation  docs/web.md  for more details.</field></doc>
<doc><field name="id">2101</field><field name="title">google-cadvisor</field><field name="session">Remote REST API & Clients</field><field name="sentence">cAdvisor exposes its raw and processed stats via a versioned remote REST API</field></doc>
<doc><field name="id">2102</field><field name="title">google-cadvisor</field><field name="session">Remote REST API & Clients</field><field name="sentence">See the API's  documentation  docs/api.md  for more information.There is also an official Go client implementation in the  client  client/  directory</field></doc>
<doc><field name="id">2103</field><field name="title">google-cadvisor</field><field name="session">Remote REST API & Clients</field><field name="sentence">See the  documentation  docs/clients.md  for more information.</field></doc>
<doc><field name="id">2104</field><field name="title">google-cadvisor</field><field name="session">Roadmap</field><field name="sentence">cAdvisor aims to improve the resource usage and performance characteristics of running containers</field></doc>
<doc><field name="id">2105</field><field name="title">google-cadvisor</field><field name="session">Roadmap</field><field name="sentence">Today, we gather and expose this information to users</field></doc>
<doc><field name="id">2106</field><field name="title">google-cadvisor</field><field name="session">Roadmap</field><field name="sentence">In our roadmap:Contributions, questions, and comments are all welcomed and encouraged! cAdvisor developers hang out on  Slack  in the #sig-node channel  get an invitation  here  We also have the  kubernetes-users Google Groups mailing list</field></doc>
<doc><field name="id">2107</field><field name="title">google-caja</field><field name="session">Caja</field><field name="sentence">Caja is a tool for making third party HTML, CSS and JavaScript safe to embed in your website</field></doc>
<doc><field name="id">2108</field><field name="title">google-caja</field><field name="session">Caja</field><field name="sentence">It enables rich interaction between the embedding page and the embedded applications</field></doc>
<doc><field name="id">2109</field><field name="title">google-caja</field><field name="session">Caja</field><field name="sentence">Caja uses an object-capability security model to allow for a wide range of flexible security policies, so that your website can effectively control what embedded third party code can do with user data.Caja supports most HTML and CSS and the recently standardized "strict mode" JavaScript version of JavaScript -</field></doc>
<doc><field name="id">2110</field><field name="title">google-calblink</field><field name="session">What is this?</field><field name="sentence">Calblink is a small program to watch your Google Calendar and set a blink 1  USBLED to change colors based on your next meeting</field></doc>
<doc><field name="id">2111</field><field name="title">google-calblink</field><field name="session">What is this?</field><field name="sentence">The colors it will use are:</field></doc>
<doc><field name="id">2112</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">To use calblink, you need the following: A blink 1  from  ThingM  A place to put the blink 1  where you can see it</field></doc>
<doc><field name="id">2113</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">The latest version of  Go  The calblink code, found in this directory</field></doc>
<doc><field name="id">2114</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">libusb</field></doc>
<doc><field name="id">2115</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">The  go-blink1  page has details</field></doc>
<doc><field name="id">2116</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">A directory to run this in</field></doc>
<doc><field name="id">2117</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">A few go packages, which we'll install later in the Setup section</field></doc>
<doc><field name="id">2118</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">A Google Calendar account</field></doc>
<doc><field name="id">2119</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">A Google Calendar OAuth 2 client ID</field></doc>
<doc><field name="id">2120</field><field name="title">google-calblink</field><field name="session">What do I need use it?</field><field name="sentence">We'll discuss getting one in the Setup</field></doc>
<doc><field name="id">2121</field><field name="title">google-calblink</field><field name="session">How do I set this up?</field><field name="sentence">Install Go, and plug your blink 1  in somewhere that you can see it</field></doc>
<doc><field name="id">2122</field><field name="title">google-calblink</field><field name="session">How do I set this up?</field><field name="sentence">Bring up a command-line window, and create the directory you want to run Put calblink.go into the directory you just created</field></doc>
<doc><field name="id">2123</field><field name="title">google-calblink</field><field name="session">How do I set this up?</field><field name="sentence">Install libusb, if needed</field></doc>
<doc><field name="id">2124</field><field name="title">google-calblink</field><field name="session">How do I set this up?</field><field name="sentence">If you needed to, and used Homebrew as instructed Install the Google APIs for Go: Install the blink 1  library for Go: Get an OAuth 2 ID as described in step 1 of the  Google Calendar Run the calblink program: go run calblink.go It will request that you go to a URL and give it the token that you getThat's it! It should just run now, and set your blink 1  to change colorOptionally, set up a config file, as below.</field></doc>
<doc><field name="id">2125</field><field name="title">google-calblink</field><field name="session">What are the configuration options?</field><field name="sentence">First off, run it with the --help option to see what the command-line optionsare</field></doc>
<doc><field name="id">2126</field><field name="title">google-calblink</field><field name="session">What are the configuration options?</field><field name="sentence">Useful, perhaps, but maybe not what you want to use every time you run it.calblink will look for a file named  by default  conf.json for its configurationoptions</field></doc>
<doc><field name="id">2127</field><field name="title">google-calblink</field><field name="session">What are the configuration options?</field><field name="sentence">conf.json includes several useful options you can set:</field></doc>
<doc><field name="id">2128</field><field name="title">google-caliper</field><field name="session">Caliper</field><field name="sentence">Caliper is a tool for measuring Java code performance, primarily focused on</field></doc>
<doc><field name="id">2129</field><field name="title">google-caliper</field><field name="session">Building</field><field name="sentence">To build the JVM version of Caliper  the only supported version at the moment ,Caliper currently has a number of artifacts related to Android</field></doc>
<doc><field name="id">2130</field><field name="title">google-caliper</field><field name="session">Building</field><field name="sentence">These are ina transitional state and no easy way to run Caliper benchmarks on Android iscurrently available.If you are interested in building the Android artifacts for any reason, you canthat way, and/or -Dandroid.sdk.version= to specify a version otherthan 25  but note that the build may not work with a version lower than 25 .</field></doc>
<doc><field name="id">2131</field><field name="title">google-cameraview</field><field name="session">CameraView</field><field name="sentence">*This is a preview release</field></doc>
<doc><field name="id">2132</field><field name="title">google-cameraview</field><field name="session">CameraView</field><field name="sentence">The API is subject to change.*This is not an official Google product.CameraView aims to help Android developers easily integrate Camera features.Requires API Level The library uses Camera 1 API on API Level 9-20 and Camera2 on 21 and above.| API Level | Camera API | Preview View || 9-13| 14-20| 21-23| 24</field></doc>
<doc><field name="id">2133</field><field name="title">google-cameraview</field><field name="session">Features</field><field name="sentence">You can see a complete usage in the demo app.</field></doc>
<doc><field name="id">2134</field><field name="title">google-cameraview</field><field name="session">Contribution</field><field name="sentence">See  CONTRIBUTING.md  /CONTRIBUTING.md .</field></doc>
<doc><field name="id">2135</field><field name="title">google-canvas-5-polyfill</field><field name="session">Canvas 5 Polyfill</field><field name="sentence">Canvas 5 Polyfill is a Javascript polyfill library to fill in new features for HTML 5Canvas that browsers may not have implemented yet, such as Path2D objects andellipse   on CanvasRenderingContext2D.</field></doc>
<doc><field name="id">2136</field><field name="title">google-canvas-5-polyfill</field><field name="session">Installation</field><field name="sentence">Canvas 5 Polyfill uses  Bower  to make installation easy:</field></doc>
<doc><field name="id">2137</field><field name="title">google-canvas-5-polyfill</field><field name="session">Status</field><field name="sentence">Canvas 5 Polyfill adds the following classes and methods to an existing HTMLCanvas implementation if they are missing, if they are not missing the nativeimplementations are used:The polyfill adds the following methods to CanvasRenderingContext2D:It also adds Path2D with the following constructors:Where Path2D has the following methods:</field></doc>
<doc><field name="id">2138</field><field name="title">google-canvas-5-polyfill</field><field name="session">Caveats</field><field name="sentence">With this polyfill installed, the calls to context.clip path ,context.isPointInPath path, x, y  and context.isPointInStroke path, x, y all affect the current path.When using the polyfill the best approach is to move strictly to usingPath2D objects to describe paths and then use the path enabled callson the context, such as ctx.fill path</field></doc>
<doc><field name="id">2139</field><field name="title">google-canvas-5-polyfill</field><field name="session">Caveats</field><field name="sentence">Do not mix and match such calls.</field></doc>
<doc><field name="id">2140</field><field name="title">google-cap-library</field><field name="session">Common Alerting Protocol Library</field><field name="sentence">Copyright 2014 Google Inc.The CAP Library is a collection of code and tools to work with public alertingmessages in the  Common Alerting Protocol  format.Namely, a well-tested and easy-to-use Java library that supports to validate the correctness of CAP messages.</field></doc>
<doc><field name="id">2141</field><field name="title">google-cap-library</field><field name="session">About</field><field name="sentence">The CAP Library is designed to support CAP versions 1.0, 1.1, and 1.There are classes that can parse XML CAP messages as well as easilycreate new messages and write them to XML, JSON,  soon  ASN.1, and  soon  KML.The main data structures are auto-generated from a Google protocolbuffer implementation of the CAP spec in proto/cap.proto</field></doc>
<doc><field name="id">2142</field><field name="title">google-cap-library</field><field name="session">About</field><field name="sentence">Protocol buffers are Google's language-neutral, platform-neutral, extensible mechanism forserializing structured data The generated classes offer a clean API for creating and manipulatingalert objects</field></doc>
<doc><field name="id">2143</field><field name="title">google-cap-library</field><field name="session">About</field><field name="sentence">The alert data structures are immutable; they provide onlygetters</field></doc>
<doc><field name="id">2144</field><field name="title">google-cap-library</field><field name="session">About</field><field name="sentence">New alerts are constructed via Builder classes</field></doc>
<doc><field name="id">2145</field><field name="title">google-cap-library</field><field name="session">About</field><field name="sentence">See javatests/com/google/publicalerts/cap/TestUtil.java, for an example.javatests/com/google/publicalerts/cap/EndToEndTest.java provides a goodoverview of how to get started using the library.To learn more about Google protocol buffers, see and</field></doc>
<doc><field name="id">2146</field><field name="title">google-cap-library</field><field name="session">###Install ant</field><field name="sentence">You can download and install Apache Ant from</field></doc>
<doc><field name="id">2147</field><field name="title">google-capillary</field><field name="session">Capillary</field><field name="sentence">This is a library to simplify the sending of end-to-end  E2E  encrypted push messages fromJava-based application servers to Android clients</field></doc>
<doc><field name="id">2148</field><field name="title">google-capillary</field><field name="session">Capillary</field><field name="sentence">Please check the instructions below and the demo  demo  for more details.</field></doc>
<doc><field name="id">2149</field><field name="title">google-capillary</field><field name="session">Installation</field><field name="sentence">To add a dependency using Maven:            To add a dependency using Gradle:  dependencies {  }    dependencies {  }</field></doc>
<doc><field name="id">2150</field><field name="title">google-capillary</field><field name="session">API docs</field><field name="sentence">To use push messaging services to send messages to connected devices, developers must send themthrough a third party messaging service, such as Firebase Cloud Messaging   FCM .It’s simple to encrypt message contents between the developer and the messaging service using https.Major messaging services, including  FCM  alsoencrypt messages between their servers and client devices.However, messages between the developer server and the user devices are not encryptedend-to-end  E2E :! no e2ee  img/no_e2ee.png E2E encryption can be achieved by generating an asymmetric encryption key pair on the client,registering the public key with the developer messaging service, encrypting outgoing messages withthe public key, and decrypting messages on the client using the private key:! with capillary  img/with_capillary.png Capillary handles these operations for push messaging services used by Android apps</field></doc>
<doc><field name="id">2151</field><field name="title">google-capillary</field><field name="session">API docs</field><field name="sentence">It includes: KitKat   API level 19 .As a bonus, it also allows developers to require that devices are unlocked before selected messagescan be decrypted</field></doc>
<doc><field name="id">2152</field><field name="title">google-capillary</field><field name="session">API docs</field><field name="sentence">This includes messages on devices using File-Based Encryption   FBE :encrypted messages are cached in Device Encrypted  DE  storage and message decryption keys arestored in Android keystore  requiring user authentication This allows developers to specify messages with sensitive content to remain encrypted in cached formuntil the user has unlocked and decrypted their device.</field></doc>
<doc><field name="id">2153</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">developers to share code and key storage infrastructure with existing Web Push implementations</field></doc>
<doc><field name="id">2154</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">Web Push protocol is based on the Elliptic-curve Diffie-Hellman  ECDH  key exchange algorithm,  which is highly efficient for performance-constrained devices</field></doc>
<doc><field name="id">2155</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">Note that apps  as opposed to  browsers  cannot receive raw Web Push messages through FCM, but Web Push messages can easily be  wrapped in the appropriate FCM JSON by a proxy implementation, allowing you to use the same  infrastructure with minor modifications</field></doc>
<doc><field name="id">2156</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">RSA key stored in keystore meaning that EC private key plaintext is available in user memory  during crypto operations</field></doc>
<doc><field name="id">2157</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">and signs the ciphertext with a developer-generated ECDSA public key  for integrity</field></doc>
<doc><field name="id">2158</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">RSA crypto  operations  encrypt, decrypt  are supported by Android Keystore from SDK versions 18  Jelly Bean   and above, meaning key material is not available outside of the trusted execution environment</field></doc>
<doc><field name="id">2159</field><field name="title">google-capillary</field><field name="session">Web Push vs RSA-ECDSA</field><field name="sentence">This means even a sophisticated attacker with access to the device memory cannot access private  key material  for example, to decrypt future messages arriving in Direct Boot mode .</field></doc>
<doc><field name="id">2160</field><field name="title">google-capillary</field><field name="session">Auth vs NoAuth</field><field name="sentence">Auth bound keys ensures that messages cannot be read by users when their device is locked, meaningsensitive content will not be readable by shoulder-surfers or if the device is lost or stolen.</field></doc>
<doc><field name="id">2161</field><field name="title">google-capillary</field><field name="session">API Overview</field><field name="sentence">Capillary provides the core crypto functionality required to send  from an application server  andreceive encrypted push messages in Android apps</field></doc>
<doc><field name="id">2162</field><field name="title">google-capillary</field><field name="session">API Overview</field><field name="sentence">This covers:Because server-side architectures and push messaging use-cases are many and varied, it is notpractical to provide a server-side API to handle all possible push message implementations.Therefore, we have decoupled the crypto functionality above from message transmission andserver-side key storage/retrieval functions</field></doc>
<doc><field name="id">2163</field><field name="title">google-capillary</field><field name="session">API Overview</field><field name="sentence">We have, however, provided a full-stack implementationthat uses Capillary to send E2E-encrypted push messages from a Java-based server to Android clientsin the  demo application  demo</field></doc>
<doc><field name="id">2164</field><field name="title">google-capillary</field><field name="session">API Overview</field><field name="sentence">In summary, you will need to implement the following aspects of thesolution yourself  using the  demo application  demo  and instructions below for guidance whererequired :  the screen .</field></doc>
<doc><field name="id">2165</field><field name="title">google-capillary</field><field name="session">API Integration</field><field name="sentence">Please follow the following steps to integrate with the Capillary library.</field></doc>
<doc><field name="id">2166</field><field name="title">google-capillary</field><field name="session">Prerequisites</field><field name="sentence">Before the Capillary library can be used, it must be initialized at runtime as follows:import com.google.capillary.Config;Config.initialize  ;If you are using RSA-ECDSA algorithm, you need to generate an ECDSA public/private key pair and makethe public key available to your Android app  e.g., as a raw resource and private key available to your application server</field></doc>
<doc><field name="id">2167</field><field name="title">google-capillary</field><field name="session">Prerequisites</field><field name="sentence">Use the  utility program  tools  that we haveprovided to generate such ECDSA key pairs:</field></doc>
<doc><field name="id">2168</field><field name="title">google-capillary</field><field name="session">Capillary Handler Implementation</field><field name="sentence">The Capillary library uses methods of the  CapillaryHandler  lib-android/src/main/java/com/google/capillary/android/CapillaryHandler.java interface to provide responses, such as public keys, decrypted plaintexts, etc., back to the Androidapp</field></doc>
<doc><field name="id">2169</field><field name="title">google-capillary</field><field name="session">Capillary Handler Implementation</field><field name="sentence">Therefore, the first step in integrating an Android app with the Capillary library is toimplement the CapillaryHandler  lib-android/src/main/java/com/google/capillary/android/CapillaryHandler.java interface with your app-specific logic to handle the responses mentioned above</field></doc>
<doc><field name="id">2170</field><field name="title">google-capillary</field><field name="session">Capillary Handler Implementation</field><field name="sentence">You can see howthe Capillary library's  demo Android app  demo/android  implements the CapillaryHandler  lib-android/src/main/java/com/google/capillary/android/CapillaryHandler.java  interfacein  DemoCapillaryHandler  demo/android/src/main/java/com/google/capillary/demo/android/DemoCapillaryHandler.java  class.</field></doc>
<doc><field name="id">2171</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">Each Capillary key pair is identified by a key pair ID  aka keychain ID , which is an arbitrarystring that is up to you to decide</field></doc>
<doc><field name="id">2172</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">To generate a key pair:import android.content.Context;import com.google.capillary.android.RsaEcdsaKeyManager;import com.google.capillary.android.WebPushKeyManager;import java.io.InputStream;Context context = ..</field></doc>
<doc><field name="id">2173</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">// The current app context.String keychainId = ..</field></doc>
<doc><field name="id">2174</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">// Some identifier for the key pair.boolean isAuth = ..</field></doc>
<doc><field name="id">2175</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">// Whether the private key usage should be guarded by the device lock.// To generate an RSA-ECDSA key pair.InputStream senderVerificationKey = ..</field></doc>
<doc><field name="id">2176</field><field name="title">google-capillary</field><field name="session">Key Generation</field><field name="sentence">// The ECDSA public key of the server.RsaEcdsaKeyManager.getInstance context, keychainId, senderVerificationKey .generateKeyPair isAuth ;// To generate a Web Push key pair.WebPushKeyManager.getInstance context, keychainId .generateKeyPair isAuth ;There is also a  generateKeyPairs  lib-android/src/main/java/com/google/capillary/android/KeyManager.java method to generate both Auth and NoAuth keys in a single method call.</field></doc>
<doc><field name="id">2177</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">After generating a Capillary key pair, you can retrieve the generated public key in a byte array asjavaimport android.content.Context;import com.google.capillary.android.CapillaryHandler;import com.google.capillary.android.RsaEcdsaKeyManager;import com.google.capillary.android.WebPushKeyManager;import java.io.InputStream;Context context = ..</field></doc>
<doc><field name="id">2178</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// The current app context.String keychainId = ..</field></doc>
<doc><field name="id">2179</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// The identifier for the key pair.boolean isAuth = ..</field></doc>
<doc><field name="id">2180</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// Whether the private key usage is guarded by the device lock.CapillaryHandler handler = ..</field></doc>
<doc><field name="id">2181</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// An implementation of CapillaryHandler interface.Object extra = ..</field></doc>
<doc><field name="id">2182</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// Any extra information to be passed back to the handler.// To obtain an RSA-ECDSA public key.InputStream senderVerificationKey = ..</field></doc>
<doc><field name="id">2183</field><field name="title">google-capillary</field><field name="session">Public Key Retrieval</field><field name="sentence">// The ECDSA public key of the server.RsaEcdsaKeyManager.getInstance context, keychainId, senderVerificationKey // To obtain a Web Push public key.WebPushKeyManager.getInstance context, keychainId .getPublicKey isAuth, handler, extra ;// The Capillary library returns a byte array representing the Capillary public key via the// handlePublicKey method of the CapillaryHandler instance.</field></doc>
<doc><field name="id">2184</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">After receiving a ciphertext generated using a Capillary public key, you can decrypt it as follows:import android.content.Context;import com.google.capillary.android.CapillaryHandler;import com.google.capillary.android.RsaEcdsaKeyManager;import com.google.capillary.android.WebPushKeyManager;import java.io.InputStream;byte   ciphertext = ..</field></doc>
<doc><field name="id">2185</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The ciphertext received through FCM.Context context = ..</field></doc>
<doc><field name="id">2186</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The current app context.String keychainId = ..</field></doc>
<doc><field name="id">2187</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The identifier for the key pair.CapillaryHandler handler = ..</field></doc>
<doc><field name="id">2188</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// An implementation of CapillaryHandler interface.Object extra = ..</field></doc>
<doc><field name="id">2189</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// Any extra information to be passed back to the handler.// To decrypt a ciphertext and pass the plaintext to the CapillaryHandler instance,//  e.g</field></doc>
<doc><field name="id">2190</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">for display to the user :// For RSA-ECDSA:InputStream senderVerificationKey = ..</field></doc>
<doc><field name="id">2191</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The ECDSA public key of the server.RsaEcdsaKeyManager.getInstance context, keychainId, senderVerificationKey // For Web Push:WebPushKeyManager.getInstance context, keychainId // The Capillary library returns a byte array representing the plaintext via the handleData// method of the CapillaryHandler instance.Keep in mind that during decryption, the Capillary library may automatically re-generatethe underlying Capillary key pairs if those key pairs are irrecoverably corrupted, which can happen,for example, when the user adds/resets the device lock, resets app storage, etc</field></doc>
<doc><field name="id">2192</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">Such a newlygenerated public key along with the Capillary ciphertext bytes that triggered key re-generationwill be passed to the Android app via the appropriate methods of the CapillaryHandler  lib-android/src/main/java/com/google/capillary/android/CapillaryHandler.java .If the ciphertext has been generated using an Auth key but the Android device is in anunauthenticated context, the Capillary library internally saves the ciphertext to be decrypted laterand informs the Android app via the authCiphertextSavedForLater  lib-android/src/main/java/com/google/capillary/android/CapillaryHandler.java method</field></doc>
<doc><field name="id">2193</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">This allows the Android app to handle cached ciphertexts, e.g</field></doc>
<doc><field name="id">2194</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">by telling the user messagesare available upon unlock</field></doc>
<doc><field name="id">2195</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">Upon the user unlocking the device, you can have the Capillary librarydecrypt any saved ciphertexts as follows:import android.content.Context;import com.google.capillary.android.CapillaryHandler;import com.google.capillary.android.RsaEcdsaKeyManager;import com.google.capillary.android.WebPushKeyManager;import java.io.InputStream;Context context = ..</field></doc>
<doc><field name="id">2196</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The current app context.String keychainId = ..</field></doc>
<doc><field name="id">2197</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The identifier for the key pair.CapillaryHandler handler = ..</field></doc>
<doc><field name="id">2198</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// An implementation of CapillaryHandler interface.Object extra = ..</field></doc>
<doc><field name="id">2199</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// Any extra information to be passed back to the handler.// To decrypt saved ciphertexts and pass the plaintexts to the CapillaryHandler instance,//  e.g</field></doc>
<doc><field name="id">2200</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">for display to the user :// For RSA-ECDSA:InputStream senderVerificationKey = ..</field></doc>
<doc><field name="id">2201</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">// The ECDSA public key of the server.RsaEcdsaKeyManager.getInstance context, keychainId, senderVerificationKey // For Web Push:WebPushKeyManager.getInstance context, keychainId // For each decrypted ciphertext, the Capillary library returns a byte array representing the// plaintext via the handleData method of the CapillaryHandler instance.There are several ways to trigger the handler for cached ciphertext upon device unlock</field></doc>
<doc><field name="id">2202</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">The approachused by the Capillary library's  demo Android app  demo/android  is to listen for the ACTION_USER_PRESENT broadcast intent</field></doc>
<doc><field name="id">2203</field><field name="title">google-capillary</field><field name="session">Decryption</field><field name="sentence">See DeviceUnlockedBroadcastReceiver  android/src/main/java/com/google/capillary/demo/android/DeviceUnlockedBroadcastReceiver.java for more details.</field></doc>
<doc><field name="id">2204</field><field name="title">google-capillary</field><field name="session">Key Deletion</field><field name="sentence">To delete a Capillary key pair:import android.content.Context;import com.google.capillary.android.RsaEcdsaKeyManager;import com.google.capillary.android.WebPushKeyManager;import java.io.InputStream;Context context = ..</field></doc>
<doc><field name="id">2205</field><field name="title">google-capillary</field><field name="session">Key Deletion</field><field name="sentence">// The current app context.String keychainId = ..</field></doc>
<doc><field name="id">2206</field><field name="title">google-capillary</field><field name="session">Key Deletion</field><field name="sentence">// The identifier for the key pair.boolean isAuth = ..</field></doc>
<doc><field name="id">2207</field><field name="title">google-capillary</field><field name="session">Key Deletion</field><field name="sentence">// Whether the private key usage is guarded by the device lock.// To delete an RSA-ECDSA key pair.InputStream senderVerificationKey = ..</field></doc>
<doc><field name="id">2208</field><field name="title">google-capillary</field><field name="session">Key Deletion</field><field name="sentence">// The ECDSA public key of the server.RsaEcdsaKeyManager.getInstance context, keychainId, senderVerificationKey .deleteKeyPair isAuth ;// To delete a Web Push key pair.WebPushKeyManager.getInstance context, keychainId .deleteKeyPair isAuth ;</field></doc>
<doc><field name="id">2209</field><field name="title">google-capillary</field><field name="session">On Java Application Servers</field><field name="sentence">The Capillary library provides the functionality to encrypt messages on Java-based applicationservers</field></doc>
<doc><field name="id">2210</field><field name="title">google-capillary</field><field name="session">Encryption</field><field name="sentence">To encrypt a message using a Capillary public key:import com.google.capillary.EncrypterManager;import com.google.capillary.RsaEcdsaEncrypterManager;import com.google.capillary.WebPushEncrypterManager;import java.io.InputStream;byte   recipientPublicKey = ..</field></doc>
<doc><field name="id">2211</field><field name="title">google-capillary</field><field name="session">Encryption</field><field name="sentence">// The Capillary public key of the client.byte   message = ..</field></doc>
<doc><field name="id">2212</field><field name="title">google-capillary</field><field name="session">Encryption</field><field name="sentence">// The message to be sent to the client.// To create an RSA-ECDSA ciphertext.InputStream senderSigningKey = ..</field></doc>
<doc><field name="id">2213</field><field name="title">google-capillary</field><field name="session">Encryption</field><field name="sentence">// The ECDSA private key of the server.EncrypterManager rsaEcdsaEncrypterManager = new RsaEcdsaEncrypterManager senderSigningKey ;rsaEcdsaEncrypterManager.loadPublicKey recipientPublicKey ;byte   ciphertext = rsaEcdsaEncrypterManager.encrypt message ;// This step is not strictly necessary, but it ensures that the EncrypterManager releases the// stored public key for garbage collection.rsaEcdsaEncrypterManager.clearPublicKey  ;// To create a Web Push ciphertext.EncrypterManager webPushEncrypterManager = new WebPushEncrypterManager  ;webPushEncrypterManager.loadPublicKey recipientPublicKey ;byte   ciphertext = webPushEncrypterManager.encrypt message ;webPushEncrypterManager.clearPublicKey  ;</field></doc>
<doc><field name="id">2214</field><field name="title">google-capillary</field><field name="session">Maintainers</field><field name="sentence">The Capillary library is maintained by the following Googlers:</field></doc>
<doc><field name="id">2215</field><field name="title">google-capirca</field><field name="session">Capirca</field><field name="sentence">Capirca is a tool designed to utilize common definitions of networks, services and high-level policy files to facilitate the development and manipulation of network access control lists  ACLs  for various platforms</field></doc>
<doc><field name="id">2216</field><field name="title">google-capirca</field><field name="session">Capirca</field><field name="sentence">It was developed by Google for internal use, and is now open source.</field></doc>
<doc><field name="id">2217</field><field name="title">google-capsicum-test</field><field name="session">Capsicum User Space Tests</field><field name="sentence">This directory holds unit tests for  Capsicum object-capabilities</field></doc>
<doc><field name="id">2218</field><field name="title">google-capsicum-test</field><field name="session">Capsicum User Space Tests</field><field name="sentence">The tests exercise the syscall interface to a Capsicum-enabled operating system,currently either  FreeBSD >=10.x  or a modified Linux kernel  the capsicum-linux  project .The tests are written in C++98, and use the  Google Test framework, with some additions to fork off particular tests  because a process that enters capabilitymode cannot leave it again .</field></doc>
<doc><field name="id">2219</field><field name="title">google-capsicum-test</field><field name="session">Provenance</field><field name="sentence">The original basis for these tests was:comparative testing across multiple OSes, and then substantially extended.</field></doc>
<doc><field name="id">2220</field><field name="title">google-capsicum-test</field><field name="session">Linux</field><field name="sentence">The following additional development packages are needed to build the full test suite on Linux.The Capsicum userspace library is held in the libcaprights/ subdirectory</field></doc>
<doc><field name="id">2221</field><field name="title">google-capsicum-test</field><field name="session">Linux</field><field name="sentence">Ideally, thislibrary should be built  with ./configure; make or dpkg-buildpackage -uc -us  andinstalled  with make install or dpkg -i libcaprights*.deb  so that the tests willuse behave like a normal Capsicum-aware application.However, if no installed copy of the library is found, the GNUmakefile will attemptto use the local libcaprights/*.c source; this requires ./configure to have beenperformed in the libcaprights subdirectory</field></doc>
<doc><field name="id">2222</field><field name="title">google-capsicum-test</field><field name="session">Linux</field><field name="sentence">The local code is also used forcross-compiled builds of the test suite  e.g</field></doc>
<doc><field name="id">2223</field><field name="title">google-capsicum-test</field><field name="session">Linux</field><field name="sentence">make ARCH=32 or make ARCH=x32 .</field></doc>
<doc><field name="id">2224</field><field name="title">google-capture-thread</field><field name="session">Capture Thread Library  google/capture-thread</field><field name="sentence">Framework for loggers, tracers, and mockers in multithreaded C++ programs.* This is not an official Google product</field></doc>
<doc><field name="id">2225</field><field name="title">google-capture-thread</field><field name="session">Capture Thread Library  google/capture-thread</field><field name="sentence">*</field></doc>
<doc><field name="id">2226</field><field name="title">google-capture-thread</field><field name="session">Motivation</field><field name="sentence">When developing C++ projects,  instrumentation  instrumentation  is frequentlyused to collect information from the system, inject information into the system,or both</field></doc>
<doc><field name="id">2227</field><field name="title">google-capture-thread</field><field name="session">Motivation</field><field name="sentence">The role of this information within the system rarely lines up with theactual structure of the project.For example:This library is designed to handle all of these situations with minimalintrusion into your project, and without leaking details in your API.</field></doc>
<doc><field name="id">2228</field><field name="title">google-capture-thread</field><field name="session">Summary</field><field name="sentence">The **Capture Thread Library*thread-locality, which allows the sharing of static variables *only within thecurrent thread*</field></doc>
<doc><field name="id">2229</field><field name="title">google-capture-thread</field><field name="session">Summary</field><field name="sentence">Canonical static variables, on the other hand, are problematicdue to ownership and thread-safety issues.This library establishes the following idiom * using logging as an example *: The instrumentation is 100% passive unless it is explicitly enabled</field></doc>
<doc><field name="id">2230</field><field name="title">google-capture-thread</field><field name="session">Summary</field><field name="sentence">* For Instrumentation is enabled in the current thread by *instantiating While enabled, the instrumentation transparently alters the behavior of Instrumentation can be shared across threads in *explicitly-specified</field></doc>
<doc><field name="id">2231</field><field name="title">google-capture-thread</field><field name="session">Key Design Points</field><field name="sentence">The **Capture Thread Library*and reliable:</field></doc>
<doc><field name="id">2232</field><field name="title">google-capture-thread</field><field name="session">Caveats</field><field name="sentence">In some cases, it might not be appropriate  or possible  to use the **CaptureThread Library**:</field></doc>
<doc><field name="id">2233</field><field name="title">google-capture-thread</field><field name="session">Quick Start</field><field name="sentence">Instrumenting a project has four steps</field></doc>
<doc><field name="id">2234</field><field name="title">google-capture-thread</field><field name="session">Quick Start</field><field name="sentence">These assume that your project isalready functional, and is just lacking instrumentation</field></doc>
<doc><field name="id">2235</field><field name="title">google-capture-thread</field><field name="session">Quick Start</field><field name="sentence">Create an instrumentation class to contain the state to be shared</field></doc>
<doc><field name="id">2236</field><field name="title">google-capture-thread</field><field name="session">Quick Start</field><field name="sentence">Instrument your project with logging points, tracing points, or mocking Where control is passed between threads, e.g., creating a thread or passing As needed, instantiate the instrumentation class es  to enable theComplexity estimates below are estimates of how much additional work will benecessary as your project grows.</field></doc>
<doc><field name="id">2237</field><field name="title">google-capture-thread</field><field name="session">Step 1: Instrumentation Class  O 1</field><field name="sentence">The instrumentation class es  will generally be written once and then leftalone</field></doc>
<doc><field name="id">2238</field><field name="title">google-capture-thread</field><field name="session">Step 1: Instrumentation Class  O 1</field><field name="sentence">They might also be general enough for use in multiple projects.</field></doc>
<doc><field name="id">2239</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">// This class provides the instrumentation logic, both at the point the// instrumentation is used  e.g., logging points  and where it is enabled  e.g.,// log-capture points</field></doc>
<doc><field name="id">2240</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">Note that instances of ThreadCapture cannot be moved,// copied, or dynamically allocated.class Logger : public capture_thread::ThreadCapture { public:  Logger   : cross_and_capture_to_ this  {}  // no-op if no instrumentation is in scope</field></doc>
<doc><field name="id">2241</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">static void Log const std::string& line  {  }  // to access its contents</field></doc>
<doc><field name="id">2242</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">This is only necessary when the instrumentation is  // gathering information, as opposed to propagating information</field></doc>
<doc><field name="id">2243</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">std::list GetLines   {  } private:  // The private implementation applies to the instrumentation only when it's in  // scope</field></doc>
<doc><field name="id">2244</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">This does not need to exactly mirror the static API, and in fact  // only needs to differentiate between default and override behaviors</field></doc>
<doc><field name="id">2245</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">void LogLine const std::string& line  {  }  std::list lines_;  // Add an AutoThreadCrosser to ensure that scoping is handled correctly</field></doc>
<doc><field name="id">2246</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">If  // you absolutely don't want the instrumentation crossing threads, use  // ScopedCapture instead</field></doc>
<doc><field name="id">2247</field><field name="title">google-capture-thread</field><field name="session">#include "thread-capture.h"</field><field name="sentence">Always initialize with</field></doc>
<doc><field name="id">2248</field><field name="title">google-capture-thread</field><field name="session">Step 2: Instrument the Code  O n</field><field name="sentence">Instrumenting the code with your new instrumentation class will generallyconsist of one-line additions throughout the code</field></doc>
<doc><field name="id">2249</field><field name="title">google-capture-thread</field><field name="session">Step 2: Instrument the Code  O n</field><field name="sentence">There will often be a largenumber of instrumentation points in the code.// #include the header for your instrumentation class.// This function already exists in your code, and performs some sort of work for// which you want to use the instrumentation.void MyExistingFunction   {  // Add calls to the static API where you need access to the instrumentation</field></doc>
<doc><field name="id">2250</field><field name="title">google-capture-thread</field><field name="session">Step 2: Instrument the Code  O n</field><field name="sentence">Logger::Log "MyExistingFunction called" ;</field></doc>
<doc><field name="id">2251</field><field name="title">google-capture-thread</field><field name="session">Step 3: Cross Threads  O log n</field><field name="sentence">Crossing threads is necessary when the process you are tracking splits workamong multiple threads</field></doc>
<doc><field name="id">2252</field><field name="title">google-capture-thread</field><field name="session">Step 3: Cross Threads  O log n</field><field name="sentence">The complexity here depends on both what you consider asingle task  e.g., processing a query  and how that work is split among threads.</field></doc>
<doc><field name="id">2253</field><field name="title">google-capture-thread</field><field name="session">#include "thread-crosser.h"</field><field name="sentence">//  You don't need to #include the header for your instrumentation class here</field></doc>
<doc><field name="id">2254</field><field name="title">google-capture-thread</field><field name="session">#include "thread-crosser.h"</field><field name="sentence">// This function already exists in your code, and parallelizes some// functionality that needs to use the instrumentation, but doesn't need to use// the instrumentation itself.void ParallelizeWork   {  // Previously, the code just created a thread</field></doc>
<doc><field name="id">2255</field><field name="title">google-capture-thread</field><field name="session">#include "thread-crosser.h"</field><field name="sentence">// std::thread worker &MyExistingFunction ;  // WrapCall when passing work to a worker thread, e.g., a thread pool</field></doc>
<doc><field name="id">2256</field><field name="title">google-capture-thread</field><field name="session">#include "thread-crosser.h"</field><field name="sentence">std::thread worker   worker.join  ;</field></doc>
<doc><field name="id">2257</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">Your instrumentation must have default behavior that makes sense when theinstrumentation is not enabled</field></doc>
<doc><field name="id">2258</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">Instrumentation can only be enabled byinstantiating the implementation, and will only be available until that instancegoes out of scope</field></doc>
<doc><field name="id">2259</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">There should be *very fewusually just one per instrumentation type  in your code.// #include the header for your instrumentation class.int main   {  // If no instrumentation is in scope, the default behavior of the static API  // is used where instrumentation calls are made</field></doc>
<doc><field name="id">2260</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">In this case, this will just  // print the line to std::cerr</field></doc>
<doc><field name="id">2261</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">ParallelizeWork  ;  // instantiate your class</field></doc>
<doc><field name="id">2262</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">The framework will take care of the rest</field></doc>
<doc><field name="id">2263</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">Logger logger;  // rather than the default behavior of printing to std::cerr</field></doc>
<doc><field name="id">2264</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">ParallelizeWork  ;  // the local instance</field></doc>
<doc><field name="id">2265</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">for  const std::string& line : logger.GetLines    {  }The instantiation point will depend on the semantics you are going for</field></doc>
<doc><field name="id">2266</field><field name="title">google-capture-thread</field><field name="session">Step 4: Enable Instrumentation  O 1</field><field name="sentence">Forexample, if you are mocking, you might only instantiate the instrumentation inunit tests, and use the default behavior in the released code.</field></doc>
<doc><field name="id">2267</field><field name="title">google-capture-thread</field><field name="session">Contributing</field><field name="sentence">See  CONTRIBUTING.md  CONTRIBUTING.md  for guidelines</field></doc>
<doc><field name="id">2268</field><field name="title">google-capture-thread</field><field name="session">Contributing</field><field name="sentence">All contributions mustfollow the Google C++ style guide at **Contributions should bemade to the  current  current  branch, which will periodically be merged with master  master  after a more thorough review.** google/capture-thread :  master :  current :  instrumentation :</field></doc>
<doc><field name="id">2269</field><field name="title">google-cargo-raze</field><field name="session">cargo-raze: Bazel BUILD generation for Rust Crates</field><field name="sentence">An experimental support Cargo plugin for distilling a workspace-levelCargo.toml into BUILD targets that code using  rules_rust can depend on directly.</field></doc>
<doc><field name="id">2270</field><field name="title">google-cargo-raze</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">2271</field><field name="title">google-cargo-raze</field><field name="session">Overview</field><field name="sentence">This project synthesizes the dependency resolution logic and some of thefunctionality of Cargo such as features and build scripts into executablerules that Bazel can run to compile Rust crates</field></doc>
<doc><field name="id">2272</field><field name="title">google-cargo-raze</field><field name="session">Overview</field><field name="sentence">Though the standard rules_rustrules can be used to compile Rust code from scratch, the fine granularity of thedependency ecosystem makes transforming dependency trees based on that ecosystemonerous, even for code with few dependencies.</field></doc>
<doc><field name="id">2273</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">cargo-raze can generate buildable targets in one of two modes: Vendoring, orNon-Vendoring</field></doc>
<doc><field name="id">2274</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">In the vendoring mode, developers use the common cargo-vendortool to retrieve the dependencies indicated by their workspace Cargo.toml intodirectories that cargo-raze then populates with BUILD files</field></doc>
<doc><field name="id">2275</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">In thenon-vendoring mode, cargo-raze generates a flat list of BUILD files, and aworkspace-level macro that can be invoked in the WORKSPACE file to pull down thedependencies automatically in similar fashion to Cargo itself.In both cases, the first step is to decide where to situate the Cargodependencies in the workspace</field></doc>
<doc><field name="id">2276</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">This library was designed with monorepos in mind,where an organization decides upon a set of dependencies that everyone pointsat</field></doc>
<doc><field name="id">2277</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">It is intended that stakeholders in the dependencies collaborate to upgradedependencies atomically, and fix breakages across their codebase simultaneously.In the event that this isn't feasible, it is still possible to use cargo-raze ina decentralized scenario, but its unlikely that such decoupled repositorieswould interact well together with the current implementation.Regardless of the approach chosen, the rust_rules should be brought in to theWORKSPACE</field></doc>
<doc><field name="id">2278</field><field name="title">google-cargo-raze</field><field name="session">Usage</field><field name="sentence">Here is an example:git_repository  load "@io_bazel_rules_rust//rust:repositories.bzl", "rust_repositories" rust_repositories</field></doc>
<doc><field name="id">2279</field><field name="title">google-cargo-raze</field><field name="session">Vendoring Mode</field><field name="sentence">In Vendoring mode, a root directly is selected that will house the vendoreddependencies and become the gateway to those build rules</field></doc>
<doc><field name="id">2280</field><field name="title">google-cargo-raze</field><field name="session">Vendoring Mode</field><field name="sentence">"//cargo" isconventional, but "//third_party/cargo" may be desirable to satisfyorganizational needs</field></doc>
<doc><field name="id">2281</field><field name="title">google-cargo-raze</field><field name="session">Vendoring Mode</field><field name="sentence">Vendoring directly into root isn't well supported due toimplementation-specific idiosyncracies, but it may be supported in the future.From here forward, "//cargo" will be the assumed directory.</field></doc>
<doc><field name="id">2282</field><field name="title">google-cargo-raze</field><field name="session">Generate a Cargo.toml</field><field name="sentence">Generate a Cargo.toml, similar to Vendoring mode but add a new directive in theThis tells Raze not to expect the dependencies to be vendored and to generatedifferent files.</field></doc>
<doc><field name="id">2283</field><field name="title">google-cargo-raze</field><field name="session">Mandatory  or Cargo tooling is unhappy</field><field name="sentence">lib path = "fake_lib.rs" dependencies log = "=0.3.6" raze</field></doc>
<doc><field name="id">2284</field><field name="title">google-cargo-raze</field><field name="session">The WORKSPACE relative path to the Cargo.toml working directory.</field><field name="sentence">workspace_path = "//cargo"</field></doc>
<doc><field name="id">2285</field><field name="title">google-cargo-raze</field><field name="session">The target to generate BUILD rules for.</field><field name="sentence">target = "x86_64-unknown-linux-gnu"</field></doc>
<doc><field name="id">2286</field><field name="title">google-cargo-raze</field><field name="session">Generate buildable targets</field><field name="sentence">First, install cargo-raze.Next, execute cargo raze from within the cargo directoryFinally, invoke the remote library fetching function within your WORKSPACE:load "//cargo:crates.bzl", "raze_fetch_remote_crates" raze_fetch_remote_crates  This tells Bazel where to get the dependencies from, and how to build them:using the files generated into //cargo.You can depend on any *explicit</field></doc>
<doc><field name="id">2287</field><field name="title">google-cargo-raze</field><field name="session">Remote Dependency Mode</field><field name="sentence">In Remote mode a directory similiar to the vendoring mode is selected</field></doc>
<doc><field name="id">2288</field><field name="title">google-cargo-raze</field><field name="session">Remote Dependency Mode</field><field name="sentence">In thiscase though it contains only BUILD files, a vendoring instruction for the WORKSPACE,and aliases to the explicit dependencies</field></doc>
<doc><field name="id">2289</field><field name="title">google-cargo-raze</field><field name="session">Remote Dependency Mode</field><field name="sentence">Slightly different plumbing is</field></doc>
<doc><field name="id">2290</field><field name="title">google-cargo-raze</field><field name="session">Handling Unconventional Crates</field><field name="sentence">Some crates execute a "build script", which, while technically unrestricted inwhat it can do, usually does one of a few common things.All options noted below are enumerated in the src/settings.rs  ./src/settings.rs  file.</field></doc>
<doc><field name="id">2291</field><field name="title">google-cargo-raze</field><field name="session">Crates that generate files using locally known information</field><field name="sentence">In some cases, a crate uses only basic information in order to generate a Rustsource file</field></doc>
<doc><field name="id">2292</field><field name="title">google-cargo-raze</field><field name="session">Crates that generate files using locally known information</field><field name="sentence">These build-scripts rules can actually be executed and used withinBazel by including a directive in your Cargo.toml prior to generation:script and to direct its generated  OUT_DIR-style  outputs to the parent crate.</field></doc>
<doc><field name="id">2293</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">Some build scripts conditionally emit directives to stdout that Cargo knows howto propagate</field></doc>
<doc><field name="id">2294</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">Unfortunately, its not so simple to manage build-time generateddependency information, so if the flags are statically known  perhaps, since thecompilation target is statically known , they can be provided from within theCargo.toml, in the following mannerFlags provided in this manner are directly handed to rustc</field></doc>
<doc><field name="id">2295</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">It may be helpful torefer to the build-script section of the documentation to interpret buildscripts and stdout directives that are encountered, available here:There are two ways to provide system libraries that a crate needs forcompilation</field></doc>
<doc><field name="id">2296</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">The first is to vendor the system library directly, craft a BUILDrule for it, and add the dependency to the corresponding toml raze.crates.openssl-sys.'0.9.24' additional_flags =    # Vendored openssl is 1.0.2m  "--cfg=ossl102",  "--cfg=version=102", additional_deps =    "@//third_party/openssl:crypto",  "@//third_party/openssl:ssl",  raze.crates.openssl.'0.10.2' additional_flags =    # Vendored openssl is 1.0.2m  "--cfg=ossl102",  "--cfg=version=102",  "--cfg=ossl10x", In some cases, directly wiring up a local system dependency may be preferable.To do this, refer to the In a few cases, the sys crate may need to be overridden entirely</field></doc>
<doc><field name="id">2297</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">This can befacilitated by removing and supplementing dependencies in the Cargo.toml, Some crates provide useful binaries that themselves can be used as part of acompilation process: Bindgen is a great example</field></doc>
<doc><field name="id">2298</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">Bindgen produces Rust sourcefiles by processing C or C++ files</field></doc>
<doc><field name="id">2299</field><field name="title">google-cargo-raze</field><field name="session">Crates that depend on certain flags being determined by a build script</field><field name="sentence">A directive can be added to the Cargo.tomlto tell Bazel to expose such binaries for you:binaries and libraries to share the same target name, Bazel disallows this.</field></doc>
<doc><field name="id">2300</field><field name="title">google-cargo-raze</field><field name="session">Why choose Bazel to build a Rust project?</field><field name="sentence">Bazel  "fast", "correct", choose two  is a battle tested build system used byGoogle to compile incredibly large, multilingual projects without duplicatingeffort, and without compromising on correctness</field></doc>
<doc><field name="id">2301</field><field name="title">google-cargo-raze</field><field name="session">Why choose Bazel to build a Rust project?</field><field name="sentence">It accomplishes this in part bylimiting what mechanisms a given compilation object can use to discoverdependencies and by forcing buildable units to express the complete set oftheir dependencies</field></doc>
<doc><field name="id">2302</field><field name="title">google-cargo-raze</field><field name="session">Why choose Bazel to build a Rust project?</field><field name="sentence">It expects two identical sets of build target inputs to produce abyte-for-byte equivalent final result.In exchange, users are rewarded with a customizable and extensible build systemthat compiles any kind of compilable target and allows expressing "unconventionaldependencies", such as Protobuf objects, precompiled graphics shaders, orgenerated code, while remaining fast and correct.Its also probable  though not yet demonstrated with benchmarks  that largeapplications built with Bazel's strengths in mind: highly granular build units,will compile significantly faster as they are able to cache more aggressivelyand avoid recompilation of as much code while iterating.</field></doc>
<doc><field name="id">2303</field><field name="title">google-cargo-raze</field><field name="session">Why try to integrate Cargo's dependencies into this build tool?</field><field name="sentence">For better or worse, the Rust ecosystem heavily depends on Cargo crates in orderto provide functionality that is often present in standard libraries</field></doc>
<doc><field name="id">2304</field><field name="title">google-cargo-raze</field><field name="session">Why try to integrate Cargo's dependencies into this build tool?</field><field name="sentence">This isactually a fantastic thing for the evolution of the language, as it describes astructured process to stabilization  experimental crate -> 1.0 crate -> RFC ->inclusion in stdlib , but it means that people who lack access to this ecosystemmust reinvent many wheels.Putting that aside there are also fantastic crates that help Rust developersinteract with industry standard systems and libraries which can greatlyaccelerate development in the language.</field></doc>
<doc><field name="id">2305</field><field name="title">google-cargo-raze</field><field name="session">Why not build directly with Cargo / Why generate rustc invocations?</field><field name="sentence">Though the burden of emulating Cargo's functionality  where possible at all!  ishigh, it appears to be the only way to maintain the guarantees  correctness,reproducibility  that Bazel depends on to stay performant</field></doc>
<doc><field name="id">2306</field><field name="title">google-cargo-raze</field><field name="session">Why not build directly with Cargo / Why generate rustc invocations?</field><field name="sentence">It is possible andlikely with inflight RFCs that Cargo will become sufficiently flexible toallow it to be used directly for compilation but at this point in time itappears that maintaining a semblance of feature parity is actually easier thanavoiding all of the sharp edges introduced by treating Cargo like the Rust</field></doc>
<doc><field name="id">2307</field><field name="title">google-cargo-raze</field><field name="session">What is buildable right now with Bazel, and what is not?</field><field name="sentence">With a little bit of elbow grease it is possible to build nearly everything,including projects that depend on openssl-sys</field></doc>
<doc><field name="id">2308</field><field name="title">google-cargo-raze</field><field name="session">What is buildable right now with Bazel, and what is not?</field><field name="sentence">Many sys crates will requireidentifying the system library that they wrap, and either vendoring it into theproject, or telling Bazel where it lives on your system</field></doc>
<doc><field name="id">2309</field><field name="title">google-cargo-raze</field><field name="session">What is buildable right now with Bazel, and what is not?</field><field name="sentence">Some may require minorsource tweaks, such as eliminating hardcoded cargo environment variablerequirements</field></doc>
<doc><field name="id">2310</field><field name="title">google-cargo-raze</field><field name="session">What is buildable right now with Bazel, and what is not?</field><field name="sentence">Fixes can be non-trivial in a few cases, but a good number ofthe most popular crates have been built in an example repo, available at</field></doc>
<doc><field name="id">2311</field><field name="title">google-cargo-raze</field><field name="session">Example Repos</field><field name="sentence">See these examples of providing crate configuration:**Using vendored mode**:The  raze  section is derived from a struct declared in  impl/src/settings.rs  ./impl/src/settings.rs .</field></doc>
<doc><field name="id">2312</field><field name="title">google-categorybuilder</field><field name="session">Category Builder</field><field name="sentence">This repository contains data and code for the Category Builder system.Category Builder can do set expansion while dealing robustly with polysemy.See category_builder_paper.pdf in this directory.</field></doc>
<doc><field name="id">2313</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">Download code and data using git</field></doc>
<doc><field name="id">2314</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">You will need to have installed  git lfs _Note: This will take a few minutes to initalize</field></doc>
<doc><field name="id">2315</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">Two files totaling 7 GB are produced._| Seeds   | Expansion || :------|ford, nixon | nixon, obama, bush, johnson, clinton, ford, reagan, ..</field></doc>
<doc><field name="id">2316</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">||ford, chevy | ford, chevy, toyota, chevrolet, honda, bmw, nissan, ..</field></doc>
<doc><field name="id">2317</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">||ford,  stallone| ford, stallone, khan, kapoor, sylvester stallone, depp, tom cruise, ..</field></doc>
<doc><field name="id">2318</field><field name="title">google-categorybuilder</field><field name="session">Installation</field><field name="sentence">||cancer, diabetes| cancer, diabetes, disease, asthama, infection, breast cancer, syndrome, ...||cancer, taurus| virgo, pisces, libra, taurus, scorpio, saggitarius, cancer, aries, capricorn, aquarius, gemini, leo, ...||safari, trip|trip, tour, trips, safari, vacation, adventure, holiday, excursion, cruisetours, journey, ...||safari, ie|firefox, internet explorer, chrome, explorer, safari, ie, google chrome, browsers, web browser, ...||beautiful, serene|beautiful, serene, peaceful, tranquil, picturesque, quite, lovely, stunning, scenic, secluded, ...||beautiful, poignant| beautiful, poignant, romantic, evocative, gorgeous, poetic, haunting, funny, sad, vivid, ...||beautiful, chic|elegant, chic, stylish, beautiful, gorgeous, stunning, trendy, lovely, vintage, classy, sleek, ...|</field></doc>
<doc><field name="id">2319</field><field name="title">google-categorybuilder</field><field name="session">How to do analogies</field><field name="sentence">The same system can solve analogies such as "What is the mount everest of africa?"Note that these are harder than "proportional" analogies such as "hand:glove::foot:?"</field></doc>
<doc><field name="id">2320</field><field name="title">google-categorybuilder</field><field name="session">How to do analogies</field><field name="sentence">People don't need to be provided the first term  "hand"  and can answer "What is the glove for a foot?"</field></doc>
<doc><field name="id">2321</field><field name="title">google-categorybuilder</field><field name="session">Example Output</field><field name="sentence">The items are labeled B and C because analogies are often shown as A:B::C:D.|  B   | C | What is the B of C? ||mount everest|africa| kilimanjaro||mount everest|alaska| denali||glove | foot | shoe ||darwin | physics | einstein ||corolla|honda|honda civic||dollar|india|rupee||voldemort|tolkien|sauron||voldemort|star wars|vader|</field></doc>
<doc><field name="id">2322</field><field name="title">google-cauliflowervest</field><field name="session">Overview</field><field name="sentence">**Note: OAUTH_CLIENT_ID moved from src/cauliflowervest/client/settings.py to Cauliflower Vest  ../../wiki/ThatName  is a recovery key escrow solution.The project initially started with end-to-end Mac OS X FileVault 2 support,and later added support for BitLocker  Windows , LUKS  Linux , Duplicity, andFirmware/BIOS passwords  Mac & Linux</field></doc>
<doc><field name="id">2323</field><field name="title">google-cauliflowervest</field><field name="session">Overview</field><field name="sentence">The goal of this project is to streamlinecross-platform enterprise management of disk encryption technologies.Cauliflower Vest offers the ability to:Full source is available for all components.To get started, begin with the  Introduction  ../../wiki/Introduction wiki page.</field></doc>
<doc><field name="id">2324</field><field name="title">google-cauliflowervest</field><field name="session">Warning</field><field name="sentence">Upon releasing the  update to App Engine, start the schema update  /ui/#/admin/  otherwisesearch and key retrieval will break</field></doc>
<doc><field name="id">2325</field><field name="title">google-cauliflowervest</field><field name="session">Warning</field><field name="sentence">Progress can bemonitored in  App Engine logs Logs will containfor each volume type after successful migration.</field></doc>
<doc><field name="id">2326</field><field name="title">google-cauliflowervest</field><field name="session">Contact</field><field name="sentence">Please search, join, and/or email the discussion list with questions at  cauliflowervest-discuss@googlegroups.com To reach only engineers on the project, emailThanks to  Dorothy Marczak for the logo.</field></doc>
<doc><field name="id">2327</field><field name="title">google-cctz</field><field name="session">Overview</field><field name="sentence">CCTZ contains two libraries that cooperate with  to give C++programmers all the necessary tools for computing with dates, times, and timezones in a simple and correct manner</field></doc>
<doc><field name="id">2328</field><field name="title">google-cctz</field><field name="session">Overview</field><field name="sentence">The libraries in CCTZ are:These libraries are currently known to work on **Linux**, **Mac OS X**, andThey will also work on **Windows*interested, though, in an implementation of the cctz::TimeZoneIf interface thatcalls the Windows time APIs instead</field></doc>
<doc><field name="id">2329</field><field name="title">google-cctz</field><field name="session">Overview</field><field name="sentence">Please contact us if you're interested in</field></doc>
<doc><field name="id">2330</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">CCTZ is best built and tested using the  Bazel  build systemand the  Google Test  framework</field></doc>
<doc><field name="id">2331</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">There isalso a simple  Makefile and a CMakeLists.txt that should work if you're unable to use Bazel</field></doc>
<doc><field name="id">2332</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Download/install Get the cctz source: git clone  then cd Build cctz and run the tests: bazel test :allWith CMake: Make sure you have CMake >= 2.8.12 installed</field></doc>
<doc><field name="id">2333</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Get the cctz source: git clone  then cd Build cctz so that is can be used by shared libraries and run the tests  use Use in your CMake-based project with:Note: When using CCTZ in your own project, you might find it easiest to compilethe sources using your existing build system.Next Steps: See the documentation for the libraries in CCTZ: Look at the examples in  Join our mailing list to ask questions and keep informed of changes:* The concepts presented here describe general truths about the problem domainand are library and language agnostic</field></doc>
<doc><field name="id">2334</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">An understanding of these concepts helpsthe programmer correctly reason about even the most-complicated time-programmingchallenges and produce the simplest possible solutions</field></doc>
<doc><field name="id">2335</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">*There are two main ways to think about time in a computer program: as *absolutetime*, and as *civil time*</field></doc>
<doc><field name="id">2336</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Both have their uses and it is important tounderstand when each is appropriate</field></doc>
<doc><field name="id">2337</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Absolute and civil times may be convertedback and forth using a *time zoneconvert between them</field></doc>
<doc><field name="id">2338</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Let us now look more deeply at the three main concepts oftime programming: Absolute Time, Civil Time, and Time Zone.*Absolute timeIt has no notion of calendars, or dates, or times of day</field></doc>
<doc><field name="id">2339</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Instead, it is ameasure of the passage of real time, typically as a simple count of ticks sincesome epoch</field></doc>
<doc><field name="id">2340</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Absolute times are independent of all time zones and do not sufferfrom human-imposed complexities such as daylight-saving time  DST</field></doc>
<doc><field name="id">2341</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Many C++types exist to represent absolute times, classically std::chrono::time_point.*Civil timeaffairs  cf</field></doc>
<doc><field name="id">2342</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">It is ahuman-scale representation of time that consists of the six fields &mdash; year,month, day, hour, minute, and second  sometimes shortened to "YMDHMS"  &mdash;and it follows the rules of the Proleptic Gregorian Calendar, with 24-hour daysdivided into 60-minute hours and 60-second minutes</field></doc>
<doc><field name="id">2343</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Like absolute times, civiltimes are also independent of all time zones and their related complexities e.g., DST</field></doc>
<doc><field name="id">2344</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">While std::tm contains the six civil-time fields  YMDHMS , plus afew more, it does not have behavior to enforce the rules of civil time.*Time zonesshared to convert between the absolute-time and civil-time domains</field></doc>
<doc><field name="id">2345</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">A timezone's rules include things like the region's offset from the UTC time standard,daylight-saving adjustments, and short abbreviation strings</field></doc>
<doc><field name="id">2346</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">Time zones oftenhave a history of disparate rules that apply only for certain periods, becausethe rules may change at the whim of a region's local government</field></doc>
<doc><field name="id">2347</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">For thisreason, time-zone rules are usually compiled into data snapshots that are usedat runtime to perform conversions between absolute and civil times</field></doc>
<doc><field name="id">2348</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">There iscurrently no C++ standard library supporting arbitrary time zones.In order for programmers to reason about and program applications that correctlydeal with these concepts, they must have a library that correctly implements theabove concepts</field></doc>
<doc><field name="id">2349</field><field name="title">google-cctz</field><field name="session">Getting Started</field><field name="sentence">CCTZ adds to the existing C++11  library to fullyimplement the above concepts.</field></doc>
<doc><field name="id">2350</field><field name="title">google-cctz</field><field name="session">Hello February 2016</field><field name="sentence">This "hello world" example uses a for-loop to iterate the days from the first ofFebruary until the month of March</field></doc>
<doc><field name="id">2351</field><field name="title">google-cctz</field><field name="session">Hello February 2016</field><field name="sentence">Each day is streamed to output, and if theday happens to be the 29th, we also output the day of the week.</field></doc>
<doc><field name="id">2352</field><field name="title">google-cctz</field><field name="session">#include "cctz/time_zone.h"</field><field name="sentence">int main   {  cctz::time_zone nyc;  cctz::load_time_zone "America/New_York", &nyc ;  const auto moon_walk =  if  !cctz::load_time_zone "Australia/Sydney", &syd   return -1;  std::cout << "Moon walk in SYD: "The output of the above program isfirst walk on the moon is the same no matter the time zone of the viewer  thesame time point is used in both calls to format</field></doc>
<doc><field name="id">2353</field><field name="title">google-cctz</field><field name="session">#include "cctz/time_zone.h"</field><field name="sentence">The only difference is thetime zone in which the moon_walk time point is rendered</field></doc>
<doc><field name="id">2354</field><field name="title">google-cctz</field><field name="session">#include "cctz/time_zone.h"</field><field name="sentence">And in this case wecan see that our friend in Sydney was probably eating lunch while watching thathistoric event.</field></doc>
<doc><field name="id">2355</field><field name="title">google-cdep</field><field name="session">CDep</field><field name="sentence">CDep is a decentralized native package dependency manager with a focus on Android.Here are some things you can do to get started with CDep.Get started with CDep on Windows, enter the following in the command line:After this, the instructions are the same as Linux and Mac.</field></doc>
<doc><field name="id">2356</field><field name="title">google-cdep</field><field name="session">Getting started on Linux and Mac</field><field name="sentence">Get started with CDep on Linux or Mac by following these steps:Open a terminal window and navigate to the directory where your project is located.Enter the following commands:Open cdep.yml and add the following line:Run the cdep command to download SQLite and generate CMake module for it.If you have a CMake project, open your CMakeLists.txt and add the following code at the end of the file</field></doc>
<doc><field name="id">2357</field><field name="title">google-cdep</field><field name="session">Getting started on Linux and Mac</field><field name="sentence">This tells CMake to locate the module glue file and add all the dependencies in that file to your_target_library.For more details on setting up CMake build with CDep visit  Add CDep dependencies to an existing Android Studio CMake project</field></doc>
<doc><field name="id">2358</field><field name="title">google-cel-cpp</field><field name="session">C++ Implementations of the Common Expression Language</field><field name="sentence">For background on the Common Expression Language see the  cel-spec  1  repo.Released under the  Apache License  LICENSE .Disclaimer: This is not an official Google product</field></doc>
<doc><field name="id">2359</field><field name="title">google-cel-cpp</field><field name="session">C++ Implementations of the Common Expression Language</field><field name="sentence">1 :</field></doc>
<doc><field name="id">2360</field><field name="title">google-cel-go</field><field name="session">Common Expression Language</field><field name="sentence">! Go Report Card  This repo contains the Go toolchain for the Common Expression Language  CEL .CEL is a non-Turing complete language designed to be portable and fast</field></doc>
<doc><field name="id">2361</field><field name="title">google-cel-go</field><field name="session">Common Expression Language</field><field name="sentence">It isbest suited to  applications where sandboxing a full-fledged language likeJavaScript or Lua would be too resource intensive, but side-effect free dynamiccomputations are strongly desired</field></doc>
<doc><field name="id">2362</field><field name="title">google-cel-go</field><field name="session">Want to contribute?</field><field name="sentence">Write an expression in the CEL syntax, then parse, check, and interpret.| Step| Parse| Check| Interpret | Evaluates parsed expressions against a set of inputs.Type-checking an expression in an optional, but strongly encouraged step thatcan be used to reject some expressions as semantically invalid using staticanalysis</field></doc>
<doc><field name="id">2363</field><field name="title">google-cel-go</field><field name="session">Want to contribute?</field><field name="sentence">Additionally, the type-check produces some additional metadatarelated to function overload resolution and object field selection which maybe used by the interpret step to speed up execution.</field></doc>
<doc><field name="id">2364</field><field name="title">google-cel-go</field><field name="session">Example</field><field name="sentence">The following example shows the parse, check, and intepretation of a simpleprogram</field></doc>
<doc><field name="id">2365</field><field name="title">google-cel-go</field><field name="session">Example</field><field name="sentence">After the parse and type-check steps, the service checks whether thereare any errors that need to be reported.import  // Parse the expression and returns the accumulated errors.p, errors := parser.ParseText "a || b && c.exists x, x > 2 " if len errors.GetErrors    != 0 {// Check the expression matches expectations given the declarations for// the identifiers a, b, c where the identifiers are scoped to the default// package  empty string :typeProvider := types.NewProvider  env := checker.NewStandardEnv packages.DefaultPackage, typeProvider, errors env.Add decls.NewIdent "a", decls.Bool, nil ,c := checker.Check p, env, "" if len errors.GetErrors    != 0 {// Interpret the checked expression using the standard overloads.i := interpreter.NewStandardInterpreter packages.DefaultPackage, typeProvider eval := i.NewInterpretable interpreter.NewCheckedProgram c  result, state := eval.Interpret More examples like these can be found within the unit tests which can be runusing  Bazel  5 :Released under the  Apache License  LICENSE .Disclaimer: This is not an official Google product</field></doc>
<doc><field name="id">2366</field><field name="title">google-cel-go</field><field name="session">Example</field><field name="sentence">1 :   2 :   3 :   4 :   5 :   6 :</field></doc>
<doc><field name="id">2367</field><field name="title">google-cel-spec</field><field name="session">Common Expression Language</field><field name="sentence">The Common Expression Language  CEL  implements common semantics for expressionevaluation, enabling different applications to more easily interoperate.Key ApplicationsGuiding philosophy: Keep it small & fast</field></doc>
<doc><field name="id">2368</field><field name="title">google-cel-spec</field><field name="session">Common Expression Language</field><field name="sentence">Make it extensible</field></doc>
<doc><field name="id">2369</field><field name="title">google-cel-spec</field><field name="session">Common Expression Language</field><field name="sentence">Developer-friendly.The required components of a system that supports CEL are:Example of boolean conditions and object construction: c// Conditionaccount.balance >= transaction.withdrawal// Object constructioncommon.GeoPoint{ latitude: 10.0, longitude: -5.5 }For more detail, see:Disclaimer: This is not an official Google product.</field></doc>
<doc><field name="id">2370</field><field name="title">google-certificate-transparency-go</field><field name="session">Certificate Transparency: Go Code</field><field name="sentence">! Go Report Card   ! GoDoc  This repository holds Go code related to Certificate Transparency   CT</field></doc>
<doc><field name="id">2371</field><field name="title">google-certificate-transparency-go</field><field name="session">Certificate Transparency: Go Code</field><field name="sentence">Therepository requires Go version 1.The main parts of the repository are:</field></doc>
<doc><field name="id">2372</field><field name="title">google-certificate-transparency-go</field><field name="session">Trillian CT Personality</field><field name="sentence">The trillian/ subdirectory holds code and scripts for running a CT Log basedon the  Trillian  general transparency Log.The main code for the CT personality is held in trillian/ctfe; this coderesponds to HTTP requests on the CT API paths  and translatesthem to the equivalent gRPC API requests to the Trillian Log.This obviously relies on the gRPC API definitions atgithub.com/google/trillian; the code also uses common libraries from theTrillian project for:system locally</field></doc>
<doc><field name="id">2373</field><field name="title">google-certificate-transparency-go</field><field name="session">Trillian CT Personality</field><field name="sentence">In particular:These scripts require a local database instance to be configured as describedin the  Trillian instructions</field></doc>
<doc><field name="id">2374</field><field name="title">google-certificate-transparency-go</field><field name="session">Working on the Code</field><field name="sentence">Developers who want to make changes to the codebase need some additionaldependencies and tools, described in the following sections</field></doc>
<doc><field name="id">2375</field><field name="title">google-certificate-transparency-go</field><field name="session">Working on the Code</field><field name="sentence">The Travis configuration  .travis.yml  for the codebase is also useful referencefor the required tools and scripts, as it may be more up-to-date than this</field></doc>
<doc><field name="id">2376</field><field name="title">google-certificate-transparency-go</field><field name="session">Rebuilding Generated Code</field><field name="sentence">Some of the CT Go code is autogenerated from other files:Re-generating mock or protobuffer files is only needed if you're changingthe original files; if you do, you'll need to install the prerequisites:and run the following:The codebase includes a couple of external projects under the master branch and the current stable release</field></doc>
<doc><field name="id">2377</field><field name="title">google-certificate-transparency-go</field><field name="session">Rebuilding Generated Code</field><field name="sentence">See instructions in the Trillian repo for how to update vendored subtrees.</field></doc>
<doc><field name="id">2378</field><field name="title">google-certificate-transparency-go</field><field name="session">Running Codebase Checks</field><field name="sentence">The  scripts/presubmit.sh  scripts/presubmit.sh  script runs various toolsand tests over the codebase.</field></doc>
<doc><field name="id">2379</field><field name="title">google-certificate-transparency-go</field><field name="session">Install gometalinter and all linters</field><field name="sentence">go get -u github.com/alecthomas/gometalintergometalinter --install</field></doc>
<doc><field name="id">2380</field><field name="title">google-certificate-transparency-go</field><field name="session">Run build, test and linters but skip code generation</field><field name="sentence">./scripts/presubmit.sh  --no-generate</field></doc>
<doc><field name="id">2381</field><field name="title">google-certificate-transparency-go</field><field name="session">Or just run the linters alone:</field><field name="sentence">gometalinter --config=gometalinter.json ./...</field></doc>
<doc><field name="id">2382</field><field name="title">google-certificate-transparency-monitor</field><field name="session">Certificate Transparency Log Monitor</field><field name="sentence">This repository containis the source code for the monitor that checks thatCertificate Transparency Logs are complying with  RFC 6962 and the  Chromium Certificate Transparency Log Policy This project is currently in development and so may be subject to significant</field></doc>
<doc><field name="id">2383</field><field name="title">google-certificate-transparency</field><field name="session">Build Dependencies</field><field name="sentence">The following tools are needed to build the CT software and its dependencies.For a Debian-based system, the relevant packages are:autoconf automake libtool shtool cmake clang git make tcl pkg-config python2.7</field></doc>
<doc><field name="id">2384</field><field name="title">google-certificate-transparency</field><field name="session">Software Dependencies</field><field name="sentence">The following collections of additional software are used by the main CTLog codebase.---------------------</field></doc>
<doc><field name="id">2385</field><field name="title">google-certificate-transparency</field><field name="session">Compiler Warnings/Errors</field><field name="sentence">The CT C++ codebase is built with the Clang -Wno-error= option to CXXFLAGS.For example, on errors involving unused variables try using:in case not all dependencies are properly accounted for and rebuilt</field></doc>
<doc><field name="id">2386</field><field name="title">google-certificate-transparency</field><field name="session">Compiler Warnings/Errors</field><field name="sentence">Ifproblems persist, check that the Makefile in certificate-transparencycontains the options that were passed in CXXFLAGS.</field></doc>
<doc><field name="id">2387</field><field name="title">google-certificate-transparency</field><field name="session">Working on a Branch</field><field name="sentence">If you're trying to clone from a branch on the CT repository then you'll needto substitute the following command for the gclient config command above  #build-quick-start , replacing branch as appropriateThe BoringSSL fork of OpenSSL can be used in place of OpenSSL  but note thatthe experimental  CT DNS server  docs/DnsServer.md  does not support thisconfiguration</field></doc>
<doc><field name="id">2388</field><field name="title">google-certificate-transparency</field><field name="session">Working on a Branch</field><field name="sentence">To enable this, after the first step  .gclient to add:Testing the Code</field></doc>
<doc><field name="id">2389</field><field name="title">google-certificate-transparency</field><field name="session">Unit Tests</field><field name="sentence">The unit tests for the CT code can be run with the certificate-transparency/Makefile.</field></doc>
<doc><field name="id">2390</field><field name="title">google-certificate-transparency</field><field name="session">Testing and Logging Options ##</field><field name="sentence">Note that several tests write files on disk</field></doc>
<doc><field name="id">2391</field><field name="title">google-certificate-transparency</field><field name="session">Testing and Logging Options ##</field><field name="sentence">The default directory forstoring temporary testdata is TMPDIR= for make.End-to-end tests also create temporary certificate and server files intest/tmp</field></doc>
<doc><field name="id">2392</field><field name="title">google-certificate-transparency</field><field name="session">Testing and Logging Options ##</field><field name="sentence">All these files are cleaned up after a successful testFor logging options, see the glog documentation By default, unit tests log to stderr, and log only messages with a FATALlevel  i.e., those that result in abnormal program termination</field></doc>
<doc><field name="id">2393</field><field name="title">google-certificate-transparency</field><field name="session">Testing and Logging Options ##</field><field name="sentence">You canoverride the defaults with command-line flags.Deploying a LogThe build process described so far generates a set of executables; however,other components and configuration is needed to set up a running CT Log.In particular, as shown in the following diagram:Configuring and setting up a distributed production Log is covered in a separate document  docs/Deployment.md .Operating a LogRunning a successful, trusted, certificate transparency Log involves more thanjust deploying a set of binaries</field></doc>
<doc><field name="id">2394</field><field name="title">google-certificate-transparency</field><field name="session">Testing and Logging Options ##</field><field name="sentence">Information and advice on operating arunning CT Log is covered in a  separate document  docs/Operation.md</field></doc>
<doc><field name="id">2395</field><field name="title">google-certtostore</field><field name="session">CertToStore</field><field name="sentence">CertToStore is a Multi-Platform package that allows you to work with x509certificates on Linux and the certificate store on Windows</field></doc>
<doc><field name="id">2396</field><field name="title">google-certtostore</field><field name="session">CertToStore</field><field name="sentence">TOC</field></doc>
<doc><field name="id">2397</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">CertToStore was created to solve some specific problems when working withcertificates using Go</field></doc>
<doc><field name="id">2398</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">Ever wanted to create public/private keypairs using the TPM or create certificate requests using TPM backed keys?Both are possible using CertToStore on Windows</field></doc>
<doc><field name="id">2399</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">Linux support is also planned.__Native Certificate Store Access without the prompts__Certificate storage in CertToStore under Windows uses the certificatestore by using native Windows calls</field></doc>
<doc><field name="id">2400</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">By using native functionality, you won'tsee the all to common "do you want to import this certificate?" when installingcertificates using certtostore.Additionally, you can lookup and use existing certificates with their privatekeys through CNG, regardless of how they were issued  TPM or Software backed .__Built-in support for Cryptography API: Next Generation  CNG __CertToStore under Windows was built from the ground up to use Microsoft'sCryptography API: Next Generation  CNG</field></doc>
<doc><field name="id">2401</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">This grants certificates generated,requested, and stored using CertToStore the ability to use your computer's TPMto safely store private key material safely.__Compatibile with packages that use x509.Certificate__x509 compatible certs means that you can use private keys and certificatesgenerated by CertToStore with just about anything else in Go that works withcertificates</field></doc>
<doc><field name="id">2402</field><field name="title">google-certtostore</field><field name="session">Why CertToStore?</field><field name="sentence">Want to generate certificate requests using the TPM, and send themto your own third-party CA? Have a Go based web server that you want to use witha TPM backed certificate? Sure thing.</field></doc>
<doc><field name="id">2403</field><field name="title">google-certtostore</field><field name="session">Contact</field><field name="sentence">We have a public discussion list at certtostore-discuss@googlegroups.com</field></doc>
<doc><field name="id">2404</field><field name="title">google-certtostore</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">2405</field><field name="title">google-chained-promise</field><field name="session">Chained Promise: functional programming tools for recurring promises</field><field name="sentence">! Join the chat at   We often find recurring patterns when handling asynchronous logic with promises, such as an HTTP endpoint that paginates and gives you a URL pointer to the next available dataset.Chained Promise provides an extended Promise class that you can use to easily abstract out recurring patterns</field></doc>
<doc><field name="id">2406</field><field name="title">google-chained-promise</field><field name="session">Chained Promise: functional programming tools for recurring promises</field><field name="sentence">See jsdocs for more detailed explanations.</field></doc>
<doc><field name="id">2407</field><field name="title">google-chained-promise</field><field name="session">Example</field><field name="sentence">Suppose we are querying Wikipedia API to get the list of all linked pages from "Plato" page:import ChainedPromise from "chained-promise";ChainedPromise.from fetch apiPoint  First thing we want to do is to parse the resulting JSON:Now that the chaining of the value has been configured, we can work on the series of data.See  the example project  examples/wikipedia-list-links  for the full example code</field></doc>
<doc><field name="id">2408</field><field name="title">google-chained-promise</field><field name="session">Example</field><field name="sentence">Also see jsdoc to  ChainedPromise.ts  src/ChainedPromise.ts  for more explanation of other functions such as flatMap.Disclaimer: This is not an official Google product.</field></doc>
<doc><field name="id">2409</field><field name="title">google-channel-id-enclave</field><field name="session">About</field><field name="sentence">There are two related patches in this project: The BoringSSL patch enables anopaque key for Channel ID, and the Chromium patch enables an opaque key alongwith providing an implementation of hardware-backed keys using the Intel SGXSDK</field></doc>
<doc><field name="id">2410</field><field name="title">google-channel-id-enclave</field><field name="session">About</field><field name="sentence">Together, these patches demonstrate how Chromium could store its Channel IDprivate keys in an Intel SGX enclave.</field></doc>
<doc><field name="id">2411</field><field name="title">google-channel-id-enclave</field><field name="session">Compile and run</field><field name="sentence">Follow the following steps to compile and run:Be on a machine with an SGX processor.Enter the BIOS settings, and make sure SGX is set to Set up pkgconfig by creating the file /usr/lib/pkgconfig/sgx.pc with contents:prefix=/opt/intel/sgxsdkincludedir=${prefix}/includeName: sgxDescription: Intel SGX SDK for LinuxVersion: 1.0.0Cflags: -I${includedir}Libs: -L${libdir} -lsgx_urts -lsgx_uae_service -lsgx_tserviceLoad google.comIf you want to run tests:ninja -C out/Default net_unittestsout/Default/net_unittests --gtest_filter=*ChannelIDThere are more tests within boringssl, with instructions in</field></doc>
<doc><field name="id">2412</field><field name="title">google-charted</field><field name="session">Visualization toolkit for Dart</field><field name="sentence">Charted provides</field></doc>
<doc><field name="id">2413</field><field name="title">google-charted</field><field name="session">Screenshot of Charted interactive demo</field><field name="sentence">! Screenshot of Charted interactive demo</field></doc>
<doc><field name="id">2414</field><field name="title">google-charted</field><field name="session">Get started with the interactive demo</field><field name="sentence">Get started with Charted by trying out the interactive demo provided with thepackage</field></doc>
<doc><field name="id">2415</field><field name="title">google-charted</field><field name="session">Get started with the interactive demo</field><field name="sentence">Follow these instructions and get it running locally on your machine Git and the Dart SDK has to be installed first :</field></doc>
<doc><field name="id">2416</field><field name="title">google-chartjs.dart</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">2417</field><field name="title">google-charts</field><field name="session">charts_common</field><field name="sentence">! charts_common pub package  A common library for charting packages.</field></doc>
<doc><field name="id">2418</field><field name="title">google-charts</field><field name="session">charts_flutter</field><field name="sentence">! charts_flutter pub package  A charting package for  Flutter  supporting both Androidand iOS.All charts packages are licensed under the Apache 2 license, see the LICENSE  LICENSE  and  AUTHORS  AUTHORS  files for details.</field></doc>
<doc><field name="id">2419</field><field name="title">google-chatbase-dotnet</field><field name="session">A .NET library for the  Chatbase API  written in C#</field><field name="sentence">> This is not an official Google product.</field></doc>
<doc><field name="id">2420</field><field name="title">google-chatbase-dotnet</field><field name="session">Package Information</field><field name="sentence">Nuget package page</field></doc>
<doc><field name="id">2421</field><field name="title">google-chatbase-dotnet</field><field name="session">Install</field><field name="sentence">Using the  Package Manager Console  run the following command:Please see the  Getting Started Section  for informationon configuring one's account and obtaining an API key.</field></doc>
<doc><field name="id">2422</field><field name="title">google-chatbase-dotnet</field><field name="session">One can send individual messages to the Generic and Facebook rest APIs:</field><field name="sentence">using Chatbase;Chatbase.Client client = new Chatbase.Client  ;Chatbase.Message msg = new Chatbase.Message  ;msg.api_key = "123"; // requiredmsg.user_id = "xyz"; // requiredmsg.intent = "test";msg.version = "0.1";msg.content = "This is a test.";msg.type = Chatbase.Message.UserMessage; // default, requiredmsg.not_handled = false; // defaultmsg.feedback = false; //defaultvar resp = client.Send msg .Result; // Get the result of the async task// Write the return status-code from the API requestConsole.WriteLine resp.StatusCode ;using Chatbase;Chatbase.Client client = new Chatbase.Client  ;// Agent messagesagnMsg = new Chatbase.FBAgentMessage  ;agnMsg.SetRecipientID "123" ;agnMsg.SetMessageID "456" ;agnMsg.SetMessageContent "hey" ;agnMsg.intent = "say-hello";agnMsg.version = "0.2";var firstTask = client.Send agnMsg ;// User messagesusrMsg = new Chatbase.FBUserMessage  ;usrMsg.SetSenderID "abc" ;usrMsg.SetRecipientID "123" ;usrMsg.SetMessageID "456" ;usrMsg.SetMessageContent "hey" ;usrMsg.intent = "say-hello";usrMsg.version = "0.2";var secondTask = client.Send usrMsg ;</field></doc>
<doc><field name="id">2423</field><field name="title">google-chatbase-dotnet</field><field name="session">One can send sets of messages as well to the Generic and Facebook rest APIs:</field><field name="sentence">using Chatbase;Chatbase.Client client = new Chatbase.Client  ;Chatbase.MessageSet set = new Chatbase.MessageSet "api-key" ;// New messages made from the set will have the api-key already setChatbase.Message msg = set.NewMessage  ;// ..</field></doc>
<doc><field name="id">2424</field><field name="title">google-chatbase-dotnet</field><field name="session">One can send sets of messages as well to the Generic and Facebook rest APIs:</field><field name="sentence">Set fields as one would a regular message like the example aboveset.Add msg var task = Client.Send set ;using Chatbase;Chatbase.Client client = new Chatbase.Client  ;// Agent Message SetChatbase.FBAgentMessageSet agnSet = new Chatbase.FBAgentMessageSet "api-key" ;Chatbase.FBAgentMessage agnMsg = agnSet.NewMessage  ;// ..</field></doc>
<doc><field name="id">2425</field><field name="title">google-chatbase-dotnet</field><field name="session">One can send sets of messages as well to the Generic and Facebook rest APIs:</field><field name="sentence">Set fields as one would a regular FBAgentMessageagnSet.add agnMsg var firstTask = client.Send agnSet ;// User Message SetChatbase.FBUserMessageSet usrSet = new Chatbase.FBUserMessageSet "api-key" ;Chatbase.FBUserMessage usrMsg = usrSet.NewMessage  ;// ..</field></doc>
<doc><field name="id">2426</field><field name="title">google-chatbase-dotnet</field><field name="session">One can send sets of messages as well to the Generic and Facebook rest APIs:</field><field name="sentence">Set fields as one would a regular FBUserMessageusrSet.add usrMsg ;var secondTask = client.Send usrSet ;</field></doc>
<doc><field name="id">2427</field><field name="title">google-chatbase-dotnet</field><field name="session">Tests</field><field name="sentence">Please place tests in Chatbase.Tests project directory enter the following in a command-prompt:</field></doc>
<doc><field name="id">2428</field><field name="title">google-chatbase-node</field><field name="session">Chatbase Node.JS Client</field><field name="sentence">> This is not an official Google Product</field></doc>
<doc><field name="id">2429</field><field name="title">google-chatbase-python</field><field name="session">A Python library for the  Chatbase API</field><field name="sentence">> This is not an official Google product</field></doc>
<doc><field name="id">2430</field><field name="title">google-chatbase-python</field><field name="session">Quick Start</field><field name="sentence">Please see the  Getting Started Section  for informationon configuring one's account and obtaining and API key.</field></doc>
<doc><field name="id">2431</field><field name="title">google-chatbase-python</field><field name="session">One can send individual messages to the Generic and Facebook rest APIs:</field><field name="sentence">from chatbase import Messagemsg = Message api_key="x",resp = msg.send  from chatbase import FacebookAgentMessage, FacebookUserMessage</field></doc>
<doc><field name="id">2432</field><field name="title">google-chatbase-python</field><field name="session">Agent messages</field><field name="sentence">agnMsg = FacebookAgentMessage api_key="x", intent="y", version="1", message="a"</field></doc>
<doc><field name="id">2433</field><field name="title">google-chatbase-python</field><field name="session">Make sure to set the recipient and message IDs</field><field name="sentence">agnMsg.set_recipient_id "123" agnMsg.set_message_id "xyz" resp = agnMsg.send</field></doc>
<doc><field name="id">2434</field><field name="title">google-chatbase-python</field><field name="session">User messages</field><field name="sentence">usrMsg = FacebookUserMessage api_key="x", intent="y", version="1", message="a"</field></doc>
<doc><field name="id">2435</field><field name="title">google-chatbase-python</field><field name="session">Make sure to set the recipient, sender and message IDs</field><field name="sentence">usrMsg.set_recipient_id "123" usrMsg.set_sender_id "456" usrMsg.set_message_id "xyz" resp = usrMsg.send</field></doc>
<doc><field name="id">2436</field><field name="title">google-chatbase-python</field><field name="session">One can send sets of messages as well to the Generic and Facebook rest APIs:</field><field name="sentence">from chatbase import MessageSet</field></doc>
<doc><field name="id">2437</field><field name="title">google-chatbase-python</field><field name="session">propagated to all message created from the set!</field><field name="sentence">set = MessageSet api_key="x", platform="x", version="1", user_id="123" msg = set.new_message intent="impress", content="goes to 11"</field></doc>
<doc><field name="id">2438</field><field name="title">google-chatbase-python</field><field name="session">in the containing set</field><field name="sentence">msg.user_id = "shark-sandwich"</field></doc>
<doc><field name="id">2439</field><field name="title">google-chatbase-python</field><field name="session">Message type objects can be appended:</field><field name="sentence">msg2 = Message api_key="x",set.append_message msg2</field></doc>
<doc><field name="id">2440</field><field name="title">google-chatbase-python</field><field name="session">Sending the set will send all contained messages to the batch endpoint</field><field name="sentence">resp = set.send  from chatbase import FacebookAgentMessageSet, FacebookUserMessageSet</field></doc>
<doc><field name="id">2441</field><field name="title">google-chatbase-python</field><field name="session">Agent Message Set</field><field name="sentence">agnSet = FacebookAgentMessageSet api_key="x", version="y" msg = agnSet.new_message intent="a", message="b"</field></doc>
<doc><field name="id">2442</field><field name="title">google-chatbase-python</field><field name="session">Don't forget to set the message and recipient ids</field><field name="sentence">msg.set_recipient_id "123" msg.set_message_id "xyz" resp = agnSet.send</field></doc>
<doc><field name="id">2443</field><field name="title">google-chatbase-python</field><field name="session">User Message Set</field><field name="sentence">usrSet = FacebookUserMessageSet api_key="a", version="b" msg = usrSet.new_message intent="c", message="d"</field></doc>
<doc><field name="id">2444</field><field name="title">google-chatbase-python</field><field name="session">Don't for get to set the message, recipient and sender ids</field><field name="sentence">msg.set_recipient_id "123" msg.set_sender_id "456" msg.set_message_id "xyz" resp = usrSet.send</field></doc>
<doc><field name="id">2445</field><field name="title">google-chatbase-python</field><field name="session">Tests</field><field name="sentence">Please place tests in tests directory</field></doc>
<doc><field name="id">2446</field><field name="title">google-chatbase-python</field><field name="session">Tests</field><field name="sentence">To run tests, from the repositoryroot run the following command:</field></doc>
<doc><field name="id">2447</field><field name="title">google-checkers</field><field name="session">Checkers Test Framework</field><field name="sentence">Checkers is a flexible test authoring framework for Python.You may find Checkers useful if you want to do any of the following:parts: test steps, test data, components under test, and test metadata</field></doc>
<doc><field name="id">2448</field><field name="title">google-checkers</field><field name="session">Checkers Test Framework</field><field name="sentence">Checkersallows the user to have control over all of these areas, so it is easy tocustomize behavior</field></doc>
<doc><field name="id">2449</field><field name="title">google-checkers</field><field name="session">Checkers Test Framework</field><field name="sentence">However, default behaviors are implemented so that writingsimple tests is still super simple.</field></doc>
<doc><field name="id">2450</field><field name="title">google-checkers</field><field name="session">Requirements</field><field name="sentence">Python 2.7</field></doc>
<doc><field name="id">2451</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">TODO barkimedes : Describe installation in more detail</field></doc>
<doc><field name="id">2452</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">This is just a generalrecommendation for people who already know how to download code from GitHub.The following is a very simple Checkers test:import checkersfrom checkers import assertsfrom checkers.runners import pyunitdef test_add_2_2_4  :  asserts.are_equal 2 + 2, 4 def test_add_4_8_12  :  asserts.are_equal 4 + 8, 12 def test_divide_2_0_error  :  with asserts.expect_exception ZeroDivisionError :if __name__ == '__main__':  pyunit.main  Remember when we mentioned that tests are composed of several parts? Well, acouple of them are evidenced here.First, a test must have some test steps</field></doc>
<doc><field name="id">2453</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">Consider this the test logic</field></doc>
<doc><field name="id">2454</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">WithCheckers, this is indicated by functions that are decorated with@checkers.test</field></doc>
<doc><field name="id">2455</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">Each of these functions becomes a checkers.Test instance.Secondly, we must have a test runner</field></doc>
<doc><field name="id">2456</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">Checkers tests can be run by anything thatknows how to deal with checkers.TestRun s , but a test runner that isdistributed with Checkers is the PyUnit runner</field></doc>
<doc><field name="id">2457</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">This is used in the mainfunction here</field></doc>
<doc><field name="id">2458</field><field name="title">google-checkers</field><field name="session">Installation</field><field name="sentence">By default, the runner will include all of the tests in themodule containing main .</field></doc>
<doc><field name="id">2459</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">Tests are always placed into test runs  checkers.TestRun instances</field></doc>
<doc><field name="id">2460</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">In theabove example, the test run was created automatically by the pyunit.mainfunction</field></doc>
<doc><field name="id">2461</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">But if you want to do anything interesting, you'll probably need tocreate and manage your test runs directly.The test run allows you to provide lots of things to the test</field></doc>
<doc><field name="id">2462</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">You can registersetup and teardown functions  at the test run level, setup will run oncebefore all of the tests and then teardown will run once after all of the testsare complete</field></doc>
<doc><field name="id">2463</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">You can also define test suite for organizing test cases</field></doc>
<doc><field name="id">2464</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">You canadd tests directly to the test run from wherever you like</field></doc>
<doc><field name="id">2465</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">You can registercomponents to be injected into the test cases</field></doc>
<doc><field name="id">2466</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence">Here is a more interesting testcase that does a few of those things:Before we get too fancy, let's see the above example where we explicitly createthe test run:import checkersfrom checkers import assertsfrom checkers.runners import pyunitdef test_add_2_2_4  :  asserts.are_equal 2 + 2, 4 def test_add_4_8_12  :  asserts.are_equal 4 + 8, 12 def create_test_run  :  test_run = checkers.TestRun    test_run.tests.register test_add_2_2_4   rest_run.tests.register test_add_4_8_12   # You can also load tests by module so you don't have to register each test</field></doc>
<doc><field name="id">2467</field><field name="title">google-checkers</field><field name="session">Defining Test Runs</field><field name="sentence"># If module_name isn't provided, it defaults to '__main__'  # test_run = checkers.TestRun.from_module module_name=__name__   return test_runif __name__ == '__main__':  pyunit.main test_run=create_test_run</field></doc>
<doc><field name="id">2468</field><field name="title">google-checkers</field><field name="session">Injecting Components</field><field name="sentence">Now that we know how to create a test run, let's see how component injectionImagine we have a Calculator class that is the component-under-test and wewant to inject it into the tests</field></doc>
<doc><field name="id">2469</field><field name="title">google-checkers</field><field name="session">Injecting Components</field><field name="sentence">Calculator is defined in the calculator.pymodule as follows:class Calculator object :Exciting, right? Now let's take our original two tests and update them to usethe calculator to do the adding.import calculatorimport checkersfrom checkers import assertsfrom checkers.runners import pyunitdef test_add_2_2_4 calculator :  asserts.are_equal calculator.add 2, 2 , 4 def test_add_4_8_12 calculator :  asserts.are_equal calculator.add 4, 8 , 12 def create_test_run  :  test_run = checkers.TestRun.from_module    test_run.variables.register 'calculator', calculator.Calculator   return test_runif __name__ == '__main__':  pyunit.main test_run=create_test_run   Tests can take in arguments</field></doc>
<doc><field name="id">2470</field><field name="title">google-checkers</field><field name="session">Injecting Components</field><field name="sentence">In the above example, the tests take in acalculator argument</field></doc>
<doc><field name="id">2471</field><field name="title">google-checkers</field><field name="session">Injecting Components</field><field name="sentence">These arguments are referred to as 'variables' inCheckers</field></doc>
<doc><field name="id">2472</field><field name="title">google-checkers</field><field name="session">Injecting Components</field><field name="sentence">So if you want all of the tests in a test run to have access to aparticular variable and value  in this case, a Calculator instance , thenjust register it with the test run variables and Checkers will inject it for youwhen the test runs.</field></doc>
<doc><field name="id">2473</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">Test variables don't just have to be components under test</field></doc>
<doc><field name="id">2474</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">There is anothermechanism for passing values into tests: parameterization</field></doc>
<doc><field name="id">2475</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">And good news!! It'sbuilt natively into Checkers, so it works pretty well : There are two ways that you can parameterize a test</field></doc>
<doc><field name="id">2476</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">One way is through the@checkers.parameterize decorator</field></doc>
<doc><field name="id">2477</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">The other way is to register theparameterizations through the test run</field></doc>
<doc><field name="id">2478</field><field name="title">google-checkers</field><field name="session">Data-Driven  Parameterized  Tests</field><field name="sentence">Hopefully this isn't too confusing, buttest run-based parameterizations are a useful feature because sometimes aparmeterization is only  useful in certain circumstances/under certainconfigurations, and this allows us to not *alwaysapplied to test cases  which is the case when decorators alone provide thisfunctionality .Anywho, the following example shows both ways of adding parameterizations:import checkersfrom checkers import assertsfrom checkers.runners import pyunitimport calculator as calcdef test_add calculator, x, y, expected :  asserts.are_equal calculator.add x, y , expected   print '%d + %d = %d' %  x, y, expected</field></doc>
<doc><field name="id">2479</field><field name="title">google-checkers</field><field name="session">test is used in a test run. Use with caution!</field><field name="sentence">@checkers.parameterize {} @checkers.test_suites 'subtract' def test_subtract calculator, x, y, expected :  asserts.are_equal calculator.subtract x, y , expected   print '%d</field></doc>
<doc><field name="id">2480</field><field name="title">google-checkers</field><field name="session">sort. This provides a built-in, flexible parameterization.</field><field name="sentence">def build_add_params  :  return     def create_test_run  :  test_run = checkers.TestRun.from_module    test_run.variables.register 'calculator', calc.Calculator     # The parameterizations are applied at the test run level, so they only apply  # to this test run</field></doc>
<doc><field name="id">2481</field><field name="title">google-checkers</field><field name="session">sort. This provides a built-in, flexible parameterization.</field><field name="sentence"># You should prefer this mechanism for creating parameterizations that may be  # dependent on the environment, that you have to load data from another  # location  like a database , or where the components under test may behave  # differently from each other so the parameters would have to change between  # test runs</field></doc>
<doc><field name="id">2482</field><field name="title">google-checkers</field><field name="session">sort. This provides a built-in, flexible parameterization.</field><field name="sentence">for param in build_add_params  :  return test_runif __name__ == '__main__':  pyunit.main test_run=create_test_run   The output of running the above test is the following:Running tests under Python 2.7.6: /path/to/python2.7---------------------------------------------------------------------1 + 1 = 22 + 2 = 44 + 8 = 122 + -1 = 18 0 Note that components and parameter values are both just variables</field></doc>
<doc><field name="id">2483</field><field name="title">google-checkers</field><field name="session">sort. This provides a built-in, flexible parameterization.</field><field name="sentence">Sofunctionally, it is entirely possible to include a component in aparameterization  and vice versa</field></doc>
<doc><field name="id">2484</field><field name="title">google-checkers</field><field name="session">sort. This provides a built-in, flexible parameterization.</field><field name="sentence">But conceptually, you probably want to makesure that you're keeping the two straight.</field></doc>
<doc><field name="id">2485</field><field name="title">google-checkers</field><field name="session">Test Fixtures</field><field name="sentence">Checkers supports fixtures at the test run and test case levels</field></doc>
<doc><field name="id">2486</field><field name="title">google-checkers</field><field name="session">Test Fixtures</field><field name="sentence">If you haveteardown functions that you want to run before or after each individual testcase, then you can use the @checkers.setup and @checkers.teardown decoratorson tests themselves, or register them with the test run.Note that test run-level fixtures will take in an optional parameter: thecheckers.Context instance.The cool thing about Checkers fixtures is that you can have as many or as fewas you like, and they can be defined as functions with names that actuallymake sense and can be shared</field></doc>
<doc><field name="id">2487</field><field name="title">google-checkers</field><field name="session">Test Fixtures</field><field name="sentence">In general, Checkers is very friendly to mixingand matching things however you like</field></doc>
<doc><field name="id">2488</field><field name="title">google-checkers</field><field name="session">Test Fixtures</field><field name="sentence">There is a special variable in Checkers that is available to any test function.The context variable will always contain a checkers.Context instance, whichcontains information about the test run, the test case itself, etc</field></doc>
<doc><field name="id">2489</field><field name="title">google-checkers</field><field name="session">Test Fixtures</field><field name="sentence">You'll seethat in this example, too.def logging_test_run_setup test_run :  print '#'def logging_test_run_teardown test_run :  print 'Finishing test run:', test_run.name  print '#' def register_calculator context :  calc = Calculator    print 'Registering calculator:', context.test_case.name, calc.__class__  context.variables.register 'calculator', calc def logging_test_case_setup context :  print '*'def logging_test_case_teardown context :  print 'Finishing test case:', context.test_case.full_name  print '*' def celebrate_evenness context :  print 'Awesome!! %s only has even numbers!!' % context.test_case.namedef curse_oddness context :  print 'Phooey!! %s has odd numbers :P' % context.test_case.namedef zero_division_setup  :  print 'Oops, dividing by zero in this test'@checkers.setup celebrate_evenness, zero_division_setup def test_divide_2_0  :  with asserts.expect_exception ZeroDivisionError :@checkers.teardown curse_oddness def test_add_1_1_2 calculator :  asserts.are_equal calculator.add 2, 2 , 4   print '1 + 1 = 2'@checkers.setup celebrate_evenness def test_add_2_2_4 calculator :  asserts.are_equal calculator.add 2, 2 , 4   print '2 + 2 = 4'@checkers.setup celebrate_evenness def test_add_4_8_12 calculator :  asserts.are_equal calculator.add 4, 8 , 12   print '4 + 8 = 12'def create_test_run  :  test_run = checkers.TestRun.from_module    test_run.setup.register logging_test_run_setup   test_run.teardown.register logging_test_run_teardown   test_run.test_case_setup.register logging_test_case_setup   test_run.test_case_setup.register register_calculator   test_run.test_case_teardown.register logging_test_case_teardown   return test_runif __name__ == '__main__':  pyunit.main test_run=create_test_run   The output for the above test run would be as follows:</field></doc>
<doc><field name="id">2490</field><field name="title">google-checkers</field><field name="session">################################################################################</field><field name="sentence">Running tests under Python 2.7.6: /path/to/python2.7---------------------------------------------------------------------</field></doc>
<doc><field name="id">2491</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">Checkers makes it easy to organize your tests in a flexible, fluid kind of way.A nice aspect of Checkers is that you can use test suites to organize tests</field></doc>
<doc><field name="id">2492</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">Aneven nicer aspect is that the same test can be part of muliple test suites!!This can be really cool if you either have multiple ways that you want to viewtest results  perhaps one view is by module and another view is by feature</field></doc>
<doc><field name="id">2493</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">Itcan also be helpful if you want the same test to be part of multiple suites like if tests are grouped by feature and this is an integration test thatcovers multiple features</field></doc>
<doc><field name="id">2494</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">The nicest feature about using test suites is that,even if a test is used in multiple suites, it is only run once  assuming thetest runner that you're using is well-implemented, of course .I take that back</field></doc>
<doc><field name="id">2495</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">The *nicestdistribute your test definitions cleanly in various modules and use suites tobring them together in test runs in ways that make sense.You can assign tests to test suites in a few ways</field></doc>
<doc><field name="id">2496</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">One way is through thecheckers.TestSuite instance and register the whole suite with the test run.You can just register a test directly in the test run</field></doc>
<doc><field name="id">2497</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">Lastly, you can add avariable to a parameterization called 'test_suites' that has a list of suitenames that only that parameterization should apply to</field></doc>
<doc><field name="id">2498</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">Let's see all of theseoptions below.Imagine we've defined some subtraction tests in a separate module.import checkersfrom checkers import asserts@checkers.parameterize {} def test_subtract x, y, expected :  return asserts.are_equal x And in our main module, we can see all of the different ways that test suitescan be defined  decorator, part of a parameterization, registered with the testrun, or as individual tests registered with the test run .import checkersfrom checkers import assertsfrom checkers.runners import pyunitimport subtraction_tests@checkers.test_suites 'addition', 'multiplication' @checkers.parameterize {} def test_double x, expected :  asserts.are_equal x + x, expected   asserts.are_equal x @checkers.parameterize {} def test_add x, y, expected :  asserts.are_equal x + y, expected def create_test_run  :  test_run = checkers.TestRun.from_module    test_run.test_suites 'addition' .register test_add   subtraction_suite = checkers.TestSuite.from_module subtraction_tests   test_run.test_suites.register subtraction_suite   return test_runif __name__ == '__main__':  pyunit.main test_run=create_test_run   If you ran that code, you'd see that 24 tests were run</field></doc>
<doc><field name="id">2499</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">In reality, only 9 testswere *actuallysome tests are in multiple suites, it is reported as 24 tests</field></doc>
<doc><field name="id">2500</field><field name="title">google-checkers</field><field name="session">Test Organization</field><field name="sentence">If nothing else,you can use Checkers to grossly inflate your metrics and impress folks with yourprolific test authoring!! :smiling_imp:</field></doc>
<doc><field name="id">2501</field><field name="title">google-checkers</field><field name="session">Asserts Module  checkers.asserts</field><field name="sentence">You can use any assert engine for doing asserts, from using the assertstatement directly to using a full-blown matching framework like PyHamcrest  Checkers comes with a fewbuilt-in asserters in the checkers.asserts module.Assert | Example | Descriptionhas_length | asserts.has_length 'hello', 5  | asserts that the given iterable has the expected length</field></doc>
<doc><field name="id">2502</field><field name="title">google-checkers</field><field name="session">Test Runners  checkers.runners.pyunit</field><field name="sentence">The included test runner in the package is the PyUnit runner</field></doc>
<doc><field name="id">2503</field><field name="title">google-checkers</field><field name="session">Test Runners  checkers.runners.pyunit</field><field name="sentence">This will run theCheckers tests *in addition to any other existing unittest-based tests.pyunit.main function will call unittest.main, and pass through any providedargs, so it is very easy to integrate Checkers into existing test environments.As mentioned previously, tests are always stored in test runs in Checkers</field></doc>
<doc><field name="id">2504</field><field name="title">google-checkers</field><field name="session">Test Runners  checkers.runners.pyunit</field><field name="sentence">Soany test runner can be used that takes in test run s  and executes them.</field></doc>
<doc><field name="id">2505</field><field name="title">google-checkers</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is justcode that happens to be owned by Google.</field></doc>
<doc><field name="id">2506</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">This is not an official Google product.Checkers is released under the Apache 2.0 license</field></doc>
<doc><field name="id">2507</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">See the LICENSE file for details.Checkers is a python unit test framework for defining data-driven tests.Contributions are not being accepted for this code as there are significant updates with non-backwards-compatible changes in the release pipeline which will bring new features to the framework</field></doc>
<doc><field name="id">2508</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">Even fundamentals such as the way tests are defined will change</field></doc>
<doc><field name="id">2509</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">Because of this, if you wish to use this package it is strongly recommended that you fork this repository</field></doc>
<doc><field name="id">2510</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">For a preview, check out google/checkers on GitHub.Checkers builds on top of the standard python unittest module</field></doc>
<doc><field name="id">2511</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">It also includes the assertions from the python Hamcrest library.The best documentation is the tests themselves, which are located in examples/quickstart/example#_test.py</field></doc>
<doc><field name="id">2512</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">Example 9 was depricated, however the file remains so that test results are consistent in historical tracking.Checkers is used most-simply as follows:Tests can be automatically discovered to some degree by module, see example3_test.pyThere is some support for creating test suites from a protocol buffer, but this support will be dropped in the next version</field></doc>
<doc><field name="id">2513</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">If this is relied upon it is *stronglyCheckers also allows the specification of startup/setup and shutdown callbacks</field></doc>
<doc><field name="id">2514</field><field name="title">google-checkers_classic</field><field name="session">Checkers Python Unit Test Framework</field><field name="sentence">See example8_test.py and example11_test.py.</field></doc>
<doc><field name="id">2515</field><field name="title">google-chicago-brick</field><field name="session">Quick Start</field><field name="sentence">To use this software, first download and install  node Then, check you have a recent node:Next, install the external npm deps that aren't in the repo:Then, to run the server in 1x1 mode with stars module:And open a Chrome window to You should be able to see many stars zooming towards you.If you don't see that, try running the npm install command again.Or, to run the server in 2x2 mode with stars module:And open the client windows like so:You should be able to see the same thing with four browser windows instead.You can play with different modules by substituting the stars argumentwith other names in chicago-brick/config/demo-playlist.json.</field></doc>
<doc><field name="id">2516</field><field name="title">google-chicago-brick</field><field name="session">Modules</field><field name="sentence">A chicago brick module is a directory with a brick.json file</field></doc>
<doc><field name="id">2517</field><field name="title">google-chicago-brick</field><field name="session">Modules</field><field name="sentence">This fileprovides the module's configuration</field></doc>
<doc><field name="id">2518</field><field name="title">google-chicago-brick</field><field name="session">Modules</field><field name="sentence">See examples in demo_modules</field></doc>
<doc><field name="id">2519</field><field name="title">google-chicago-brick</field><field name="session">Modules</field><field name="sentence">Anydirectory  or glob  that should be included should be passed in using the--module_dir flag.</field></doc>
<doc><field name="id">2520</field><field name="title">google-chicago-brick</field><field name="session">Modules as deps</field><field name="sentence">A module can be included by installing its package as a dependency</field></doc>
<doc><field name="id">2521</field><field name="title">google-chicago-brick</field><field name="session">Modules as deps</field><field name="sentence">By defaultbrick will load any modules found in node_modules subdirectories.</field></doc>
<doc><field name="id">2522</field><field name="title">google-chicago-brick</field><field name="session">API Doc</field><field name="sentence">You can view some API Docs at  – Chicago Brick Team</field></doc>
<doc><field name="id">2523</field><field name="title">google-chkstream</field><field name="session">Checked Exception Streams</field><field name="sentence">**Checked Exception Streams*Java 8 Stream API.ChkStreams is not an official Google product.</field></doc>
<doc><field name="id">2524</field><field name="title">google-chkstream</field><field name="session">Overview</field><field name="sentence">Have you ever wanted to write something like this, but been foiled by thedreaded Unhandled exception type IOException?ChkStreams extends the existing Java 8 Stream API</field></doc>
<doc><field name="id">2525</field><field name="title">google-chkstream</field><field name="session">Overview</field><field name="sentence">To use it, simply: Wrap any Stream using ChkStreams.of Stream  to get a ChkStream</field></doc>
<doc><field name="id">2526</field><field name="title">google-chkstream</field><field name="session">Overview</field><field name="sentence">Declare one or more checked exceptions by callingUse the same Stream API you're used to  except now your lambdas can throw theHandle the checked exceptions in the usual way  catch or declare thrown  in</field></doc>
<doc><field name="id">2527</field><field name="title">google-chkstream</field><field name="session">Features</field><field name="sentence">ChkStream#toStream   will throw unchecked exceptions  specifically  ChkStreamWrappedException  when checked exceptions occur in the stream</field></doc>
<doc><field name="id">2528</field><field name="title">google-chkstream</field><field name="session">Features</field><field name="sentence">Retrolambda  Enjoy the power of  ChkStream on Java 6+ and Android!</field></doc>
<doc><field name="id">2529</field><field name="title">google-chkstream</field><field name="session">License</field><field name="sentence">This project is licensed under the GNU GPLv2 with Classpath Exception, which isthe same license as OpenJDK itself.</field></doc>
<doc><field name="id">2530</field><field name="title">google-chord</field><field name="session">Chord: Scripting Cross-Device Interactions</field><field name="sentence">Chord is a framework for developers to create cross-device wearable interactionby scripting</field></doc>
<doc><field name="id">2531</field><field name="title">google-chord</field><field name="session">Chord: Scripting Cross-Device Interactions</field><field name="sentence">This directory contains the implementation for the Chord frameworkand a viewer for a set of interactive emulators.*This project is previously named "Weave"</field></doc>
<doc><field name="id">2532</field><field name="title">google-chord</field><field name="session">Chord: Scripting Cross-Device Interactions</field><field name="sentence">We renamed this project to avoidconfusion with the  Brillo and Weaveplatform   Note: This is a differentproject! *</field></doc>
<doc><field name="id">2533</field><field name="title">google-chord</field><field name="session">Goals</field><field name="sentence">Chord provides a set of high-level APIs, based on JavaScript, for developers toeasily distribute UI output and combine user input and sensing events acrossdevices</field></doc>
<doc><field name="id">2534</field><field name="title">google-chord</field><field name="session">Goals</field><field name="sentence">These high-level APIs as well as their underlying scripting conceptsallow developers to focus on their target interaction behaviors and think abouttarget devices regarding their capabilities and affordances, rather than lowChord also contributes an environment for developers to test cross-devicebehaviors, and when ready, deploy these behaviors to its runtime environment onusers’ ad-hoc network of mobile and wearable devices.</field></doc>
<doc><field name="id">2535</field><field name="title">google-chord</field><field name="session">Requirements and Setup</field><field name="sentence">Chord is implemented as a Chrome packaged app</field></doc>
<doc><field name="id">2536</field><field name="title">google-chord</field><field name="session">Requirements and Setup</field><field name="sentence">Please install Chrome  and load the directory viewer/ see  instructions to launch a Chrome app</field></doc>
<doc><field name="id">2537</field><field name="title">google-chord</field><field name="session">Progress</field><field name="sentence">This current version enables developers to load chord scripts and interact withthe emulators, including a smartphone, a smart watch, and a tablet.In our next update, developers will be able to connect live Android devices onthe network, and test with devices.</field></doc>
<doc><field name="id">2538</field><field name="title">google-chord</field><field name="session">Publication</field><field name="sentence">This work has been published at  CHI 2015 Interaction</field></doc>
<doc><field name="id">2539</field><field name="title">google-chord</field><field name="session">Publication</field><field name="sentence">In *Proceedings of the 33rd Annual ACM Conference on Human Factorsin Computing Systems  CHI 2015 *</field></doc>
<doc><field name="id">2540</field><field name="title">google-chord</field><field name="session">Publication</field><field name="sentence">ACM, New York, NY, USA, 3923- DOI=</field></doc>
<doc><field name="id">2541</field><field name="title">google-chord</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product</field></doc>
<doc><field name="id">2542</field><field name="title">google-chord</field><field name="session">Disclaimer</field><field name="sentence">The application uses third partylibraries listed under the directory third_party/.</field></doc>
<doc><field name="id">2543</field><field name="title">google-chord</field><field name="session">Contacts</field><field name="sentence">This package is active and maintained</field></doc>
<doc><field name="id">2544</field><field name="title">google-chord</field><field name="session">Contacts</field><field name="sentence">If you have any questions, please sendthem to: Peggy Chi   peggychi@cs.berkeley.edu  mailto:peggychi@cs.berkeley.edu   and  YangLi    yangli@acm.org  mailto:yangli@acm.org  ! Chord UI  /docs/img/chord_UI.png</field></doc>
<doc><field name="id">2545</field><field name="title">google-chrome-opt-out-extension</field><field name="session">This code has been deprecated.</field><field name="sentence">The Keep My Opt-Outs project is now part of theDigital Advertising Alliance Self-Regulatory Program.Google has worked with the DAA to include theKeep My Opt-Outs functionality in the DAA's Protect My Choices Because of this, Google has ceased maintaining thisproject</field></doc>
<doc><field name="id">2546</field><field name="title">google-chrome-opt-out-extension</field><field name="session">This code has been deprecated.</field><field name="sentence">You can still use the code as is under theapplicable license s , but this project is not goingto accept or receive changes anymore.</field></doc>
<doc><field name="id">2547</field><field name="title">google-chrome-ssh-agent</field><field name="session">SSH Agent for Google Chrome™</field><field name="sentence">This is a bare-bones SSH agent extension for Google Chrome™</field></doc>
<doc><field name="id">2548</field><field name="title">google-chrome-ssh-agent</field><field name="session">SSH Agent for Google Chrome™</field><field name="sentence">It provides anSSH agent implementation that can be used with the Secure Shell Chrome extension</field></doc>
<doc><field name="id">2549</field><field name="title">google-chrome-ssh-agent</field><field name="session">Installation</field><field name="sentence">Install the extension from the  Chrome Web Store</field></doc>
<doc><field name="id">2550</field><field name="title">google-chrome-ssh-agent</field><field name="session">Adding and Using Keys</field><field name="sentence">Click on the SSH Agent extension's icon in to Chrome toolbar.Configure a new private key by clicking the 'Add Key' button</field></doc>
<doc><field name="id">2551</field><field name="title">google-chrome-ssh-agent</field><field name="session">Adding and Using Keys</field><field name="sentence">Give it a nameClick the 'Load' button and enter the key's passphrase to load the key intoWhen creating a new connection in the Secure Shell extension, add</field></doc>
<doc><field name="id">2552</field><field name="title">google-chrome-ssh-agent</field><field name="session">Credits</field><field name="sentence">Portions of the code and approach are heavily based on the MacGyver  Chrome extension</field></doc>
<doc><field name="id">2553</field><field name="title">google-chrome-ssh-agent</field><field name="session">Credits</field><field name="sentence">Inparticular, the following:    details</field></doc>
<doc><field name="id">2554</field><field name="title">google-chrome-ssh-agent</field><field name="session">Disclaimer</field><field name="sentence">This is not an officially supported Google product.</field></doc>
<doc><field name="id">2555</field><field name="title">google-chrome-tabber</field><field name="session">Chrome Tabber Project</field><field name="sentence">This repository contains the open source project Chrome Tabber.This project uses the Apache license.</field></doc>
<doc><field name="id">2556</field><field name="title">google-chrome-tabber</field><field name="session">What does Chrome Tabber Do?</field><field name="sentence">Chrome Tabber allows you to share your browser tabs across devices very simply,using your Google account.By default, when you open the Chrome browser, the tabs are initialized to thesame state as when you closed the browser *on that device.*Although there is a setting that lets you change that behavior, you cannoteasily restore tabs from another device</field></doc>
<doc><field name="id">2557</field><field name="title">google-chrome-tabber</field><field name="session">What does Chrome Tabber Do?</field><field name="sentence">The official way to do that in Chromeis to save your current tabs as a group bookmark  *"Bookmark Open Pages..."* and then open that bookmark on another device.Chrome Tabber lets you instantly sync your tabs across Chrome browsers on anydevice logged into your Google account</field></doc>
<doc><field name="id">2558</field><field name="title">google-chrome-tabber</field><field name="session">What does Chrome Tabber Do?</field><field name="sentence">It provides several modes of operationso you can customize this behavior to fit your needs.</field></doc>
<doc><field name="id">2559</field><field name="title">google-chrome-tabber</field><field name="session">How to use Chrome Tabber</field><field name="sentence">After installing Chrome Tabber it will display a little icon in Chrome'sextension icon area  typically the upper right of the browser</field></doc>
<doc><field name="id">2560</field><field name="title">google-chrome-tabber</field><field name="session">How to use Chrome Tabber</field><field name="sentence">Click this iconin order see Chrome Tabber's popup UI.On Tabber's popup, you can see status, perform manual syncing, or change themode of operation</field></doc>
<doc><field name="id">2561</field><field name="title">google-chrome-tabber</field><field name="session">How to use Chrome Tabber</field><field name="sentence">The mode of operation is persistent, and applies to the*current devicedevices  which is a useful and typical way to set up your devices .</field></doc>
<doc><field name="id">2562</field><field name="title">google-chrome-tabber</field><field name="session">Chrome Tabber Modes</field><field name="sentence">By setting various modes on your devices, you can support different use cases.Here are some common scenarios:QUESTION: I have one main device and multiple secondary devices</field></doc>
<doc><field name="id">2563</field><field name="title">google-chrome-tabber</field><field name="session">Chrome Tabber Modes</field><field name="sentence">How do I set upChrome Tabber so that whenever I start Chrome on a secondary device, it openswith the same tabs I last used on my main device?ANSWER: Set your main device to *Auto-Savedevices do not get reflected back to your main device.QUESTION: I have several devices I use</field></doc>
<doc><field name="id">2564</field><field name="title">google-chrome-tabber</field><field name="session">Chrome Tabber Modes</field><field name="sentence">How do I make it so they all show thesame tabs all the time?ANSWER: Set all devices to *Fully Automatic*QUESTION: I use one device almost all the time, but occasionally I do some workon another device</field></doc>
<doc><field name="id">2565</field><field name="title">google-chrome-tabber</field><field name="session">Chrome Tabber Modes</field><field name="sentence">How do I make it so that I can move from device to device,and always 'pick up where I left off?'ANSWER: There are several ways to do this: Set all devices to *Fully Automatic* Set main device to *Fully Automatic Use manual save and load operations to 'move' your work whenever you like.Best Practice: Set main device to *Fully Automatic*Startup Only.click the "Save the Tabs I have Now" button.</field></doc>
<doc><field name="id">2566</field><field name="title">google-chrome-tabber</field><field name="session">NOTE</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">2567</field><field name="title">google-chromeos-filesystems</field><field name="session">Chrome OS Filesystem Providers</field><field name="sentence">travis image   travis  ! Code Climate  codeclimate image   codeclimate This repository contains various filesystem providers for Chrome OS</field></doc>
<doc><field name="id">2568</field><field name="title">google-chromeos-filesystems</field><field name="session">Chrome OS Filesystem Providers</field><field name="sentence">They offer a way to access files stored on remote servers through the Files app, from a variety of sources</field></doc>
<doc><field name="id">2569</field><field name="title">google-chromeos-filesystems</field><field name="session">Chrome OS Filesystem Providers</field><field name="sentence">There are two categories of provider:</field></doc>
<doc><field name="id">2570</field><field name="title">google-chromeos-filesystems</field><field name="session">Current</field><field name="sentence">Work has started on the following providers</field></doc>
<doc><field name="id">2571</field><field name="title">google-chromeos-filesystems</field><field name="session">Planned</field><field name="sentence">There are many more providers we would like to implement, includingTo work on any of these providers, you will need Git, Node.js, Google Chrome and Make installed</field></doc>
<doc><field name="id">2572</field><field name="title">google-chromeos-filesystems</field><field name="session">Planned</field><field name="sentence">You should also install Grunt and Bower globally:All providers read the files needed by their unit tests from the server in the testserver directory</field></doc>
<doc><field name="id">2573</field><field name="title">google-chromeos-filesystems</field><field name="session">Planned</field><field name="sentence">To start it:The Photoshop project files for the various sizes of icon for each provider are contained in the psd directory in the provider's directory</field></doc>
<doc><field name="id">2574</field><field name="title">google-chromeos-filesystems</field><field name="session">Planned</field><field name="sentence">You will need to install  Photoshop    or a  PSD-compatible image editor  psdeditor  to edit them</field></doc>
<doc><field name="id">2575</field><field name="title">google-chromeos-filesystems</field><field name="session">Planned</field><field name="sentence">Rendered icons are stored in extension/icon.It will then run indefinitely in the background on port This can be changed by modifying config.js.</field></doc>
<doc><field name="id">2576</field><field name="title">google-chromeos-filesystems</field><field name="session">Creating new providers</field><field name="sentence">Please refer to the  wiki page  create-provider  for instructions on how to create your own provider</field></doc>
<doc><field name="id">2577</field><field name="title">google-chromeos-filesystems</field><field name="session">Creating new providers</field><field name="sentence">Remember to follow the  guidelines  CONTRIBUTING.md  for contributing to this repository.</field></doc>
<doc><field name="id">2578</field><field name="title">google-chromeos-filesystems</field><field name="session">License</field><field name="sentence">All providers are licensed under the BSD license</field></doc>
<doc><field name="id">2579</field><field name="title">google-chromeos-filesystems</field><field name="session">License</field><field name="sentence">See the LICENSE file for details.All original source code is Copyright 2014 The Chromium Authors</field></doc>
<doc><field name="id">2580</field><field name="title">google-chromeos-filesystems</field><field name="session">License</field><field name="sentence">travis image :  travis :  codeclimate image :  codeclimate :  photoshop :  psdeditor :  create-provider :</field></doc>
<doc><field name="id">2581</field><field name="title">google-ci_edit</field><field name="session">What is ci_edit</field><field name="sentence">ci_edit is a text editor</field></doc>
<doc><field name="id">2582</field><field name="title">google-ci_edit</field><field name="session">What is ci_edit</field><field name="sentence">It can help you view or edit text files.ci_edit runs in the command line  also called the terminal</field></doc>
<doc><field name="id">2583</field><field name="title">google-ci_edit</field><field name="session">What is ci_edit</field><field name="sentence">To start usingci_edit, download ci_edit and open  execute  ci.py.</field></doc>
<doc><field name="id">2584</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">Many other command line text editors require learning a different set of mouseand keyboard commands</field></doc>
<doc><field name="id">2585</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">Many of us use a graphical editor  GUI  that supportsa common set of commands like ctrl+q to quit  that is, hold the control key andpress Q</field></doc>
<doc><field name="id">2586</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">Here are a few common commands:common in command line editors.So, what if you'd like to edit a file in the terminal window but don't want torecall how to save or quit in an unfamiliar editor? This is where ci_editshines, because ci_edit does support those familiar key sequences</field></doc>
<doc><field name="id">2587</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">You alreadyknow how to save in ci_edit, it's ctrl+s</field></doc>
<doc><field name="id">2588</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">Simple.This version of ci_edit still doesn't have all the intended features, but it'sa start</field></doc>
<doc><field name="id">2589</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">It's has the necessary features of a basic text editor and a few fancyextras</field></doc>
<doc><field name="id">2590</field><field name="title">google-ci_edit</field><field name="session">What ci_edit can do for you</field><field name="sentence">Those fancy extras stay out of your way until you want them.</field></doc>
<doc><field name="id">2591</field><field name="title">google-ci_edit</field><field name="session">Installation  Linux / Mac OS</field><field name="sentence">the path to the installation file  i.e</field></doc>
<doc><field name="id">2592</field><field name="title">google-ci_edit</field><field name="session">Installation  Linux / Mac OS</field><field name="sentence">./ PATH_TO_FILE /install.sh</field></doc>
<doc><field name="id">2593</field><field name="title">google-ci_edit</field><field name="session">Installation  Linux / Mac OS</field><field name="sentence">link is created in the directory /usr/local/bin/, which is generally  designated for user programs not managed by the distribution package manager</field></doc>
<doc><field name="id">2594</field><field name="title">google-ci_edit</field><field name="session">Usage</field><field name="sentence">manually.The help we now need is finding out what puts users off; what causes someone whotries the editor to stop using it</field></doc>
<doc><field name="id">2595</field><field name="title">google-ci_edit</field><field name="session">Usage</field><field name="sentence">We intend to address those issues so thatmore users are happy users for a longer time.</field></doc>
<doc><field name="id">2596</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">The world does need another text editor</field></doc>
<doc><field name="id">2597</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">Or at least I think so .There are other fine curses based editors</field></doc>
<doc><field name="id">2598</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">I found that I was often trying totweak them to get just what I wanted</field></doc>
<doc><field name="id">2599</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">Almost as often, some aspect of thoseeditors prevented that last little bit of customization</field></doc>
<doc><field name="id">2600</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">So writing a texteditor should allow all the customization I like, right?Writing a text editor is an interesting project</field></doc>
<doc><field name="id">2601</field><field name="title">google-ci_edit</field><field name="session">Origins</field><field name="sentence">Give it a try sometime.</field></doc>
<doc><field name="id">2602</field><field name="title">google-ci_edit</field><field name="session">Note</field><field name="sentence">This is not an official Google product.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">2603</field><field name="title">google-citest</field><field name="session">Summary</field><field name="sentence">Cloud Integration Testing Framework  citest  is a python package to facilitatewriting integration tests against the REST style APIs typically used bycloud services.The gist is to allow tests to be written using a literary programming stylewhere the core framework accommodates for asynchronous calls and even retriesif appropriate.</field></doc>
<doc><field name="id">2604</field><field name="title">google-citest</field><field name="session">Setup</field><field name="sentence">pip install -r requirements.txt</field></doc>
<doc><field name="id">2605</field><field name="title">google-citest</field><field name="session">Example</field><field name="sentence">A test case might look something like this:  def create_google_load_balancer self :Where the test can be executed like this:</field></doc>
<doc><field name="id">2606</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">Integration tests are written against services by sending an operation tothe service then observing the effects of that operation and verifying themagainst expectations.citest introduces a BaseAgent class for adapting external servicesto the framework where the agent is responsible for understanding thetransport and protocol for exchanging messages with the service</field></doc>
<doc><field name="id">2607</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">It introducessome basic concrete types such as HttpAgent and CliAgent where the primarymeans is HTTP messaging or running a command-line program</field></doc>
<doc><field name="id">2608</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">Specific systemsmay need to further specialize these to understand any additional applicationprotocols added, such as status responses for asynchronous HTTP messaging.BaseAgent also acts as an AgentOperation factory where the operationsprovide a means to wrap these service calls as first-class objects understoodby the core citest framework</field></doc>
<doc><field name="id">2609</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">This allows citest to invoke  or reinvoke the operation when it is appropriate to do so, rather than when the static codeis specifying what the test will be</field></doc>
<doc><field name="id">2610</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">When executed, the AgentOperation willcreate an OperationStatus allowing citest to track its progress andeventual result.In order to verify the operation, citest uses Contract objects</field></doc>
<doc><field name="id">2611</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">A contractis a collection of ContractClause where each clause can look for differenteffects</field></doc>
<doc><field name="id">2612</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">A ContractClause is typically composed of an observation on theeffects and an assertion about what is expected to be observed</field></doc>
<doc><field name="id">2613</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">The observationis made by an Observer that collects data in an Observation by working witha BaseAgent to collect the data  e.g</field></doc>
<doc><field name="id">2614</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">an HTTP GET on someJSON resource</field></doc>
<doc><field name="id">2615</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">The assertion is made by looking for expected values andpatterns in the collected resources</field></doc>
<doc><field name="id">2616</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">Each clause can collect differentThe assertions are written using specialized ValuePredicate objects, whichare python callable classes that take the object value to be validate and returna PredicateResult containing the conclusion and justification for it.When a test is run, it will provide a trace of the operations performed,data collected and justifications as to why it thinks the collected datameets or does not meet expectations, ultimately passing or failing the test.SubPackage | Purposejson_contract | Introduces a means to specify observers to collect JSON documents, and to define contracts specifying expectations of the collected JSON content.json_predicate | Introduces a means to locate and attributes within JSON objects, and compare their values</field></doc>
<doc><field name="id">2617</field><field name="title">google-citest</field><field name="session">Abstract Model</field><field name="sentence">These are used as the basis of json_contract.service_testing | Introduces the core framework, base classes, and generic utilities.aws_testing | Specializations and extensions to support testing on Amazon Web Services  AWS gcp_testing | Specializations and extensions to support testing on Google Cloud Platform  GCP openstack_testing | Specializations and extensions to support testing on OpenStackazure_testing | Specializations and extensions to support testing on Microsoft Azure  AZ tests | Tests for this package</field></doc>
<doc><field name="id">2618</field><field name="title">google-citest</field><field name="session">More Examples</field><field name="sentence">For more examples, see:The  Usage Overview Document  overview.md  provides some instructions andexamples to guide basic usage.</field></doc>
<doc><field name="id">2619</field><field name="title">google-citest</field><field name="session">Contributing</field><field name="sentence">See the CONTRIBUTING file for more information.</field></doc>
<doc><field name="id">2620</field><field name="title">google-citest</field><field name="session">License</field><field name="sentence">See the LICENSE file for more information.The package is composed of several subpackages of individual modules.</field></doc>
<doc><field name="id">2621</field><field name="title">google-citest</field><field name="session">Contact Info</field><field name="sentence">For more information, problems, or interest, contact ewiseblatt@google.com.</field></doc>
<doc><field name="id">2622</field><field name="title">google-clasp</field><field name="session">Features</field><field name="sentence">**🗺️ Develop Locally:***🔢 Manage Deployment Versions:***📁 Structure Code:*First download clasp: If that fails, run this:</field></doc>
<doc><field name="id">2623</field><field name="title">google-clasp</field><field name="session">Login</field><field name="sentence">Logs the user in</field></doc>
<doc><field name="id">2624</field><field name="title">google-clasp</field><field name="session">Login</field><field name="sentence">Saves the client credentials to an rc file.</field></doc>
<doc><field name="id">2625</field><field name="title">google-clasp</field><field name="session">Options</field><field name="sentence">Displays the help function.</field></doc>
<doc><field name="id">2626</field><field name="title">google-clasp</field><field name="session">Get Project ID  #get-project-id</field><field name="sentence">Run clasp open.Click Resources > Cloud Platform project...Copy the project ID project-id-xxxxxxxxxxxxxxxxxxx into .clasp.json</field></doc>
<doc><field name="id">2627</field><field name="title">google-clasp</field><field name="session">Get Project ID  #get-project-id</field><field name="sentence">It should look like this:</field></doc>
<doc><field name="id">2628</field><field name="title">google-clasp</field><field name="session">Ignore File  .claspignore</field><field name="sentence">Like .gitignore, .claspignore allows you to ignore files that you do not wish to not upload on clasp push</field></doc>
<doc><field name="id">2629</field><field name="title">google-clasp</field><field name="session">Ignore File  .claspignore</field><field name="sentence">Steps:Create a file called .claspignore in your project's root directory.Add patterns to be excluded from clasp push</field></doc>
<doc><field name="id">2630</field><field name="title">google-clasp</field><field name="session">Ignore File  .claspignore</field><field name="sentence">_Note_: The .claspignore file is parsed with  Anymatch  which is different from .gitignore, especially for directories</field></doc>
<doc><field name="id">2631</field><field name="title">google-clasp</field><field name="session">Ignore File  .claspignore</field><field name="sentence">To ignore a directory, use syntax like **/node_modules/**.A sample .claspignore ignoring everything except the manifest and build/main.js:When running clone or create, a file named .clasp.json is created in the current directory to describe clasp's configuration for the current project</field></doc>
<doc><field name="id">2632</field><field name="title">google-clasp</field><field name="session">Ignore File  .claspignore</field><field name="sentence">The following configuration values can be used in it:</field></doc>
<doc><field name="id">2633</field><field name="title">google-clasp</field><field name="session">scriptId  required</field><field name="sentence">Specifies the id of the Google Script project that clasp will target</field></doc>
<doc><field name="id">2634</field><field name="title">google-clasp</field><field name="session">scriptId  required</field><field name="sentence">It is the part located inbetween /d/ and /edit in your project's URL: /edit.</field></doc>
<doc><field name="id">2635</field><field name="title">google-clasp</field><field name="session">rootDir  optional</field><field name="sentence">Specifies the **local*</field></doc>
<doc><field name="id">2636</field><field name="title">google-clasp</field><field name="session">Troubleshooting</field><field name="sentence">The library requires **Node version >= 4.7.4**</field></doc>
<doc><field name="id">2637</field><field name="title">google-clasp</field><field name="session">Troubleshooting</field><field name="sentence">Use this script to check your version and **upgrade Node if necessary**:See  the develop guide  docs/develop.md  for instructions on how to build clasp</field></doc>
<doc><field name="id">2638</field><field name="title">google-clasp</field><field name="session">Troubleshooting</field><field name="sentence">It's not that hard!</field></doc>
<doc><field name="id">2639</field><field name="title">google-clasp</field><field name="session">Contributing</field><field name="sentence">The main purpose of this tool is to enable local Apps Script development.If you have a core feature or use-case you'd like to see, find a GitHub issue orcreate a detailed proposal of the use-case.PRs are very welcome! See the  issues   especially **good first issue*</field></doc>
<doc><field name="id">2640</field><field name="title">google-clasp</field><field name="session">How to Submit a Pull Request</field><field name="sentence">Look over the test cases in tests/test.ts, try cases that the PR may affect.Run  tslint  npm run lint.Submit a pull request after testing your feature to make sure it works.⚡ Powered by the  Apps Script API</field></doc>
<doc><field name="id">2641</field><field name="title">google-classp</field><field name="session">#BUILDING AND TESTING</field><field name="sentence">The source code is in the src subdirectory</field></doc>
<doc><field name="id">2642</field><field name="title">google-classp</field><field name="session">#BUILDING AND TESTING</field><field name="sentence">It runs on Linux and builds with Bison 3.02or later, Flex 2.5.39 or later, and g++ 4.8.Cd to the src directory and type  make classp  This will create all intermediate and object files as well as the executable,classp, in the srce directory</field></doc>
<doc><field name="id">2643</field><field name="title">google-classp</field><field name="session">#BUILDING AND TESTING</field><field name="sentence">To run tests of the code generation type  make tests  To have some tests actually run and execute sample parses type  make samples</field></doc>
<doc><field name="id">2644</field><field name="title">google-classp</field><field name="session">#CLASSP FOR THE IMPATIENT</field><field name="sentence">After building Classp as described above, here is a quick example of using it</field></doc>
<doc><field name="id">2645</field><field name="title">google-classp</field><field name="session">#CLASSP FOR THE IMPATIENT</field><field name="sentence">Supposethe main directory is DIR, then enter the following lines in the shell:It tells you what commands it is executing so that you can try themindividually if you want</field></doc>
<doc><field name="id">2646</field><field name="title">google-classp</field><field name="session">#CLASSP FOR THE IMPATIENT</field><field name="sentence">It prints the string that it is about toparse: '1+2+3' and then formats the parsed AST back out: '1 + 2 + 3'.To run your own tests, build a statically linked library:The system does not have any hooks for doing anything with the AST once itis constructed other than formatting it or printing a tree representation.Essentially, this is still a demo system and not a real parsing tool.Avoid using precedence indicators on productions with array attributes</field></doc>
<doc><field name="id">2647</field><field name="title">google-classp</field><field name="session">#CLASSP FOR THE IMPATIENT</field><field name="sentence">Thegrammars generated from this can cause the Bison-generated parsers to gointo an infinite loop.This is not an official Google product  experimental or otherwise , it is justcode that happens to be owned by Google.</field></doc>
<doc><field name="id">2648</field><field name="title">google-cld3</field><field name="session">Compact Language Detector v3  CLD3</field><field name="sentence">CLD3 is a neural network model for language identification</field></doc>
<doc><field name="id">2649</field><field name="title">google-cld3</field><field name="session">Compact Language Detector v3  CLD3</field><field name="sentence">This package contains the inference code and a trained model</field></doc>
<doc><field name="id">2650</field><field name="title">google-cld3</field><field name="session">Compact Language Detector v3  CLD3</field><field name="sentence">The inference code extracts character ngrams from the input text and computes the fraction of times each of them appears</field></doc>
<doc><field name="id">2651</field><field name="title">google-cld3</field><field name="session">Compact Language Detector v3  CLD3</field><field name="sentence">For example, as shown in the figure below, if the input text is "banana", then one of the extracted trigrams is "ana" and the corresponding fraction is 2/The ngrams are hashed down to an id within a small range, and each id is represented by a dense embedding vector estimated during training.The model averages the embeddings corresponding to each ngram type according to the fractions, and the averaged embeddings are concatenated to produce the embedding layer</field></doc>
<doc><field name="id">2652</field><field name="title">google-cld3</field><field name="session">Compact Language Detector v3  CLD3</field><field name="sentence">The remaining components of the network are a hidden  Rectified linear  layer and a softmax layer.To get a language prediction for the input text, we simply perform a forward pass through the network.! Figure  model.png "CLD3"</field></doc>
<doc><field name="id">2653</field><field name="title">google-cld3</field><field name="session">Installation</field><field name="sentence">CLD3 is designed to run in the Chrome browser, so it relies on code in Chromium The steps for building and running the demo of the language detection model are:Open a  GitHub issue  for this repository to file bugs and feature requests.</field></doc>
<doc><field name="id">2654</field><field name="title">google-cld3</field><field name="session">Announcements and Discussion</field><field name="sentence">For announcements regarding major updates as well as general discussion list, please subscribe to: cld3-users@googlegroups.com</field></doc>
<doc><field name="id">2655</field><field name="title">google-cld3</field><field name="session">Credits</field><field name="sentence">Original authors of the code in this package include  in alphabetical order :</field></doc>
<doc><field name="id">2656</field><field name="title">google-clerk</field><field name="session">Clerk</field><field name="sentence">Clerk is a passive netflow/IPFIX generator designed for high-throughput andtestimony-based packet sharing.</field></doc>
<doc><field name="id">2657</field><field name="title">google-clerk</field><field name="session">Architecture</field><field name="sentence">clerk uses  to get packets across N threads.Currently, clerk uses a fixed template  actually 2, one for IPv4, the otherfor IPv6 :solves most of our internal needs quite nicely.</field></doc>
<doc><field name="id">2658</field><field name="title">google-clerk</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">2659</field><field name="title">google-clicktrackers-panel</field><field name="session">Web panel simplifying clicktracker creation in DCM. AppEngine Standard compatible.</field><field name="sentence">This is a Python web application that allows a quick and simple creation ofclick tracking ads in DCM</field></doc>
<doc><field name="id">2660</field><field name="title">google-clicktrackers-panel</field><field name="session">Web panel simplifying clicktracker creation in DCM. AppEngine Standard compatible.</field><field name="sentence">It exposes a simple webpage with a backend meant tobe hosted on Google AppEngine Standard environment.</field></doc>
<doc><field name="id">2661</field><field name="title">google-clicktrackers-panel</field><field name="session">Setup instructions:</field><field name="sentence">Create a GCP project with AppEngine enabled Set your local env to use the newly created project in CLI Change to the directory with the source code Install google-api-python-client to lib directory pip install -t lib/ Enable DCM API Try running the app locally: dev_appserver.py</field></doc>
<doc><field name="id">2662</field><field name="title">google-clicktrackers-panel</field><field name="session">Setup instructions:</field><field name="sentence">and check that it works as Deploy the app to AppEngine gcloud app deploy and press yes Verify the deployed app works: gcloud app browse</field></doc>
<doc><field name="id">2663</field><field name="title">google-clif</field><field name="session">C++ Language Interface Foundation  CLIF</field><field name="sentence">CLIF provides a common foundation for creating C++ wrapper generators forvarious languages.</field></doc>
<doc><field name="id">2664</field><field name="title">google-clif</field><field name="session">Overview</field><field name="sentence">It consists of four parts:  Matcher  Generator  Runtime</field></doc>
<doc><field name="id">2665</field><field name="title">google-clif</field><field name="session">Parser</field><field name="sentence">The parser converts a language-friendly C++ API description to thelanguage-agnostic internal format and passes it to the Matcher.</field></doc>
<doc><field name="id">2666</field><field name="title">google-clif</field><field name="session">Matcher</field><field name="sentence">The matcher parses selected C++ headers with Clang  LLVM's C++ compiler  andcollects type information</field></doc>
<doc><field name="id">2667</field><field name="title">google-clif</field><field name="session">Matcher</field><field name="sentence">That info is passed to the Generator.</field></doc>
<doc><field name="id">2668</field><field name="title">google-clif</field><field name="session">Generator</field><field name="sentence">The generator emits C++ source code for the wrapper.The generated wrapper needs to be built according with language extension rules.Usually that wrapper will call into the Runtime.</field></doc>
<doc><field name="id">2669</field><field name="title">google-clif</field><field name="session">Runtime</field><field name="sentence">The runtime C++ library holds type conversion routines that are specific toeach target language but are the same for every generated wrapper.</field></doc>
<doc><field name="id">2670</field><field name="title">google-clif</field><field name="session">Python CLIF</field><field name="sentence">See complete implementation of a Python wrapper generator in the /python/subdirectory</field></doc>
<doc><field name="id">2671</field><field name="title">google-clif</field><field name="session">Python CLIF</field><field name="sentence">Both Python 2 and 3 are supported.</field></doc>
<doc><field name="id">2672</field><field name="title">google-clif</field><field name="session">Prerequisites</field><field name="sentence">We use  CMake  so make sure CMake We use Google You must have  virtualenv  You must have Subversion installed, so we can fetch LLVM</field></doc>
<doc><field name="id">2673</field><field name="title">google-clif</field><field name="session">Prerequisites</field><field name="sentence">You must have pyparsing installed, so we can build protobuf</field></doc>
<doc><field name="id">2674</field><field name="title">google-clif</field><field name="session">Prerequisites</field><field name="sentence">Use Make sure pkg-config --libs python works  e.g</field></doc>
<doc><field name="id">2675</field><field name="title">google-clif</field><field name="session">Prerequisites</field><field name="sentence">install python-dev and</field></doc>
<doc><field name="id">2676</field><field name="title">google-clif</field><field name="session">Building</field><field name="sentence">The steps below are in INSTALL.sh but outlined here for clarification.The install script sets up a Python virtual environment where it installs CLIF</field></doc>
<doc><field name="id">2677</field><field name="title">google-clif</field><field name="session">Building</field><field name="sentence">Checkout LLVM and Clang source trees  the exact SVN version as specified Build and install the CLIF backend</field></doc>
<doc><field name="id">2678</field><field name="title">google-clif</field><field name="session">Building</field><field name="sentence">If you use Get back to your CLIF python checkout and install it using pip.That version is guaranteed to work</field></doc>
<doc><field name="id">2679</field><field name="title">google-clif</field><field name="session">Building</field><field name="sentence">Older versions likely do not work  they lacksome APIs ; later versions might work, at your own risk.INSTALL.sh will build and install CLIF for Python  and LLVM Clang as an internaltool  to your system by default in $HOME/opt/clif and $HOME/opt/clif/clang.To run Python CLIF use $HOME/opt/clif/bin/pyclif.</field></doc>
<doc><field name="id">2680</field><field name="title">google-clif</field><field name="session">Using your newly built pyclif</field><field name="sentence">First, try some examples:For more details please refer to:  CLIF Python Primer  clif/python/primer.md   CLIF FAQ  clif/python/faq.md</field></doc>
<doc><field name="id">2681</field><field name="title">google-clif</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product.</field></doc>
<doc><field name="id">2682</field><field name="title">google-climb-tracker</field><field name="session">Climb Tracker for Android and Android Wear</field><field name="sentence">Android Studio project for the Climb Tracker Android app.! climbtracker-architecture Uses Firebase as storage  with offline enabled  and authentication mechanism</field></doc>
<doc><field name="id">2683</field><field name="title">google-climb-tracker</field><field name="session">Climb Tracker for Android and Android Wear</field><field name="sentence">The DataApi from the Wear SDK is used to send data from the wearable to the phone.This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">2684</field><field name="title">google-clojure-turtle</field><field name="session">clojure-turtle</field><field name="sentence">clojure-turtle is a Clojure library that implements the Logo programming language in a Clojure context</field></doc>
<doc><field name="id">2685</field><field name="title">google-clojure-turtle</field><field name="session">clojure-turtle</field><field name="sentence">Quil  is used for rendering.Logo is a simple language that is useful in introducing programming to beginners, especially young ones</field></doc>
<doc><field name="id">2686</field><field name="title">google-clojure-turtle</field><field name="session">clojure-turtle</field><field name="sentence">Logo also happens to be a dialect of Lisp</field></doc>
<doc><field name="id">2687</field><field name="title">google-clojure-turtle</field><field name="session">clojure-turtle</field><field name="sentence">clojure-turtle tries to maintain those beneficial aspects of Logo while using Clojure and Clojure syntax</field></doc>
<doc><field name="id">2688</field><field name="title">google-clojure-turtle</field><field name="session">clojure-turtle</field><field name="sentence">The goal is to make learning programming and/or Clojure easier by disguising powerful concepts with fun!</field></doc>
<doc><field name="id">2689</field><field name="title">google-clojure-turtle</field><field name="session">Artifacts</field><field name="sentence">clojure-turtle artifacts are  released to Clojars If you are using Maven, add the following repository definition to your pom.xml:With Leiningen:First,  install Leiningen Second, run a REPL session that has clojure-turtle loaded inside it</field></doc>
<doc><field name="id">2690</field><field name="title">google-clojure-turtle</field><field name="session">Artifacts</field><field name="sentence">This can be done in a couple of ways:Load the clojure-turtle.core namespace.The symbol repeat is overridden to behave more like the Logo function, but the Clojure core function is still available as clojure.core/repeat.Now load a new window that shows our Quil sketch using the new-window form</field></doc>
<doc><field name="id">2691</field><field name="title">google-clojure-turtle</field><field name="session">Artifacts</field><field name="sentence">The sketch is where our turtle lives and operates.</field></doc>
<doc><field name="id">2692</field><field name="title">google-clojure-turtle</field><field name="session">forward, back, right, left</field><field name="sentence">It's forward, back, right, and left as in Logo</field></doc>
<doc><field name="id">2693</field><field name="title">google-clojure-turtle</field><field name="session">forward, back, right, left</field><field name="sentence">Go forward and back by a length  in pixels</field></doc>
<doc><field name="id">2694</field><field name="title">google-clojure-turtle</field><field name="session">forward, back, right, left</field><field name="sentence">Right and left turn the turtle by an angle, in degrees</field></doc>
<doc><field name="id">2695</field><field name="title">google-clojure-turtle</field><field name="session">forward, back, right, left</field><field name="sentence">It's Clojure syntax, so 'executing commands'  function calls  are done within parentheses.</field></doc>
<doc><field name="id">2696</field><field name="title">google-clojure-turtle</field><field name="session">repeat, all</field><field name="sentence">repeat is like the Logo function, or like Clojure's repeatedly</field></doc>
<doc><field name="id">2697</field><field name="title">google-clojure-turtle</field><field name="session">repeat, all</field><field name="sentence">Going from the Logo syntax to clojure-turtle's syntax for repeat, commands that are being repeated are put within parentheses notation</field></doc>
<doc><field name="id">2698</field><field name="title">google-clojure-turtle</field><field name="session">repeat, all</field><field name="sentence">The square brackets that group the repeated commands are replaced with  all ..</field></doc>
<doc><field name="id">2699</field><field name="title">google-clojure-turtle</field><field name="session">repeat, all</field><field name="sentence"></field></doc>
<doc><field name="id">2700</field><field name="title">google-clojure-turtle</field><field name="session">repeat, all</field><field name="sentence">The equivalent of the Logo REPEAT 3  FORWARD 30 RIGHT 90  would beLet's see how we can simplify this.As you just saw above, we can take the instructions that we pass into repeat, give them a single name, and refer to that name to get the same effect.Let's simplify further.So given a named set of instructions, we can invoke the instructions by putting the name in parentheses just like we do for functions like forward, left, and repeat def square-and-turn  all  square   left 90    left 90  square-and-turn !</field></doc>
<doc><field name="id">2701</field><field name="title">google-clojure-turtle</field><field name="session">penup, pendown, setxy, setheading</field><field name="sentence">The turtle has a pen that it drags along where it goes, creating a drawing</field></doc>
<doc><field name="id">2702</field><field name="title">google-clojure-turtle</field><field name="session">penup, pendown, setxy, setheading</field><field name="sentence">We can pick the pen up and put the pen down when we need to draw unconnected lines</field></doc>
<doc><field name="id">2703</field><field name="title">google-clojure-turtle</field><field name="session">penup, pendown, setxy, setheading</field><field name="sentence">setxy also teleports the turtle without drawing</field></doc>
<doc><field name="id">2704</field><field name="title">google-clojure-turtle</field><field name="session">penup, pendown, setxy, setheading</field><field name="sentence">setheading turns the turtle in an exact direction.</field></doc>
<doc><field name="id">2705</field><field name="title">google-clojure-turtle</field><field name="session">clean, home</field><field name="sentence">clean erases all drawing</field></doc>
<doc><field name="id">2706</field><field name="title">google-clojure-turtle</field><field name="session">clean, home</field><field name="sentence">home brings the turtle to its original position and direction.</field></doc>
<doc><field name="id">2707</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">Color can be set for the turtle</field></doc>
<doc><field name="id">2708</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">A color is specified by a vector ofsize 1, 3, or A three-element color vector has 3 integers for the red,green, and blue components of the color  in that order  in the range0  this page for examples of specifying color in terms of RGB values</field></doc>
<doc><field name="id">2709</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">The turtle sprite  the triangle representing the turtle  will be drawnin the same color as the turtle's pen.We can also use our color value to fill the interior of shapes that wedraw</field></doc>
<doc><field name="id">2710</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">To draw shapes will a fill color, we first have to indicatewhen we start and when we end drawing the shape</field></doc>
<doc><field name="id">2711</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">For that, we use thestart-fill and end-fill commands</field></doc>
<doc><field name="id">2712</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">Every line segment that the turtledraws in between start-fill and end-fill is assumed to form theperimeter of the shape.Let us define filled-octagon as the combination of commands to draw a filledoctagon</field></doc>
<doc><field name="id">2713</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">In between the start-fill and end-fill that demarcate ourfill shape, we will use our octagon function to draw the perimeter of theoctagon that we want filled.as the "alpha" value</field></doc>
<doc><field name="id">2714</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">In clojure-turtle, the alpha value is also aninteger that ranges from 0 to  The value 0 represents fulltransparency, and 255 represents full opacity.overlap, so we will create a points vector of 4 x,y-coordinates fromwhich we will start drawingeach octagon.set our position to that first point, and then draw our first octagonfrom there</field></doc>
<doc><field name="id">2715</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">let  point-1  first points    setxy x y    filled-octagon    Next, we will draw our the remaining 3 octagons</field></doc>
<doc><field name="id">2716</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">Since we willperform similar actions in repetition, let's create a function tostore the behavior we want to repeat.!  A color vector of size 1 creates a grayscale color ranging from blackto white</field></doc>
<doc><field name="id">2717</field><field name="title">google-clojure-turtle</field><field name="session">color</field><field name="sentence">The grayscalecolor is equivalent to using a 3-element RGB color vector where thevalues for red, green, and blue are the same.</field></doc>
<doc><field name="id">2718</field><field name="title">google-clojure-turtle</field><field name="session">wait and animation</field><field name="sentence">We can use wait to make the turtle pause</field></doc>
<doc><field name="id">2719</field><field name="title">google-clojure-turtle</field><field name="session">wait and animation</field><field name="sentence">The number passed to waitindicates how many milliseconds the turtle should wait  1 millisecond= 0.001 seconds = 1 / 1000 seconds .watch the turtle move and perceive motion</field></doc>
<doc><field name="id">2720</field><field name="title">google-clojure-turtle</field><field name="session">wait and animation</field><field name="sentence">clean  home  defn slower-octagon       repeat 8  fn    repeat 12  all  slower-octagon   right 30   What happens when you combine wait with clean?  If we repeatedlydraw, wait, and clean images in a loop, we can create the effect ofmotion!  See the  Animation page  for moreinformation and examples.</field></doc>
<doc><field name="id">2721</field><field name="title">google-clojure-turtle</field><field name="session">What next?</field><field name="sentence">clojure-turtle uses Quil, which uses  Processing  clojure-turtle also has the full power and fun of Clojure available to it, too.What do you get when you enter the following? defn square-by-length   side-length    repeat 4  all  forward side-length   right 90     square-by-length 10  square-by-length 20  defn times-2   x     right 90  map square-by-length  map times-2 lengths   right 90  ->> lengths defn polygon-side   num-sides side-length    forward side-length    right  / 360 num-sides    defn polygon   num-sides side-length    repeat num-sides  all  polygon-side num-sides side-length     clean  right 180  polygon 5 20  def side-counts  6 7 8 10 12   def lengths  reverse  30 40 50 60 70    map polygon side-counts lengths  defn rand-side       forward  rand-int 50     setheading  rand-int 360    fn? rand-side  fn? side  clean  home  repeat 4 side  repeat 100 rand-side What possibilities exist when you incorporate the full power of Clojure?  What can you create?</field></doc>
<doc><field name="id">2722</field><field name="title">google-clojure-turtle</field><field name="session">Using the ClojureScript Version</field><field name="sentence">The same codebase in clojure-turtle can be compiled to JS and used in a JS runtime in addition to JVM bytecode</field></doc>
<doc><field name="id">2723</field><field name="title">google-clojure-turtle</field><field name="session">Using the ClojureScript Version</field><field name="sentence">A demo of the JS version can be executed by first running the command:Then, in your browser, visit the URL in the terminal output from the command -</field></doc>
<doc><field name="id">2724</field><field name="title">google-clojure-turtle</field><field name="session">Mailing List</field><field name="sentence">Join the  clojure-turtle mailing list  to post questions and receive announcements.</field></doc>
<doc><field name="id">2725</field><field name="title">google-clojure-turtle</field><field name="session">How to Contribute</field><field name="sentence">Interested in contributing code to the project?  We would love to haveyour help!Before you can contribute, you should first read the page on contributing  ./CONTRIBUTING.md  and agree to the ContributorLicense Agreement</field></doc>
<doc><field name="id">2726</field><field name="title">google-clojure-turtle</field><field name="session">How to Contribute</field><field name="sentence">Signing the CLA can be done online and is fast.This is a one-time process.Thereafter, contributions can be initiated through a  pullrequest</field></doc>
<doc><field name="id">2727</field><field name="title">google-clojure-turtle</field><field name="session">License</field><field name="sentence">Distributed under the Apache 2 license.</field></doc>
<doc><field name="id">2728</field><field name="title">google-clojure-turtle</field><field name="session">Disclaimer</field><field name="sentence">This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">2729</field><field name="title">google-clojure-turtle</field><field name="session">Dependencies</field><field name="sentence">Quil is distributed under the Eclipse Public License either version 1.0  or at your option  any later version.The official Processing.org's jars, used as dependencies of Quil, are distributed under LGPL and their code can be found on</field></doc>
<doc><field name="id">2730</field><field name="title">google-closure-builder</field><field name="session">Required ####</field><field name="sentence">These basic required options for compiling are:These options could be used for adding additional information.The following options are available for the closure and soy compiler:To adjust the Closure compiler warnings, you could useoptions.closure.jscomp_..</field></doc>
<doc><field name="id">2731</field><field name="title">google-closure-builder</field><field name="session">Required ####</field><field name="sentence">or the shortcut jscomp_....The following options are partially implemented and should not be used:is possible.If you need to know exactly if a tasks has finished you could add a callbackfunction as well.var closureBuilder = require 'closure-builder' ;var callbackExample = function errors, warnings, files, results  {  ...closureBuilder.build {  ...}, callbackExample.bind this  ;The callback will be called with the following parameters:You could define as many build rules you want.Please keep in mind to add the needed require before like:var closureBuilder = require 'closure-builder' ;var glob = closureBuilder.globSupport  ;closureBuilder.build {  ...} ;</field></doc>
<doc><field name="id">2732</field><field name="title">google-closure-builder</field><field name="session">Compile Closure JavaScript files ####</field><field name="sentence">Compiling Closure JavaScript files for the given namespace to an singleJavaScript file.</field></doc>
<doc><field name="id">2733</field><field name="title">google-closure-builder</field><field name="session">Compile Closure JavaScript files with Soy files ####</field><field name="sentence">Compiling Closure JavaScript files and associated Soy files to a singlejavascript file.</field></doc>
<doc><field name="id">2734</field><field name="title">google-closure-builder</field><field name="session">Compile Closure JavaScript files with externs ####</field><field name="sentence">Compiling Closure JavaScript files with JavaScript externs.javascript file.</field></doc>
<doc><field name="id">2735</field><field name="title">google-closure-builder</field><field name="session">Compile Closure JavaScript files over remote service ####</field><field name="sentence">Compiling Closure JavaScript files with the remote service to a singlejavascript file.Please keep in mind that the remote service is not supporting all features andoptions of the closure compiler.</field></doc>
<doc><field name="id">2736</field><field name="title">google-closure-builder</field><field name="session">Compile Closure Template files ####</field><field name="sentence">Compiling Soy files into Soy JavaScript files to an targeted directory.</field></doc>
<doc><field name="id">2737</field><field name="title">google-closure-builder</field><field name="session">Compile Closure Stylesheet files ####</field><field name="sentence">Compiling closure stylesheet files into css files to an targeted directory.</field></doc>
<doc><field name="id">2738</field><field name="title">google-closure-builder</field><field name="session">Compile JavaScript files ####</field><field name="sentence">Combine several JavaScript files to a single JavaScript file.</field></doc>
<doc><field name="id">2739</field><field name="title">google-closure-builder</field><field name="session">Compile Node.js files ####</field><field name="sentence">Combine node.js JavaScript files with browserify to a single JavaScript bundle.</field></doc>
<doc><field name="id">2740</field><field name="title">google-closure-builder</field><field name="session">Compile Rollup files ####</field><field name="sentence">Combine JavaScript files with rollup to a single JavaScript bundle.</field></doc>
<doc><field name="id">2741</field><field name="title">google-closure-builder</field><field name="session">Compile CSS files ####</field><field name="sentence">Combine and minified several CSS files to a single CSS file.</field></doc>
<doc><field name="id">2742</field><field name="title">google-closure-builder</field><field name="session">Copy resources ####</field><field name="sentence">Copy static resources from the different location to the target directory.Copy resources from an remote location to the target directory.Convert markdown  .md  to .html file.They could be placed in an "build" folder or something like this.Example: This allows you to rebuild only some of the files if needed.Example package.json:closure-builder project.</field></doc>
<doc><field name="id">2743</field><field name="title">google-closure-builder</field><field name="session">Get the sources</field><field name="sentence">Download the source files manual from GitHub or with git by running:</field></doc>
<doc><field name="id">2744</field><field name="title">google-closure-builder</field><field name="session">Init / update submodules</field><field name="sentence">In some cases you need to init and update the submodules manually by:</field></doc>
<doc><field name="id">2745</field><field name="title">google-closure-builder</field><field name="session">Get required packages</field><field name="sentence">Enter the "closure-builder" directory and get the required packages by:</field></doc>
<doc><field name="id">2746</field><field name="title">google-closure-builder</field><field name="session">Updating dependencies ###</field><field name="sentence">Before you start working, run npm run update to update the dependencies tothe latest package versions.</field></doc>
<doc><field name="id">2747</field><field name="title">google-closure-builder</field><field name="session">Code Style ###</field><field name="sentence">Run npm run lint to make sure that your code is according the general style.</field></doc>
<doc><field name="id">2748</field><field name="title">google-closure-builder</field><field name="session">Testing ###</field><field name="sentence">Tests could be performed with npm run test</field></doc>
<doc><field name="id">2749</field><field name="title">google-closure-builder</field><field name="session">Testing ###</field><field name="sentence">Before the test runs it willautomatically run the linter to make sure that the code has no syntax errors.</field></doc>
<doc><field name="id">2750</field><field name="title">google-closure-builder</field><field name="session">Deploying ###</field><field name="sentence">Add all your files and create your commit, but instead of using "git push"directly please use npm run deploy instead.It will automatically run some tests and increase the versions number by 0.0.--------------------</field></doc>
<doc><field name="id">2751</field><field name="title">google-closure-compiler-js</field><field name="session">closure-compiler-js</field><field name="sentence">**Note**: This package is now deprecated</field></doc>
<doc><field name="id">2752</field><field name="title">google-closure-compiler-js</field><field name="session">closure-compiler-js</field><field name="sentence">Distribution of the JavaScript version has been moved to the main npm distribution at  This package will continueto work, but no new versions of the package will be published.Check, compile, transpile, optimize and compress JavaScript with Closure Compiler in JS.This repo tracks issues related to the publication to npmjs.org and associated plugins.Any bugs not related to the plugins themselves should be reported to the  main repository Unlike other packages, this allows Closure Compiler to run entirely in JS.*Java is not required.*This is an experimental release</field></doc>
<doc><field name="id">2753</field><field name="title">google-closure-compiler-js</field><field name="session">Usage</field><field name="sentence">*These instructions will continue to work, but the package is deprecated.Development has moved to First, install the latest version:By default, this compiles ES6 to ES5 and includes the default set of ECMAScript externs files.For example:const compile = require 'google-closure-compiler-js' .compile;const flags = {  jsCode:  {src: 'const x = 1 + 2;'} ,const out = compile flags ;console.info out.compiledCode ;  // will print 'var x = 3;\n'Or to install the command-line version, do:The google-closure-compiler-js command can read from stdin or from a file.For example:</field></doc>
<doc><field name="id">2754</field><field name="title">google-closure-compiler-js</field><field name="session">Webpack</field><field name="sentence">Your webpack.config.js should look like this:const ClosureCompiler = require 'google-closure-compiler-js' .webpack;const path = require 'path' ;module.exports = {  entry:     ,  output: {  },  plugins:</field></doc>
<doc><field name="id">2755</field><field name="title">google-closure-compiler-js</field><field name="session">Gulp</field><field name="sentence">Your gulpfile.js should contain a task like this:const compiler = require 'google-closure-compiler-js' .gulp  ;gulp.task 'script', function   {  return gulp.src './path/to/src.js', {base: './'} } ;</field></doc>
<doc><field name="id">2756</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">| Flag| angularPass | false | Generate $inject properties for AngularJS for functions annotated with @ngInject || applyInputSourceMaps | true | Compose input source maps into output source map || assumeFunctionWrapper | false | Enable additional optimizations based on the assumption that the output will be wrapped with a function wrapper</field></doc>
<doc><field name="id">2757</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">This flag is used to indicate that "global" declarations will not actually be global but instead isolated to the compilation unit</field></doc>
<doc><field name="id">2758</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">This enables additional optimizations</field></doc>
<doc><field name="id">2759</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| checksOnly | false | Don't generate output</field></doc>
<doc><field name="id">2760</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">Run checks, but no optimization passes</field></doc>
<doc><field name="id">2761</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| compilationLevel | SIMPLE | Specifies the compilation level to use</field></doc>
<doc><field name="id">2762</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">Options: WHITESPACE_ONLY, SIMPLE, ADVANCED || dartPass | false | || defines | null | Overrides the value of variables annotated with @define, an object mapping names to primitive types || env | BROWSER | Determines the set of builtin externs to load</field></doc>
<doc><field name="id">2763</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">Options: BROWSER, CUSTOM || exportLocalPropertyDefinitions | false | || generateExports | false | Generates export code for those marked with @export</field></doc>
<doc><field name="id">2764</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| languageIn | ES6 | Sets what language spec that input sources conform to</field></doc>
<doc><field name="id">2765</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| languageOut | ES5 | Sets what language spec the output should conform to</field></doc>
<doc><field name="id">2766</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| newTypeInf | false | Checks for type errors using the new type inference algorithm</field></doc>
<doc><field name="id">2767</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| outputWrapper | null | Interpolate output into this string, replacing the token %output% || polymerVersion | null | Specify the Polymer version pass to use</field></doc>
<doc><field name="id">2768</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| preserveTypeAnnotations | false | || processCommonJsModules | false | Process CommonJS modules to a concatenable form, i.e., support require statements</field></doc>
<doc><field name="id">2769</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| renamePrefixNamespace | | Specifies the name of an object that will be used to store all non-extern globals</field></doc>
<doc><field name="id">2770</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| rewritePolyfills | true | Rewrite ES6 library calls to use polyfills provided by the compiler's runtime</field></doc>
<doc><field name="id">2771</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| useTypesForOptimization | false | Enable or disable the optimizations based on available type information</field></doc>
<doc><field name="id">2772</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">Inaccurate type annotations may result in incorrect results</field></doc>
<doc><field name="id">2773</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| warningLevel | DEFAULT | Specifies the warning level to use</field></doc>
<doc><field name="id">2774</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">Options: QUIET, DEFAULT, VERBOSE || jsCode |    | Specifies the source code to compile</field></doc>
<doc><field name="id">2775</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| externs |    | Additional externs to use for this compile</field></doc>
<doc><field name="id">2776</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|| createSourceMap | false | Generates a source map mapping the generated source file back to its original sources</field></doc>
<doc><field name="id">2777</field><field name="title">google-closure-compiler-js</field><field name="session">Flags</field><field name="sentence">|</field></doc>
<doc><field name="id">2778</field><field name="title">google-closure-compiler-js</field><field name="session">Languages</field><field name="sentence">The Closure Compiler supports the following languages:Unless you're using Gulp's or Webpack's plugins, you'll need to specify code via flags:The JavaScript version of the Closure-Compiler is transpiled by GWT from the Java source.For more details on the differences in behavior see the  super sourced files  1  in the main 1 :</field></doc>
<doc><field name="id">2779</field><field name="title">google-closure-compiler-js</field><field name="session">Version History</field><field name="sentence">Closure Compiler release notes can be found on the main repository wiki</field></doc>
<doc><field name="id">2780</field><field name="title">google-closure-compiler-js</field><field name="session">License</field><field name="sentence">Copyright © 2017 The Closure Compiler AuthorsLicensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">2781</field><field name="title">google-closure-compiler-npm</field><field name="session">google-closure-compiler</field><field name="sentence">! npm version  Check, compile, optimize and compress Javascript with Closure-CompilerThis repository tracks issues related to the publication to npmjs.org and associated plugins.Any bugs not related to the plugins themselves should be reported to the main repository</field></doc>
<doc><field name="id">2782</field><field name="title">google-closure-compiler-npm</field><field name="session">Getting Started</field><field name="sentence">If you are new to  Closure-Compiler  makesure to read and understand the compilation levels  asthe compiler works very differently depending on the compilation level selected.For help or questions with the compiler, the best resource is Stack Overflow  Posts thereare monitored by multiple Closure Compiler team members.You may also post in the Closure Compiler Discuss Google Group *Please don't cross post to both Stackoverflow and Closure Compiler Discuss.*The compiler is distributed as a Java jar and a JavaScript library</field></doc>
<doc><field name="id">2783</field><field name="title">google-closure-compiler-npm</field><field name="session">Getting Started</field><field name="sentence">Mac OS and Linux also have native binaries.</field></doc>
<doc><field name="id">2784</field><field name="title">google-closure-compiler-npm</field><field name="session">Native Binary Version</field><field name="sentence">On Mac OS or Linux, optional dependencies will install a native binary of the compiler.Native binaries offer faster compile times without requiring Java to be installed and available.Compilations with a very large number of source files may be slightly slower than the java version.</field></doc>
<doc><field name="id">2785</field><field name="title">google-closure-compiler-npm</field><field name="session">Java Version</field><field name="sentence">const ClosureCompiler = require 'google-closure-compiler' .compiler;console.log ClosureCompiler.COMPILER_PATH ; // absolute path the compiler jarconsole.log ClosureCompiler.CONTRIB_PATH ; // absolute path the contrib folder which containsconst closureCompiler = new ClosureCompiler {  js: 'file-one.js',  compilation_level: 'ADVANCED'} ;const compilerProcess = closureCompiler.run  exitCode, stdOut, stdErr  => {  //compilation complete} ;</field></doc>
<doc><field name="id">2786</field><field name="title">google-closure-compiler-npm</field><field name="session">JavaScript Version</field><field name="sentence">const ClosureCompiler = require 'google-closure-compiler' .jsCompiler;console.log ClosureCompiler.CONTRIB_PATH ; // absolute path the contrib folder which containsconst closureCompiler = new ClosureCompiler {  compilation_level: 'ADVANCED'} ;const compilerProcess = closureCompiler.run  { path: 'file-one.js', src: 'alert "hello world" ', sourceMap: null // optional input source map} ,  exitCode, stdOut, stdErr  => {  //compilation complete} ;</field></doc>
<doc><field name="id">2787</field><field name="title">google-closure-compiler-npm</field><field name="session">Usage</field><field name="sentence">The simplest way to invoke the compiler  e.g</field></doc>
<doc><field name="id">2788</field><field name="title">google-closure-compiler-npm</field><field name="session">Usage</field><field name="sentence">if you're just trying it out  is with  npx The npx version will attempt to detect the best platform to use</field></doc>
<doc><field name="id">2789</field><field name="title">google-closure-compiler-npm</field><field name="session">Usage</field><field name="sentence">You can also specify the platformwith the special --platform flag.</field></doc>
<doc><field name="id">2790</field><field name="title">google-closure-compiler-npm</field><field name="session">Installation</field><field name="sentence">See the  full list of compiler flags The build tool plugins take options objects</field></doc>
<doc><field name="id">2791</field><field name="title">google-closure-compiler-npm</field><field name="session">Installation</field><field name="sentence">The option parameters map directly to thecompiler flags without the leading '--' characters</field></doc>
<doc><field name="id">2792</field><field name="title">google-closure-compiler-npm</field><field name="session">Installation</field><field name="sentence">You may also use camelCase option names.Values are either strings or booleans</field></doc>
<doc><field name="id">2793</field><field name="title">google-closure-compiler-npm</field><field name="session">Installation</field><field name="sentence">Options which have multiple values can be arrays.than passing the string on to the compiler</field></doc>
<doc><field name="id">2794</field><field name="title">google-closure-compiler-npm</field><field name="session">Installation</field><field name="sentence">To prevent this it is necessary to quotecertain arguments:The compiler package also includes build tool plugins for  Grunt  and  Gulp  There is also an  official webpack plugin Additionally, community members have created plugins leveraging this library.</field></doc>
<doc><field name="id">2795</field><field name="title">google-closure-compiler-npm</field><field name="session">Changing the Path to the Java SDK</field><field name="sentence">Override the path before first use.const Compiler = require 'google-closure-compiler' ;Compiler.prototype.javaPath = '/node_modules/MODULE_NAME/jre/jre1.8.0_131.jre/Contents/Home/bin/java';const compiler = new Compiler {args} ;</field></doc>
<doc><field name="id">2796</field><field name="title">google-closure-compiler-npm</field><field name="session">Running the compiler using nailgun</field><field name="sentence">*Note: nailgun users are encouraged to try the native binary versions where available.*This gets around the long startup time of Google Closure Compiler using Nailgun  which runs a single java process in the backgroundand keeps all of the classes loaded.First you need to install closure-gun by running the following command.Then point the package to use closure-gun rather than the JDK.const compilerPackage = require 'google-closure-compiler' ;compilerPackage.compiler.JAR_PATH = undefined;compilerPackage.compiler.prototype.javaPath = './node_modules/.bin/closure-gun'Note that when using gulp, Only invocations without gulp.src work with nailgun.</field></doc>
<doc><field name="id">2797</field><field name="title">google-closure-compiler-npm</field><field name="session">Native Node Usage  for Plugin Authors</field><field name="sentence">A low-level node class is included to facilitate spawning the compiler jar as a process from Node.In addition, it exposes a static property with the path to the compiler jar file.</field></doc>
<doc><field name="id">2798</field><field name="title">google-closure-compiler-npm</field><field name="session">License</field><field name="sentence">Copyright 2015 The Closure Compiler AuthorsLicensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License atdistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">2799</field><field name="title">google-closure-compiler-npm</field><field name="session">Version History</field><field name="sentence">Closure Compiler release notes can be found on the main repository wiki</field></doc>
<doc><field name="id">2800</field><field name="title">google-closure-compiler</field><field name="session">Google Closure Compiler</field><field name="sentence">! Open Source Helpers  The  Closure Compiler  is a tool for making JavaScript download and run faster</field></doc>
<doc><field name="id">2801</field><field name="title">google-closure-compiler</field><field name="session">Google Closure Compiler</field><field name="sentence">It is a true compiler for JavaScript</field></doc>
<doc><field name="id">2802</field><field name="title">google-closure-compiler</field><field name="session">Google Closure Compiler</field><field name="sentence">Instead of compiling from a source language to machine code, it compiles from JavaScript to better JavaScript</field></doc>
<doc><field name="id">2803</field><field name="title">google-closure-compiler</field><field name="session">Google Closure Compiler</field><field name="sentence">It parses your JavaScript, analyzes it, removes dead code and rewrites and minimizes what's left</field></doc>
<doc><field name="id">2804</field><field name="title">google-closure-compiler</field><field name="session">Google Closure Compiler</field><field name="sentence">It also checks syntax, variable references, and types, and warns about common JavaScript pitfalls.</field></doc>
<doc><field name="id">2805</field><field name="title">google-closure-compiler</field><field name="session">Getting Started</field><field name="sentence">Post in the  Closure Compiler Discuss Group Ask a question on  Stack Overflow Consult the  FAQ</field></doc>
<doc><field name="id">2806</field><field name="title">google-closure-compiler</field><field name="session">Building it Yourself</field><field name="sentence">Note: The Closure Compiler requires  Java 8 or higher</field></doc>
<doc><field name="id">2807</field><field name="title">google-closure-compiler</field><field name="session">Using  Maven</field><field name="sentence">Download  Maven Add sonatype snapshots repository to ~/.m2/settings.xml:On the command line, at the root of this project, run mvn -DskipTests  omit the -DskipTests if you want to run all theunit tests too .</field></doc>
<doc><field name="id">2808</field><field name="title">google-closure-compiler</field><field name="session">Using  Eclipse</field><field name="sentence">Download and open  Eclipse IDE  Disable Project > Build automatically during this process.On the command line, at the root of this project, run mvn eclipse:eclipse -DdownloadSources=true to download JARs and build Eclipse project configuration.Run mvn clean and mvn -DskipTests to ensure AutoValues are generated and updated.In Eclipse, navigate to File > Import > Maven > Existing Maven Projects and browse to closure-compiler.Import both closure-compiler and the nested externs project.Disregard the warnings about maven-antrun-plugin and build errors.Configure the project to use the  Google Eclipse style guide Edit .classpath in closure-compiler-parent</field></doc>
<doc><field name="id">2809</field><field name="title">google-closure-compiler</field><field name="session">Using  Eclipse</field><field name="sentence">Delete the  line, then add:Ensure the Eclipse project settings specify 1.8 compliance level in "Java Compiler".Build project in Eclipse  right click on the project closure-compiler-parent and select Build Project .See *Using Maven</field></doc>
<doc><field name="id">2810</field><field name="title">google-closure-compiler</field><field name="session">Running</field><field name="sentence">On the command line, at the root of this project, typeand "Enter" again</field></doc>
<doc><field name="id">2811</field><field name="title">google-closure-compiler</field><field name="session">Running</field><field name="sentence">The Compiler will respond:output to a file, checking your code, and running optimizations</field></doc>
<doc><field name="id">2812</field><field name="title">google-closure-compiler</field><field name="session">Running</field><field name="sentence">To learn more, documentation</field></doc>
<doc><field name="id">2813</field><field name="title">google-closure-compiler</field><field name="session">Run using Eclipse</field><field name="sentence">Open the class src/com/google/javascript/jscomp/CommandLineRunner.java or create your own extended version of the class.Run the class in Eclipse.See the instructions above on how to use the interactive modeIf you have multiple scripts, you should compile them all together with onecompile command.</field></doc>
<doc><field name="id">2814</field><field name="title">google-closure-compiler</field><field name="session">Recursively include all js files in subdirs</field><field name="sentence">java -jar compiler.jar --js_output_file=out.js 'src/**.js'</field></doc>
<doc><field name="id">2815</field><field name="title">google-closure-compiler</field><field name="session">Use single-quotes, so that bash doesn't try to expand the '!'</field><field name="sentence">java -jar compiler.jar --js_output_file=out.js 'src/**.js' '!**_test.js'The Closure Compiler will concatenate the files in the order they're passed atthe command line.If you're using globs or many files, you may start to run intoproblems with managing dependencies between scripts</field></doc>
<doc><field name="id">2816</field><field name="title">google-closure-compiler</field><field name="session">Use single-quotes, so that bash doesn't try to expand the '!'</field><field name="sentence">In this case, you shoulduse the  Closure Library  Itcontains functions for enforcing dependencies between scripts, and Closure Compilerwill re-order the inputs automatically.</field></doc>
<doc><field name="id">2817</field><field name="title">google-closure-compiler</field><field name="session">Reporting a bug</field><field name="sentence">First make sure that it is really a bug and not simply the way that Closure Compiler works  especially true for ADVANCED_OPTIMIZATIONS .If it hasn't been reported yet, post a new issue</field></doc>
<doc><field name="id">2818</field><field name="title">google-closure-compiler</field><field name="session">Reporting a bug</field><field name="sentence">Make sure to add enough detail so that the bug can be recreated</field></doc>
<doc><field name="id">2819</field><field name="title">google-closure-compiler</field><field name="session">Reporting a bug</field><field name="sentence">The smaller the reproduction code, the better.</field></doc>
<doc><field name="id">2820</field><field name="title">google-closure-compiler</field><field name="session">Suggesting a Feature</field><field name="sentence">Consult the  FAQ  to make sure that the behaviour you would like isn't specifically excluded  such as string inlining .Make sure someone hasn't requested the same thing</field></doc>
<doc><field name="id">2821</field><field name="title">google-closure-compiler</field><field name="session">Suggesting a Feature</field><field name="sentence">See the list of  known issues Read up on  what type of feature requests are accepted Submit your request as an issue.</field></doc>
<doc><field name="id">2822</field><field name="title">google-closure-compiler</field><field name="session">Submitting patches</field><field name="sentence">All contributors must sign a contributor license agreement  CLA .To make sure your changes are of the type that will be accepted, ask about your patch on the  Closure Compiler Discuss Group Fork the repository.Make your changes</field></doc>
<doc><field name="id">2823</field><field name="title">google-closure-compiler</field><field name="session">Submitting patches</field><field name="sentence">Check out ourSubmit a pull request for your changes</field></doc>
<doc><field name="id">2824</field><field name="title">google-closure-compiler</field><field name="session">Submitting patches</field><field name="sentence">A project developer will review your work and then merge your request into the project.</field></doc>
<doc><field name="id">2825</field><field name="title">google-closure-compiler</field><field name="session">Closure Compiler License</field><field name="sentence">Copyright 2009 The Closure Compiler Authors.Licensed under the Apache License, Version 2.0  the "License" ;you may not use this file except in compliance with the License.You may obtain a copy of the License at Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.</field></doc>
<doc><field name="id">2826</field><field name="title">google-closure-compiler</field><field name="session">Rhino</field><field name="sentence">implementation of JavaScript for the JVM</field></doc>
<doc><field name="id">2827</field><field name="title">google-closure-compiler</field><field name="session">Rhino</field><field name="sentence">The JavaScriptparse tree data structures were extracted and modifiedsignificantly for use by Google's JavaScript compiler</field></doc>
<doc><field name="id">2828</field><field name="title">google-closure-compiler</field><field name="session">Rhino</field><field name="sentence">relevant to the parse tree has been removed</field></doc>
<doc><field name="id">2829</field><field name="title">google-closure-compiler</field><field name="session">Rhino</field><field name="sentence">A JsDoc parser and static typingsystem have been added</field></doc>
<doc><field name="id">2830</field><field name="title">google-closure-compiler</field><field name="session">Rhino</field><field name="sentence"></field></doc>
<doc><field name="id">2831</field><field name="title">google-closure-compiler</field><field name="session">Args4j</field><field name="sentence">options/arguments in your CUI application</field></doc>
<doc><field name="id">2832</field><field name="title">google-closure-compiler</field><field name="session">Args4j</field><field name="sentence"></field></doc>
<doc><field name="id">2833</field><field name="title">google-closure-compiler</field><field name="session">Guava Libraries</field><field name="sentence"></field></doc>
<doc><field name="id">2834</field><field name="title">google-closure-compiler</field><field name="session">JSR 305</field><field name="sentence"></field></doc>
<doc><field name="id">2835</field><field name="title">google-closure-compiler</field><field name="session">JUnit</field><field name="sentence"></field></doc>
<doc><field name="id">2836</field><field name="title">google-closure-compiler</field><field name="session">Protocol Buffers</field><field name="sentence">an encoding of structured data</field></doc>
<doc><field name="id">2837</field><field name="title">google-closure-compiler</field><field name="session">Protocol Buffers</field><field name="sentence"></field></doc>
<doc><field name="id">2838</field><field name="title">google-closure-compiler</field><field name="session">Truth</field><field name="sentence"></field></doc>
<doc><field name="id">2839</field><field name="title">google-closure-compiler</field><field name="session">Ant</field><field name="sentence">without make's wrinkles and with the full portability of pure java code</field></doc>
<doc><field name="id">2840</field><field name="title">google-closure-compiler</field><field name="session">Ant</field><field name="sentence"></field></doc>
<doc><field name="id">2841</field><field name="title">google-closure-compiler</field><field name="session">GSON</field><field name="sentence"></field></doc>
<doc><field name="id">2842</field><field name="title">google-closure-compiler</field><field name="session">Node.js Closure Compiler Externs</field><field name="sentence"></field></doc>
<doc><field name="id">2843</field><field name="title">google-closure-library</field><field name="session">Closure Library</field><field name="sentence">Closure Library is a powerful, low-level JavaScript library designedfor building complex and scalable web applications</field></doc>
<doc><field name="id">2844</field><field name="title">google-closure-library</field><field name="session">Closure Library</field><field name="sentence">It is used by manyGoogle web applications, such as Google Search, Gmail, Google Docs,Google+, Google Maps, and others.For more information, visit the Google Developers  or GitHub  sites.Download the latest stable version on our  releases page Developers, please see the Generated API Documentation See also the goog.ui Demos</field></doc>
<doc><field name="id">2845</field><field name="title">google-closure-library</field><field name="session">Using with Node.js</field><field name="sentence">Install the  official package  from npm.require "google-closure-library" ;goog.require "goog.crypt.Sha1" ;var sha1 = new goog.crypt.Sha1  ;sha1.update "foobar" ;var hash = sha1.digest  ;</field></doc>
<doc><field name="id">2846</field><field name="title">google-closure-linter</field><field name="session">Closure Linter</field><field name="sentence">Please note that the **closure linter is deprecated**</field></doc>
<doc><field name="id">2847</field><field name="title">google-closure-linter</field><field name="session">Closure Linter</field><field name="sentence">Esp</field></doc>
<doc><field name="id">2848</field><field name="title">google-closure-linter</field><field name="session">Closure Linter</field><field name="sentence">if you use ES6features, the tool will not work for you.To install the application, run python ./setup.py installAfter installing, you get two helper applications installed into /usr/local/bin:</field></doc>
<doc><field name="id">2849</field><field name="title">google-closure-stylesheets</field><field name="session">Closure Stylesheets</field><field name="sentence">Closure Stylesheets is an extension to CSS that adds** variables  #variables **, ** functions  #functions **,** conditionals  #conditionals **, and ** mixins  #mixins *CSS</field></doc>
<doc><field name="id">2850</field><field name="title">google-closure-stylesheets</field><field name="session">Closure Stylesheets</field><field name="sentence">The tool also supports ** minification  #minification **,** linting  #linting **, ** RTL flipping  #rtl-flipping **, and CSS class** renaming  #renaming **.</field></doc>
<doc><field name="id">2851</field><field name="title">google-closure-stylesheets</field><field name="session">Get Closure Stylesheets!</field><field name="sentence">Closure Stylesheets is available as a Java jar named closure-stylesheets.jar.You can either  download  a precompiled jar or  build it from source .Using Closure Stylesheets requires Java</field></doc>
<doc><field name="id">2852</field><field name="title">google-closure-stylesheets</field><field name="session">Get Closure Stylesheets!</field><field name="sentence">To make sure that Java is installedcorrectly, try running the following command to print the list of command-lineoptions for Closure Stylesheets: build it from source :Internally at Google, Closure Stylesheets are frequently referred to as "GoogleStylesheets" or "GSS", so you will see references to GSS in the source code  Somedevelopers prefer to be explicit about which files use the Closure Stylesheetsextensions to CSS by using a **.gss*</field></doc>
<doc><field name="id">2853</field><field name="title">google-closure-stylesheets</field><field name="session">Variables</field><field name="sentence">Variables can be defined in Closure Stylesheets using **@def*variable name and then a value</field></doc>
<doc><field name="id">2854</field><field name="title">google-closure-stylesheets</field><field name="session">Variables</field><field name="sentence">Variables can also be defined in terms of othervariables</field></doc>
<doc><field name="id">2855</field><field name="title">google-closure-stylesheets</field><field name="session">Variables</field><field name="sentence">Consider the following file, **variable-example.gss**:@def BG_COLOR@def DIALOG_BORDER_COLOR   rgb 107, 144, 218 ;@def DIALOG_BG_COLORbody {  background-color: BG_COLOR;.dialog {  background-color: DIALOG_BG_COLOR;  border: 1px solid DIALOG_BORDER_COLOR;Running **java -jar closure-stylesheets.jar --pretty-printClosure Stylesheets provides support for several arithmetic functions:purely numeric or CSS sizes with units  though add 3px, 5ex</field></doc>
<doc><field name="id">2856</field><field name="title">google-closure-stylesheets</field><field name="session">Variables</field><field name="sentence">Here is an example of when it might be helpful to use add  :@def LEFT_HAND_NAV_WIDTH@def LEFT_HAND_NAV_PADDING  3px;.left_hand_nav {  position: absolute;  width: LEFT_HAND_NAV_WIDTH;  padding: LEFT_HAND_NAV_PADDING;.content {  position: absolute;  margin-left: add LEFT_HAND_NAV_PADDING,  /Running **java -jar closure-stylesheets.jar --pretty-print CSS3 calc    because they do not allowyou to mix units as calc   does, they can still help produce more maintainableThere are also built-in functions that deal with colors</field></doc>
<doc><field name="id">2857</field><field name="title">google-closure-stylesheets</field><field name="session">Variables</field><field name="sentence">For now, you need to see the code for details, but here are the functions and the arguments that they take:It is also possible to define your own functions in Java by implementing GssFunctionMapProvider and passing the fully-qualified class name to Closure Stylesheets via thelikely want to compose DefaultGssFunctionMapProvider so that your GssFunctionMapProvider provides your custom functions in addition to the built-in arithmetic functions.</field></doc>
<doc><field name="id">2858</field><field name="title">google-closure-stylesheets</field><field name="session">Mixins</field><field name="sentence">Mixins make it possible to reuse a list of parameterized declarations</field></doc>
<doc><field name="id">2859</field><field name="title">google-closure-stylesheets</field><field name="session">Mixins</field><field name="sentence">A mixindefinition  **@defmixin**  can be seen as a function with arguments thatcontains a list of declarations</field></doc>
<doc><field name="id">2860</field><field name="title">google-closure-stylesheets</field><field name="session">Mixins</field><field name="sentence">At the place where a mixin is used **@mixin** , the values for the arguments are defined and the declarationsare inserted</field></doc>
<doc><field name="id">2861</field><field name="title">google-closure-stylesheets</field><field name="session">Mixins</field><field name="sentence">A mixin can be used in any place where declarations are allowed.The names of the arguments in the **@defmixin*Global constants defined with **@def*mixins</field></doc>
<doc><field name="id">2862</field><field name="title">google-closure-stylesheets</field><field name="session">Mixins</field><field name="sentence">They can be used both within the definition of a mixin, or as anargument when using a mixin.For example, consider defining a mixin in **mixin-simple-example.gss*could be used to create a shorthand for declaring the dimensions of an element:@defmixin size WIDTH, HEIGHT  {  width: WIDTH;  height: HEIGHT;.logo {  @mixin size 150px, 55px ;  background-image: url 'Running **java -jar closure-stylesheets.jar --pretty-printcross-browser behavior for styles such as gradients:@defmixin gradient POS, HSL1, HSL2, HSL3, COLOR, FALLBACK_COLOR  {  background-color: FALLBACK_COLOR; /  background-image: -webkit-linear-gradient POS, hsl HSL1, HSL2, HSL3 , COLOR ;  /  /  /.header {  @mixin gradient top, 0%, 50%, 70%, #cc0000, #f07575 ;The above is compiled to:</field></doc>
<doc><field name="id">2863</field><field name="title">google-closure-stylesheets</field><field name="session">Conditionals</field><field name="sentence">Variables can be defined using conditionals with **.goog-inline-block, but it can be done explicitly in Closure Stylesheets byusing conditionals as shown in **conditionals-example.gss**:@if  BROWSER_IE  {  @if  BROWSER_IE6  {  } @elseif  BROWSER_IE7  {  } @else {  }} @elseif  BROWSER_FF2  {  @def GOOG_INLINE_BLOCK_DISPLAY} @else {  @def GOOG_INLINE_BLOCK_DISPLAY.goog-inline-block {  position: relative;  display: GOOG_INLINE_BLOCK_DISPLAY;Values for the conditionals can be set via a **--define*all conditional variables are assumed to be false, so running **java -jarclosure-stylesheets.jar --pretty-print conditionals-example.gss*-jar closure-stylesheets.jar --define BROWSER_IE --define BROWSER_IE6--pretty-print conditionals-example.gss*agent, one must generate a separate stylesheet for each user agent and thenserve it appropriately.</field></doc>
<doc><field name="id">2864</field><field name="title">google-closure-stylesheets</field><field name="session">Additional Features</field><field name="sentence">The Closure Stylesheets tool also offers some features that are not extensionsto CSS.</field></doc>
<doc><field name="id">2865</field><field name="title">google-closure-stylesheets</field><field name="session">Minification</field><field name="sentence">You can concatenate and minify a list of stylesheets with the following command:to write the output to using the **--output-file***MOZILLA**, **OPERA**, **MICROSOFT**, and **KONQUEROR**</field></doc>
<doc><field name="id">2866</field><field name="title">google-closure-stylesheets</field><field name="session">Minification</field><field name="sentence">When this flagis present, all vendor-specific properties for other vendors will be removed.</field></doc>
<doc><field name="id">2867</field><field name="title">google-closure-stylesheets</field><field name="session">Linting</field><field name="sentence">Closure Stylesheets performs some static checks on your CSS</field></doc>
<doc><field name="id">2868</field><field name="title">google-closure-stylesheets</field><field name="session">Linting</field><field name="sentence">For example, itsmost basic function is to ensure that your CSS parses: if there are any parseerrors, Closure Stylesheets will print the errors to standard error and returnwith an exit code of</field></doc>
<doc><field name="id">2869</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">It will also error out when there are unrecognized function names or duplicatestyle declarations</field></doc>
<doc><field name="id">2870</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">For example, if you ran Closure Stylesheets onUnknown function \"urel\" in linting-example.gss at line 4 column 21:  background-image: urel 'Detected multiple identical, non-alternate declarations in the same ruleset.If this is intentional please use the /border-color: rgba 0,0,0,0.1   in linting-example.gss at line 7 column 1:^2 error s In this particular case, the function urel   should have been url  , thoughif you are using a function that is not on the whitelist  see CssFunctionNode for the list of recognized functions, which is admittedly incomplete , then youcan specify **--allowed-non-standard-function*functions that should be whitelisted:It is also possible to disable the check for unknown functions altogether usingthe **--allow-unrecognized-functions*Further, in this example, the multiple declarations of border-color areintentional</field></doc>
<doc><field name="id">2871</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">They are arranged so that user agents that recognize rgba   willuse the second declaration whereas those that do not will fall back on the firstdeclaration</field></doc>
<doc><field name="id">2872</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">In order to suppress this error, use the /annotation that the error message suggests as follows:error</field></doc>
<doc><field name="id">2873</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">It is also common to use this technique with multiple backgrounddeclarations that use -webkit-linear-gradient, -moz-linear-gradient, etc</field></doc>
<doc><field name="id">2874</field><field name="title">google-closure-stylesheets</field><field name="session">--allowed-non-standard-function, --allow-unrecognized-functions</field><field name="sentence">Ingeneral, using  conditionals  #Conditionals.md  to select the appropriatedeclaration based on user agent is preferred; however, that requires theadditional overhead of doing user agent detection and serving the appropriatestylesheet, so using the @alternate annotation is a simpler solution.</field></doc>
<doc><field name="id">2875</field><field name="title">google-closure-stylesheets</field><field name="session">--allow-unrecognized-properties, --allowed-unrecognized-property</field><field name="sentence">By default, Closure Stylesheets validates the names of CSS properties used in astylesheet</field></doc>
<doc><field name="id">2876</field><field name="title">google-closure-stylesheets</field><field name="session">--allow-unrecognized-properties, --allowed-unrecognized-property</field><field name="sentence">We have attempted to capture all legal properties in the hardcoded list of recognized properties that is bundled with Closure Stylesheets</field></doc>
<doc><field name="id">2877</field><field name="title">google-closure-stylesheets</field><field name="session">--allow-unrecognized-properties, --allowed-unrecognized-property</field><field name="sentence">However, you can allow properties thataren't in the list with the **--allowed-unrecognized-property*the file **bleeding-edge.gss**:-webkit-amp-volume is an unrecognized property in bleeding-edge.gss at line 3 column 3:  -webkit-amp-volume: 11;  ^1 error s You can whitelist -webkit-amp-volume with thespecified multiple times, once for each property to whitelist</field></doc>
<doc><field name="id">2878</field><field name="title">google-closure-stylesheets</field><field name="session">--allow-unrecognized-properties, --allowed-unrecognized-property</field><field name="sentence">We discourageusing the blanket --allow-unrecognized-properties because it lets througheverything, including simple spelling mistakes.Note that some recognized properties will emit warnings</field></doc>
<doc><field name="id">2879</field><field name="title">google-closure-stylesheets</field><field name="session">--allow-unrecognized-properties, --allowed-unrecognized-property</field><field name="sentence">These warnings will notbe silenced with the --allowed-unrecognized-property flag.</field></doc>
<doc><field name="id">2880</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">Closure Stylesheets has support for generating left-to-right  LTR  as well asright-to-left  RTL  stylesheets</field></doc>
<doc><field name="id">2881</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">By default, LTR is the assumed directionalityfor both the input and output, though those settings can be overridden byFor example, consider the following stylesheet, **rtl-example.gss**, which isdesigned for an LTR page:.logo {  margin-left: 10px;.shortcut_accelerator {  /  /  border-right:\t2px solid #ccc;  padding: 0 2px 0 4px;Generating the equivalent stylesheet to use on an RTL version of the page can beachieved by running **java -jar closure-stylesheets.jar --pretty-print--output-orientation RTL rtl-example.gss**, which prints:property instead of alongside it:Closure Stylesheets makes it possible to rename CSS class names in the generatedstylesheet, which helps reduce the size of the CSS that is sent down to yourusers</field></doc>
<doc><field name="id">2882</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">Of course, this is not particularly useful unless the class names arerenamed consistently in the HTML and JavaScript files that use theCSS</field></doc>
<doc><field name="id">2883</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">Fortunately, you can use the Closure Compiler  to update the classnames in your JavaScript and Closure Templates  to update theclass names in your HTML.To get the benefits of CSS renaming in Closure, instead of referencing a CSSclass name as a string literal, you must use that string literal as an argumentto goog.getCssName  : css command {namespace example} */{template .dialog}  {$title}  {call .content data=\"all\" /}When you generate the JavaScript for the template, be sure to use the--cssHandlingScheme GOOG option with SoyToJsSrcCompiler</field></doc>
<doc><field name="id">2884</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">This ensures thatthe generated JavaScript code will also use goog.getCssName</field></doc>
<doc><field name="id">2885</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">For example, ifthe above were named **dialog.soy**, then the following command would be usedto create **dialog.soy.js**:// This file was automatically generated from dialog.soy.// Please don't edit this file by hand.goog.provide 'example' ;goog.require 'soy' ;goog.require 'example' ;example.dialog = function opt_data  {  return '            This ensures that when **goog.getCssName 'dialog-content' *returns **'a-b'**</field></doc>
<doc><field name="id">2886</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">In this way, the abbreviated name is used in place of theoriginal name throughout the code.An astute reader will note that so far, we have reduced only the size of thestylesheet, but not the JavaScript</field></doc>
<doc><field name="id">2887</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">To reduce the size of the JavaScript code,we must use the  Closure Compiler  in SIMPLE or ADVANCED mode with the **--process_closure_primitives*default</field></doc>
<doc><field name="id">2888</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">When enabled, if it finds a call to **goog.setCssNameMapping  *any of its inputs, it will use the argument to goog.setCssNameMapping   as thebasis of a renaming map that is applied at compile time</field></doc>
<doc><field name="id">2889</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">To create theappropriate renaming map with Closure Stylesheets, use **CLOSURE_COMPILED*the argument to **--output-renaming-map-format**:our original snippet of JavaScript code:**renaming_map.js**, it will be transformed to the following afterthe behavior of the application.Admittedly, using CSS renaming is a fairly advanced option that requires awell-organized build system to ensure that the appropriate CSS and JS assets areproduced for both development and production</field></doc>
<doc><field name="id">2890</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">See MoreOnCssRenaming for moredetails on this topic.by using the **--excluded_classes_from_renaming*if some of your HTML is generated by a process that does not take CSS renaminginto account</field></doc>
<doc><field name="id">2891</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">For example, if you are using a Python Django server and are usingits template system, then any CSS classes used in those templates will not berenamed  unless you introduce a process to do so</field></doc>
<doc><field name="id">2892</field><field name="title">google-closure-stylesheets</field><field name="session">RTL Flipping</field><field name="sentence">In order to ensure that theJS and CSS that use the HTML reference CSS classes consistently, each CSS classin the Django template should be passed as an argument to Closure Stylesheetswith the **--excluded_classes_from_renaming*References to CSS class names that are excluded from renaming should _never_ bewrapped in goog.getCssName  , or else they run the risk of being partially</field></doc>
<doc><field name="id">2893</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">Closure Templates are a clientdynamically build reusable HTML and UI elements</field></doc>
<doc><field name="id">2894</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">They have a simple syntaxthat is natural for programmers, and you can customize them to fit yourapplication's needs</field></doc>
<doc><field name="id">2895</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">In contrast to traditional templating systems,in whichyou must create one monolithic template per page, you can think ofClosure Templates as small components that you compose to form your userinterface</field></doc>
<doc><field name="id">2896</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">You can also use the built-in message support to easily localizeyour applications.Closure Templates are implemented for both JavaScript and Java, so that you canuse the same templates on both the server and client side</field></doc>
<doc><field name="id">2897</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">They use a data modeland expression syntax that work for either language</field></doc>
<doc><field name="id">2898</field><field name="title">google-closure-templates</field><field name="session">Closure Templates</field><field name="sentence">For the client side,Closure Templates are precompiled into efficient JavaScript.</field></doc>
<doc><field name="id">2899</field><field name="title">google-closure-templates</field><field name="session">What are the benefits of using Closure Templates?</field><field name="sentence">extra readability</field></doc>
<doc><field name="id">2900</field><field name="title">google-closure-templates</field><field name="session">What are the benefits of using Closure Templates?</field><field name="sentence">You can put multiple templates in one source file.</field></doc>
<doc><field name="id">2901</field><field name="title">google-closure-templates</field><field name="session">Getting Started</field><field name="sentence">Closure Templates is widely used and well maintained internally at Google butdoes not currently have staffing to support the open source release</field></doc>
<doc><field name="id">2902</field><field name="title">google-closure-templates</field><field name="session">Getting Started</field><field name="sentence">As suchthis project is mostly a 'code dump' and support is _minimal_</field></doc>
<doc><field name="id">2903</field><field name="title">google-closure-templates</field><field name="session">Getting Started</field><field name="sentence">For certainissues, like build integration we are in an especially bad position to offerTo get assistance you can use any of the following forumsLook through the  documentation Post a question to the  closure-templates-discuss File a  bug on github Though, given our support staffing, we may not be able to help.</field></doc>
<doc><field name="id">2904</field><field name="title">google-closure-templates</field><field name="session">Using Closure Templates with other open source frameworks</field><field name="sentence">There are many Closure Template integrations with other popular open sourceframeworks</field></doc>
<doc><field name="id">2905</field><field name="title">google-closure-templates</field><field name="session">Using Closure Templates with other open source frameworks</field><field name="sentence">Here are a few options for getting started:  *  *  *</field></doc>
<doc><field name="id">2906</field><field name="title">google-cloud-berg</field><field name="session">Design goal</field><field name="sentence">Berg is a minimal tool for running experiments with GPU instances on Cloud and storing the results in a bucket</field></doc>
<doc><field name="id">2907</field><field name="title">google-cloud-berg</field><field name="session">Design goal</field><field name="sentence">It’s 400 lines of python</field></doc>
<doc><field name="id">2908</field><field name="title">google-cloud-berg</field><field name="session">Non-goals</field><field name="sentence">Clone and install the berg tool on your local machineAfter installing gcloud, run the following locallyLaunch two experiments  that each use all the GPUs on single instance, and shut down after they complete their job The python command will be run from the root of your github repo</field></doc>
<doc><field name="id">2909</field><field name="title">google-cloud-berg</field><field name="session">Non-goals</field><field name="sentence">It will run rsync files from /root/berg_results/sweep1/ and results will show up in  gs:///berg_results/sweep1</field></doc>
<doc><field name="id">2910</field><field name="title">google-cloud-berg</field><field name="session">Launch a devbox with 4 p100 gpus, CUDA, Tensorflow and Pytorch</field><field name="sentence">After it starts you can ssh into it with berg ssh</field></doc>
<doc><field name="id">2911</field><field name="title">google-cloud-berg</field><field name="session">How does berg work?</field><field name="sentence">The best way to understand berg is to just read the code  it's very small</field></doc>
<doc><field name="id">2912</field><field name="title">google-cloud-berg</field><field name="session">How does berg work?</field><field name="sentence">Here’s an even shorter TLDR:Executing berg run  does the following:Helpful shortcuts  all of which are aliases for gcloud commands You can also use the gce web interface which allows filtering and bulk management of all of your instances.</field></doc>
<doc><field name="id">2913</field><field name="title">google-cloud-berg</field><field name="session">Running a large scale job with MPI</field><field name="sentence">This will start num_machines devboxes with 4 GPUs each</field></doc>
<doc><field name="id">2914</field><field name="title">google-cloud-berg</field><field name="session">Running a large scale job with MPI</field><field name="sentence">Then ssh into the first machine, and run mpi  to run your program across all machines using MPI</field></doc>
<doc><field name="id">2915</field><field name="title">google-cloud-berg</field><field name="session">Running a large scale job with MPI</field><field name="sentence">Here mpi is an alias calling mpirun with all the necessary flags, and starting one worker process per GPU in your cluster</field></doc>
<doc><field name="id">2916</field><field name="title">google-cloud-berg</field><field name="session">Running a large scale job with MPI</field><field name="sentence">The easiest way of running multi machine tensorflow/pytorch experiments is to use Horovod, which now comes pre-installed on the golden image.</field></doc>
<doc><field name="id">2917</field><field name="title">google-cloud-berg</field><field name="session">Creating a custom golden image</field><field name="sentence">If you’d like to use a different image, you can edit the default_image value in ~/.berg/berg.jsonWe recommend starting with one of the  official GCE deep learning images  and then modifying it slightly.Berg will log into your image as the root user, and requires the following:</field></doc>
<doc><field name="id">2918</field><field name="title">google-cloud-cup-android</field><field name="session">Cloud Cup Android client</field><field name="sentence">This repository contains the source code of the player screen of the Cloud Cup game</field></doc>
<doc><field name="id">2919</field><field name="title">google-cloud-cup-android</field><field name="session">Cloud Cup Android client</field><field name="sentence">Click for video: ! Cloud Cup video thumbnail  It is an Android application, designed to be built using Android Studio.It relies on the  Firebase Android SDK  to provide backend and real-time features.This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">2920</field><field name="title">google-cloud-cup</field><field name="session">Cloud Cup Main screen</field><field name="sentence">This repository contains the source code of the main screen of the Cloud Cup game.Click for video: ! Cloud Cup video thumbnail  It is a web application, built using AngularJS and relying on Firebase</field></doc>
<doc><field name="id">2921</field><field name="title">google-cloud-cup</field><field name="session">Cloud Cup Main screen</field><field name="sentence">It has been boostrapped using the  angular-seed  project.This is not an official Google product  experimental or otherwise , it is just code that happens to be owned by Google.</field></doc>
<doc><field name="id">2922</field><field name="title">google-cloud-cup</field><field name="session">Install Dependencies</field><field name="sentence">We have two kinds of dependencies in this project: tools and angular framework code</field></doc>
<doc><field name="id">2923</field><field name="title">google-cloud-cup</field><field name="session">Install Dependencies</field><field name="sentence">The tools helpus manage and test the application.folders in your project.angularfire-seed changes this location through the .bowerrc file</field></doc>
<doc><field name="id">2924</field><field name="title">google-cloud-cup</field><field name="session">Install Dependencies</field><field name="sentence">Putting it in the app folder makesit easier to serve the files by a webserver.*</field></doc>
<doc><field name="id">2925</field><field name="title">google-cloud-cup</field><field name="session">Configure the Application</field><field name="sentence">Open app/js/config.js and add your Firebase URL Go to your Firebase dashboard and enable email/password authentication under the Simple Login tab Copy/paste the contents of config/security-rules.json into your Security tab, which is also under your Firebase dashboard.</field></doc>
<doc><field name="id">2926</field><field name="title">google-cloud-cup</field><field name="session">Run the Application</field><field name="sentence">We have preconfigured the project with a simple development web server</field></doc>
<doc><field name="id">2927</field><field name="title">google-cloud-cup</field><field name="session">Run the Application</field><field name="sentence">The simplest way to startthis server is:</field></doc>
<doc><field name="id">2928</field><field name="title">google-cloud-cup</field><field name="session">Deploying the application to Firebase Hosting</field><field name="sentence">Simply type firebase deploy</field></doc>
<doc><field name="id">2929</field><field name="title">google-cloud-print-connector</field><field name="session">Introduction</field><field name="sentence">Share printers from your Windows, Linux, FreeBSD or OS X computer with ChromeOS and Android devices, using the Cloud Print Connector</field></doc>
<doc><field name="id">2930</field><field name="title">google-cloud-print-connector</field><field name="session">Introduction</field><field name="sentence">The Connector is a purpose-built system process</field></doc>
<doc><field name="id">2931</field><field name="title">google-cloud-print-connector</field><field name="session">Introduction</field><field name="sentence">It can share hundreds of printers on a powerful server, or one printer on a Raspberry Pi.Lots of help can be found in  the wiki</field></doc>
<doc><field name="id">2932</field><field name="title">google-cloud-print-connector</field><field name="session">Mailing list</field><field name="sentence">Please join the mailing list at  Anyone can post and view messages.</field></doc>
<doc><field name="id">2933</field><field name="title">google-cloud-print-connector</field><field name="session">Build Status</field><field name="sentence">Copyright 2015 Google Inc</field></doc>
<doc><field name="id">2934</field><field name="title">google-cloud-print-connector</field><field name="session">Build Status</field><field name="sentence">All rights reserved.Use of this source code is governed by a BSD-stylelicense that can be found in the LICENSE file or at</field></doc>
<doc><field name="id">2935</field><field name="title">google-cloudevents-demo</field><field name="session">Demo for Kubecon</field><field name="sentence">This repo contains source for the CloudEvents demo at KubeCon Copenhagen.The demo receives CloudEvents version 0.1 from from the storage systems inAmazon S3, Microsoft Azure, and Google Cloud Storage</field></doc>
<doc><field name="id">2936</field><field name="title">google-cloudevents-demo</field><field name="session">Demo for Kubecon</field><field name="sentence">The event handlerthen performs some trivial operation  Computer vision  and posts the resultsto Twitter.You can see a live version of this demo at @CloudEventsBot</field></doc>
<doc><field name="id">2937</field><field name="title">google-cloudevents-demo</field><field name="session">Code Structure</field><field name="sentence">Structured HTTP encoding.| Product| --------------------| pkg/event| cmd/sendevent| cmd/twittervision | See separate  README  cmd/twittervision/README.md  || eventsource</field></doc>
<doc><field name="id">2938</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">cloudprober.org Cloudprober is a monitoring software that makes it super-easy to monitoravailability and performance of various components of your system</field></doc>
<doc><field name="id">2939</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">Cloudproberemploys the "active" monitoring model</field></doc>
<doc><field name="id">2940</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">It runs probes against  or on  yourcomponents to verify that they are working as expected</field></doc>
<doc><field name="id">2941</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">For example, it can runa probe to verify that your frontends can reach your backends</field></doc>
<doc><field name="id">2942</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">Similarly it canrun a probe to verify that your in-Cloud VMs can actually reach your on-premisesystems</field></doc>
<doc><field name="id">2943</field><field name="title">google-cloudprober</field><field name="session">Cloudprober</field><field name="sentence">This kind of monitoring makes it possible to monitor your systems'interfaces regardless of the implementation and helps you quickly pin downwhat's broken in your system.! Cloudprober UseCase</field></doc>
<doc><field name="id">2944</field><field name="title">google-cloudprober</field><field name="session">Features</field><field name="sentence">Visit  cloudprober.org  to get started with Cloudprober.We'd love to hear your feedback</field></doc>
<doc><field name="id">2945</field><field name="title">google-cloudprober</field><field name="session">Features</field><field name="sentence">If you're using Cloudprober, would you pleasemind sharing how you use it by adding a comment to the  issue #123   It will be a great help inplanning Cloudprober's future progression.Join  Cloudprober Group  fordiscussion and release announcements.</field></doc>
<doc><field name="id">2946</field><field name="title">google-clspv</field><field name="session">clspv</field><field name="sentence">compute shaders.It consists of:Clspv depends on external projects:Clspv is licensed under the terms of the  Apache 2.0 license  LICENSE .The  AUTHORS  AUTHORS  file lists the copyright owners, while individualcredit is given in the  CONTRIBUTORS  CONTRIBUTORS  file.To contribute, see  CONTRIBUTING.md  CONTRIBUTING.md .Materials in projects Clspv depends on are licensed undertheir own terms.Clspv is not an official Google product.</field></doc>
<doc><field name="id">2947</field><field name="title">google-clspv</field><field name="session">Status</field><field name="sentence">The compiler is an incomplete prototype, with many rough edges.The input language is a subset of OpenCL C version 1.The  OpenCL C on Vulkan Specification  docs/OpenCLCOnVulkan.md describes the specific subset, and also the mapping into Vulkan compute</field></doc>
<doc><field name="id">2948</field><field name="title">google-clspv</field><field name="session">Examples</field><field name="sentence">Compile a set of kernels into a SPIR-V binary module:Emit SPIR-V assembly:Emit SPIR-V assembly to standard output:Emit the binary as a C initializer list, for easy embedding of a shader inin a C or C++ program source:Predefine some preprocessor symbols:Use OpenCL compiler options:Show help:</field></doc>
<doc><field name="id">2949</field><field name="title">google-clspv</field><field name="session">Tools</field><field name="sentence">You will need:Clspv depends on the sources for other projects, at specific commits.Run the following command to download those dependencies, and place themin the third_party directory:</field></doc>
<doc><field name="id">2950</field><field name="title">google-clspv</field><field name="session">Building</field><field name="sentence">Then, create a build directory:Then configure and build the code:This will build the clspv command line compiler and place it inlocation bin/clspv under the build directory.</field></doc>
<doc><field name="id">2951</field><field name="title">google-clspv</field><field name="session">Using Ninja to build, and other build options</field><field name="sentence">We recommend you use the  Ninja  Ninja  build tool if it's available.To do so, replace the last two commands with:Other useful configuration options  the first cmake command :See the  CMake  CMake   documentation  CMake-doc  for more generic options.</field></doc>
<doc><field name="id">2952</field><field name="title">google-clspv</field><field name="session">Test</field><field name="sentence">To run the test suite from within the build directory:Or if you are using Ninja: Clang :  CMake-doc :  CMake :  LLVM :  Ninja :  SPIRV-Headers :  SPIRV-Tools :</field></doc>
<doc><field name="id">2953</field><field name="title">google-cluster-data</field><field name="session">Overview</field><field name="sentence">This repository describes various traces from parts of the Google clustermanagement software and systems.Please let us know about any issues, insights, or papers you publish using thesetraces bysending  email  mailto:googleclusterdata-discuss@googlegroups.com to the discussion group  And please join this group to be kept up to date with new announcements! The more specific the data, the more likely we are to be able to help you.If you have  or generate  tools that help analyze or decode the trace data, oruseful analyses, do please share them with this community.A ** trace bibliography  bibliography.bib *about or derived from these traces</field></doc>
<doc><field name="id">2954</field><field name="title">google-cluster-data</field><field name="session">Overview</field><field name="sentence">If you publish one, please email  mailto:googleclusterdata-discuss@googlegroups.com  a bibtex entry forit, so it can be added to the bibliography</field></doc>
<doc><field name="id">2955</field><field name="title">google-cluster-data</field><field name="session">Overview</field><field name="sentence">Try to mimic the format used thereas exactly as possible</field></doc>
<doc><field name="id">2956</field><field name="title">google-cluster-data</field><field name="session">Cluster workload traces</field><field name="sentence">These are traces of workloads running on Google compute cells.</field></doc>
<doc><field name="id">2957</field><field name="title">google-cluster-data</field><field name="session">ETA traces</field><field name="sentence">These are  execution traces from ETA  ETAExplorationTraces.md   ExploratoryTesting Architecture  between distrinbuted, concurrently-executing components.</field></doc>
<doc><field name="id">2958</field><field name="title">google-cluster-insight</field><field name="session">Cluster Insight: a context graph generator for Kubernetes clusters</field><field name="sentence">Cluster Insight is a Kubernetes service that collects runtime metadata about resources in a Kubernetes cluster, and infers relationships between them to create a *context graph*.A context graph is a point-in-time snapshot of the cluster’s state</field></doc>
<doc><field name="id">2959</field><field name="title">google-cluster-insight</field><field name="session">Cluster Insight: a context graph generator for Kubernetes clusters</field><field name="sentence">Clients of the Cluster Insight service, such as user interfaces, can retrieve context graphs through the service's REST API</field></doc>
<doc><field name="id">2960</field><field name="title">google-cluster-insight</field><field name="session">Cluster Insight: a context graph generator for Kubernetes clusters</field><field name="sentence">Each call may produce a different context graph, reflecting the inherent dynamicity in the Kubernetes cluster.A context graph provides contextual information that can be combined with resource level monitoring data to enable visual navigation of the dynamic state of a Kubernetes cluster.The nodes of the context graph are cluster resources  cluster, nodes, services, replication controllers, pods, containers, and images , and the edges are the inferred relationships  contains, runs, monitors, loadBalances, createdFrom .</field></doc>
<doc><field name="id">2961</field><field name="title">google-cluster-insight</field><field name="session">How to set up and access the service</field><field name="sentence">Deploying Cluster Insight involves creating a service and a replication controller</field></doc>
<doc><field name="id">2962</field><field name="title">google-cluster-insight</field><field name="session">How to set up and access the service</field><field name="sentence">The replication controller creates one pod, which contains one container</field></doc>
<doc><field name="id">2963</field><field name="title">google-cluster-insight</field><field name="session">How to set up and access the service</field><field name="sentence">The container image is  here  on Docker Hub.</field></doc>
<doc><field name="id">2964</field><field name="title">google-cluster-insight</field><field name="session">Preliminaries</field><field name="sentence">In the following, we will assume that you have a Kubernetes cluster running and kubectl configured to talk to it</field></doc>
<doc><field name="id">2965</field><field name="title">google-cluster-insight</field><field name="session">Preliminaries</field><field name="sentence">If you have set up the Kubernetes cluster from the command line with gcloud container clusters create or kube-up.sh, then kubectl will have been configured for you</field></doc>
<doc><field name="id">2966</field><field name="title">google-cluster-insight</field><field name="session">Preliminaries</field><field name="sentence">If you have set it up from the Google Developers Console, you can configure kubectl by running gcloud container clusters get-credentials.If you have several Kubernetes clusters configured, you can determine the corresponding *context names</field></doc>
<doc><field name="id">2967</field><field name="title">google-cluster-insight</field><field name="session">Setup</field><field name="sentence">Assuming you have configured kubectl to talk to your Kubernetes cluster, deploying Cluster Insight is a simple matter of invoking kubectl create:</field></doc>
<doc><field name="id">2968</field><field name="title">google-cluster-insight</field><field name="session">Access</field><field name="sentence">Cluster Insight provides detailed information about your cluster, including the values of environment variables, which many people use to inject secret credentials into containers</field></doc>
<doc><field name="id">2969</field><field name="title">google-cluster-insight</field><field name="session">Access</field><field name="sentence">Access to its API needs to be restricted</field></doc>
<doc><field name="id">2970</field><field name="title">google-cluster-insight</field><field name="session">Access</field><field name="sentence">An easy and safe way to access it is using kubectl proxy.Cluster Insight makes its REST API available through the cluster-insight service in the default namespace, on the named port cluster-insight</field></doc>
<doc><field name="id">2971</field><field name="title">google-cluster-insight</field><field name="session">Access</field><field name="sentence">With kubectl proxy running, the help page for the API will be available at the following URL:It is easy to run Cluster Insight locally on your workstation for development purposes:git clone  --branch=v2cd cluster-insight/collectorpip install -r requirements.txtexport KUBERNETES_API=python collector.py --debug --host=localhostRunning the pip and python commands above under  virtualenv  is highly recommended, but not required.Now the Cluster Insight help page will be available at    and if you have kubectl proxy running, the REST API will be operational.</field></doc>
<doc><field name="id">2972</field><field name="title">google-cluster-insight</field><field name="session">REST API</field><field name="sentence">Cluster Insight makes available the following endpoints:</field></doc>
<doc><field name="id">2973</field><field name="title">google-cluster-insight</field><field name="session">Context graph format</field><field name="sentence">The context graph is a JSON document with the following format:Resources and relations have a timestamp attribute, indicating when they were first observed or inferred, respectively</field></doc>
<doc><field name="id">2974</field><field name="title">google-cluster-insight</field><field name="session">Context graph format</field><field name="sentence">The timestamp value should remain constant as long as the corresponding resource or relation did not change substantially.When comparing resource values, we compute the hash of the JSON representation after removing the attributes timestamp, lastHeartbeatTime and resourceVersion, because their values are ephemeral and do not indicate a substantial change in the corresponding resource</field></doc>
<doc><field name="id">2975</field><field name="title">google-cluster-insight</field><field name="session">Context graph format</field><field name="sentence">All data older than one hour is deleted automatically from the cache</field></doc>
<doc><field name="id">2976</field><field name="title">google-cluster-insight</field><field name="session">Context graph format</field><field name="sentence">The value of the timestamp attribute will therefore remain constant for at most one hour.The entire context graph has a separate timestamp, which is the maximum of the timestamps of the resources and relations contained in the graph</field></doc>
<doc><field name="id">2977</field><field name="title">google-cluster-insight</field><field name="session">Context graph format</field><field name="sentence">If the timestamp of the entire context graph did not change, then there wasno substantial change in any of the resources and relations inside it.</field></doc>
<doc><field name="id">2978</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Cluster scheduler simulator overview</field><field name="sentence">This simulator can be used to prototype and compare different cluster scheduling strategies and policies</field></doc>
<doc><field name="id">2979</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Cluster scheduler simulator overview</field><field name="sentence">It generates synthetic cluster workloads from empirical parameter distributions  thus generating unique workloads even from a small amount of input data , simulates their scheduling and execution using a discrete event simulator, and finally permits analysis of scheduling performance metrics.The simulator was originally written as part of research on the "Omega" shared-state cluster scheduling architecture at Google</field></doc>
<doc><field name="id">2980</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Cluster scheduler simulator overview</field><field name="sentence">A paper on Omega, published at EuroSys 2013, uses of this simulator for the comparative evaluation of Omega and other alternative architectures  referred to as a "lightweight" simulator there   1</field></doc>
<doc><field name="id">2981</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Cluster scheduler simulator overview</field><field name="sentence">As such, the simulators design is somewhat geared towards the comparative evaluation needs of this paper, but it does also permit more general experimentation with:</field></doc>
<doc><field name="id">2982</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Downloading, building, and running</field><field name="sentence">The source code for the simulator is available in a Git repository hosted on Google Code</field></doc>
<doc><field name="id">2983</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Downloading, building, and running</field><field name="sentence">Instructions for downloading  can be found at at The simulator is written in Scala, and requires the Simple Build Tool  sbt  to run</field></doc>
<doc><field name="id">2984</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Downloading, building, and running</field><field name="sentence">A copy of sbt is package with the source code, but you will need the following prerequisites in order to run the simulator:</field></doc>
<doc><field name="id">2985</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Using command line flags</field><field name="sentence">The simulator can be passed some command-line arugments via configuration flags, such as --thread-pool-size NUM_THREADS_INT and --random-seed SEED_VAL_INT</field></doc>
<doc><field name="id">2986</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Using command line flags</field><field name="sentence">To view all options run:Note that when passing command line options to the sbt run command you need to include the word run and all of the options that follow it within a single set of quotes</field></doc>
<doc><field name="id">2987</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Using command line flags</field><field name="sentence">sbt can also be used via the sbt console by simply running bin/sbt which will drop you at a prompt</field></doc>
<doc><field name="id">2988</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Using command line flags</field><field name="sentence">If you are using this sbt console option, you do not need to put quotes around the run command and any flags you pass.</field></doc>
<doc><field name="id">2989</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuration file</field><field name="sentence">If a file conf/cluster-sim-env.sh exists, it will be sourced in the shell before the simulator is run</field></doc>
<doc><field name="id">2990</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuration file</field><field name="sentence">This was added as a way of setting up the JVM  e.g</field></doc>
<doc><field name="id">2991</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuration file</field><field name="sentence">heap size  for simulator runs</field></doc>
<doc><field name="id">2992</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuration file</field><field name="sentence">Check out conf/cluster-sim-env.sh.template as a starting point; you will need to uncomment and possibly modify the example configuration value set in that template file  and, of course, you will need to create a copy of the file removing the ".template" suffix .</field></doc>
<doc><field name="id">2993</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">The simulation is controlled by the experiments configured in the src/main/scala/Simulation.scala setup file</field></doc>
<doc><field name="id">2994</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">Comments in the file explain how to set up different workloads, workload-to-scheduler mappings and simulated cluster and machine sizes.Most of the workload setup happens in src/main/scala/Workloads.scala, so read through that file and make modifications there to have the simulator read from a trace file of your own  see more below about the type of trace files the simulator uses, and the example files included .Workloads in the simulator are generated from *empirical parameter distributions*</field></doc>
<doc><field name="id">2995</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">These are typically based on cluster *snapshotsFor further details, see traces/README.txt and traces/job-distribution-traces/README.txt.**Please note that the resource amounts specified in the example data files, and the example cluster machines configured in Simulation.scala do *notA possible starting point for generating realistic input data is the public Google cluster trace  2, 3</field></doc>
<doc><field name="id">2996</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">It should be straightforward to write scripts that extract the relevant data from the public trace's event logs</field></doc>
<doc><field name="id">2997</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">Although we do not provide such scripts, it is worth noting that the "cluster C" workload in the EuroSys paper  1  represents the same workload as the public trace</field></doc>
<doc><field name="id">2998</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Configuring experiments</field><field name="sentence">If you do write scripts for converting the public trace into simulator format, please let us know, and we will happily include them in the simulator code release!</field></doc>
<doc><field name="id">2999</field><field name="title">google-cluster-scheduler-simulator</field><field name="session">Experimental results: post-processing</field><field name="sentence">Experimental results are stored in serialized Protocol Buffers in the experiment_results directory at the root of the source tree by default: one subdirectory for each experiment, and with a unique name identifying the experimental setup as well as the start time</field></doc>
